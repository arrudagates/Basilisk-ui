(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"./.storybook/preview.js-generated-config-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,"parameters",(function(){return parameters}));var ClientApi=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),esm=__webpack_require__("./node_modules/@storybook/client-logger/dist/esm/index.js"),parameters={actions:{argTypesRegex:"^on[A-Z].*"},controls:{matchers:{color:/(background|color)$/i,date:/Date$/}}};function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":case"argTypes":return esm.a.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify(value));case"decorators":return value.forEach((function(decorator){return Object(ClientApi.d)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return Object(ClientApi.e)(loader,!1)}));case"parameters":return Object(ClientApi.f)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return Object(ClientApi.b)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return Object(ClientApi.c)(enhancer)}));case"render":return Object(ClientApi.g)(value);case"globals":case"globalTypes":var v={};return v[key]=value,Object(ClientApi.f)(v,!1);case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./generated-stories-entry.js":function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js").configure)([__webpack_require__("./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.mdx)$"),__webpack_require__("./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx))$")],module,!1)}).call(this,__webpack_require__("./node_modules/webpack/buildin/module.js")(module))},"./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx))$":function(module,exports,__webpack_require__){var map={"./components/Balance/AssetBalanceInput/AssetBalanceInput.stories.tsx":"./src/components/Balance/AssetBalanceInput/AssetBalanceInput.stories.tsx","./components/Balance/BalanceInput/BalanceInput.stories.tsx":"./src/components/Balance/BalanceInput/BalanceInput.stories.tsx","./components/Balance/FormattedBalance/FormattedBalance.stories.tsx":"./src/components/Balance/FormattedBalance/FormattedBalance.stories.tsx","./components/Button/Button.stories.tsx":"./src/components/Button/Button.stories.tsx","./components/Chart/ChartHeader/ChartHeader.stories.tsx":"./src/components/Chart/ChartHeader/ChartHeader.stories.tsx","./components/Chart/ChartTicks/ChartTicks.stories.tsx":"./src/components/Chart/ChartTicks/ChartTicks.stories.tsx","./components/Chart/LineChart/LineChart.stories.tsx":"./src/components/Chart/LineChart/LineChart.stories.tsx","./components/Chart/TradeChart/TradeChart.stories.tsx":"./src/components/Chart/TradeChart/TradeChart.stories.tsx","./components/Input/TokenInput.stories.tsx":"./src/components/Input/TokenInput.stories.tsx","./components/Navigation/Navigation.stories.tsx":"./src/components/Navigation/Navigation.stories.tsx","./components/Trade/TradeForm_old.stories.tsx":"./src/components/Trade/TradeForm_old.stories.tsx","./misc/Colors.stories.tsx":"./src/misc/Colors.stories.tsx","./pages/TradePage_old.stories.tsx":"./src/pages/TradePage_old.stories.tsx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx))$"},"./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.mdx)$":function(module,exports){function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=function(){return[]},webpackEmptyContext.resolve=webpackEmptyContext,module.exports=webpackEmptyContext,webpackEmptyContext.id="./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.mdx)$"},"./src/components/Balance/AssetBalanceInput/AssetBalanceInput.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));var objectSpread2=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),react=__webpack_require__("./node_modules/react/index.js"),index_esm=__webpack_require__("./node_modules/react-hook-form/dist/index.esm.js"),FormattedBalance=__webpack_require__("./src/components/Balance/FormattedBalance/FormattedBalance.tsx"),BalanceInput=__webpack_require__("./src/components/Balance/BalanceInput/BalanceInput.tsx"),slicedToArray=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react_dom=__webpack_require__("./node_modules/react-dom/index.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),AssetSelector_AssetSelector=function AssetSelector(_ref){var assets=_ref.assets,onAssetSelected=_ref.onAssetSelected;return Object(jsx_runtime.jsxs)("div",{children:[Object(jsx_runtime.jsx)("h1",{children:"Select an asset"}),null==assets?void 0:assets.map((function(asset,i){return Object(jsx_runtime.jsx)("p",{onClick:function onClick(_){return onAssetSelected(asset)},children:asset.id},i)}))]})};try{AssetSelector_AssetSelector.displayName="AssetSelector",AssetSelector_AssetSelector.__docgenInfo={description:"",displayName:"AssetSelector",props:{assets:{defaultValue:null,description:"",name:"assets",required:!1,type:{name:"Asset[]"}},onAssetSelected:{defaultValue:null,description:"",name:"onAssetSelected",required:!0,type:{name:"(asset: Asset) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Balance/AssetBalanceInput/AssetSelector/AssetSelector.tsx#AssetSelector"]={docgenInfo:AssetSelector_AssetSelector.__docgenInfo,name:"AssetSelector",path:"src/components/Balance/AssetBalanceInput/AssetSelector/AssetSelector.tsx#AssetSelector"})}catch(__react_docgen_typescript_loader_error){}var useModalPortalElement_useModalPortalElement=function useModalPortalElement(_ref){var assets=_ref.assets,onAssetSelected=_ref.onAssetSelected,handleAssetSelected=Object(react.useCallback)((function(closeModal){return function(asset){closeModal(),onAssetSelected(asset)}}),[]);return function(_ref2){var closeModal=_ref2.closeModal;return Object(jsx_runtime.jsx)(AssetSelector_AssetSelector,{assets:assets,onAssetSelected:handleAssetSelected(closeModal)})}};try{useModalPortalElement_useModalPortalElement.displayName="useModalPortalElement",useModalPortalElement_useModalPortalElement.__docgenInfo={description:"",displayName:"useModalPortalElement",props:{assets:{defaultValue:null,description:"",name:"assets",required:!1,type:{name:"Asset[]"}},onAssetSelected:{defaultValue:null,description:"",name:"onAssetSelected",required:!0,type:{name:"(asset: Asset) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Balance/AssetBalanceInput/useModalPortalElement.tsx#useModalPortalElement"]={docgenInfo:useModalPortalElement_useModalPortalElement.__docgenInfo,name:"useModalPortalElement",path:"src/components/Balance/AssetBalanceInput/useModalPortalElement.tsx#useModalPortalElement"})}catch(__react_docgen_typescript_loader_error){}var AssetBalanceInput_AssetBalanceInput=function AssetBalanceInput(_ref){var modalContainerRef=_ref.modalContainerRef,balanceInputProps=_ref.balanceInputProps,asset=_ref.asset,assets=_ref.assets,onAssetSelected=_ref.onAssetSelected,_useModalPortal=function useModalPortal(elementFactory,container){var _useState=Object(react.useState)(),_useState2=Object(slicedToArray.a)(_useState,2),modalPortal=_useState2[0],setModalPortal=_useState2[1],_useState3=Object(react.useState)(!1),_useState4=Object(slicedToArray.a)(_useState3,2),isModalOpen=_useState4[0],setIsModalOpen=_useState4[1],toggleModal=Object(react.useCallback)((function(){return setIsModalOpen((function(isModalOpen){return!isModalOpen}))}),[setIsModalOpen]),openModal=Object(react.useCallback)((function(){return setIsModalOpen(!0)}),[setIsModalOpen]),closeModal=Object(react.useCallback)((function(){return setIsModalOpen(!1)}),[setIsModalOpen]);return Object(react.useEffect)((function(){container.current&&setModalPortal(Object(react_dom.createPortal)(elementFactory({toggleModal:toggleModal,openModal:openModal,closeModal:closeModal}),container.current))}),[container.current]),{toggleModal:toggleModal,openModal:openModal,closeModal:closeModal,modalPortal:isModalOpen?modalPortal:void 0}}(useModalPortalElement_useModalPortalElement({assets:assets,onAssetSelected:onAssetSelected}),modalContainerRef),openModal=_useModalPortal.openModal,modalPortal=_useModalPortal.modalPortal,handleAssetSelectorClick=Object(react.useCallback)((function(){return openModal()}),[openModal]);return Object(jsx_runtime.jsxs)("div",{children:[modalPortal,Object(jsx_runtime.jsx)("div",{children:Object(jsx_runtime.jsx)("button",{onClick:handleAssetSelectorClick,children:null==asset?void 0:asset.id})}),Object(jsx_runtime.jsx)(BalanceInput.a,Object(objectSpread2.a)({},balanceInputProps))]})};try{AssetBalanceInput_AssetBalanceInput.displayName="AssetBalanceInput",AssetBalanceInput_AssetBalanceInput.__docgenInfo={description:"",displayName:"AssetBalanceInput",props:{modalContainerRef:{defaultValue:null,description:"",name:"modalContainerRef",required:!0,type:{name:"MutableRefObject<HTMLDivElement | null>"}},balanceInputProps:{defaultValue:null,description:"",name:"balanceInputProps",required:!0,type:{name:"BalanceInputProps"}},asset:{defaultValue:null,description:"",name:"asset",required:!1,type:{name:"Asset"}},assets:{defaultValue:null,description:"",name:"assets",required:!1,type:{name:"Asset[]"}},onAssetSelected:{defaultValue:null,description:"",name:"onAssetSelected",required:!0,type:{name:"(asset: Asset) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Balance/AssetBalanceInput/AssetBalanceInput.tsx#AssetBalanceInput"]={docgenInfo:AssetBalanceInput_AssetBalanceInput.__docgenInfo,name:"AssetBalanceInput",path:"src/components/Balance/AssetBalanceInput/AssetBalanceInput.tsx#AssetBalanceInput"})}catch(__react_docgen_typescript_loader_error){}__webpack_exports__.default={title:"components/Balance/AssetBalanceInput",component:AssetBalanceInput_AssetBalanceInput,args:{asset:{id:"0"},assets:[{id:"0"},{id:"1"}],balanceInputProps:{unit:FormattedBalance.b.k,name:"test-input"}}};var Default=function Template(args){var modalContainerRef=Object(react.useRef)(null),methods=Object(index_esm.c)();return Object(jsx_runtime.jsxs)("div",{children:[Object(jsx_runtime.jsx)("div",{ref:modalContainerRef}),Object(jsx_runtime.jsx)(index_esm.b,Object(objectSpread2.a)(Object(objectSpread2.a)({},methods),{},{children:Object(jsx_runtime.jsx)("form",{onSubmit:methods.handleSubmit((function(){})),children:Object(jsx_runtime.jsx)(AssetBalanceInput_AssetBalanceInput,Object(objectSpread2.a)(Object(objectSpread2.a)({},args),{},{modalContainerRef:modalContainerRef}))})}))]})}.bind({});Default.parameters=Object(objectSpread2.a)({storySource:{source:"(args) => {\n    const modalContainerRef = useRef<HTMLDivElement | null>(null);\n    const methods = useForm();\n\n    return <div>\n        {/* This is where the underlying modal should be rendered */}\n        <div ref={modalContainerRef}></div>\n\n        <FormProvider {...methods}>\n            <form onSubmit={methods.handleSubmit(() => {})}>\n                {/* \n                    Pass the ref to the element above, so that the TokenBalanceInput\n                    can render the modal there.\n                */}\n                <AssetBalanceInput {...args} modalContainerRef={modalContainerRef}/>\n            </form>\n        </FormProvider>\n    </div>\n}"}},Default.parameters)},"./src/components/Balance/BalanceInput/BalanceInput.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));var _Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),react_hook_form__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react-hook-form/dist/index.esm.js"),_hooks_math_useFromPrecision__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/hooks/math/useFromPrecision.tsx"),_FormattedBalance_FormattedBalance__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/Balance/FormattedBalance/FormattedBalance.tsx"),_BalanceInput__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/Balance/BalanceInput/BalanceInput.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/react/jsx-runtime.js"),args={props:[{unit:_FormattedBalance_FormattedBalance__WEBPACK_IMPORTED_MODULE_4__.b.k,name:"balanceInputExample_k"},{unit:_FormattedBalance_FormattedBalance__WEBPACK_IMPORTED_MODULE_4__.b.NONE,name:"balanceInputExample_NONE"},{unit:_FormattedBalance_FormattedBalance__WEBPACK_IMPORTED_MODULE_4__.b.m,name:"balanceInputExample_m"},{unit:_FormattedBalance_FormattedBalance__WEBPACK_IMPORTED_MODULE_4__.b.p,name:"balanceInputExample_p"}]};__webpack_exports__.default={title:"components/Balance/BalanceInput",component:_BalanceInput__WEBPACK_IMPORTED_MODULE_5__.a,args:args};var Default=function Template(args){var methods=Object(react_hook_form__WEBPACK_IMPORTED_MODULE_2__.c)({}),onSubmit=Object(react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((function(data){Object.keys(data).forEach((function(key){console.log(Object(_hooks_math_useFromPrecision__WEBPACK_IMPORTED_MODULE_3__.a)(data[key]))}))}),[]);return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.Fragment,{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(react_hook_form__WEBPACK_IMPORTED_MODULE_2__.b,Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)(Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)({},methods),{},{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)("form",{onSubmit:methods.handleSubmit(onSubmit),children:[args.props.map((function(args,i){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_BalanceInput__WEBPACK_IMPORTED_MODULE_5__.a,Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)({},args),i)})),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)("input",{type:"submit"})]})}))})}.bind({});Default.parameters=Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)({storySource:{source:'(args: { props: BalanceInputProps[] }) => {\n    const methods = useForm({});\n\n    const onSubmit = useCallback((data: any) => {\n        Object.keys(data)\n            .forEach((key: string) => {\n                console.log(fromPrecision12(data[key]));\n            });\n    }, []);\n    \n    return <>\n        <FormProvider {...methods}>\n            <form onSubmit={methods.handleSubmit(onSubmit)}>\n                {args.props.map((args, i) => <BalanceInput key={i} {...args} />)}\n                <input type="submit" />\n            </form>\n        </FormProvider>\n    </>\n}'}},Default.parameters);try{Default.displayName="Default",Default.__docgenInfo={description:"",displayName:"Default",props:{props:{defaultValue:null,description:"",name:"props",required:!0,type:{name:"BalanceInputProps[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Balance/BalanceInput/BalanceInput.stories.tsx#Default"]={docgenInfo:Default.__docgenInfo,name:"Default",path:"src/components/Balance/BalanceInput/BalanceInput.stories.tsx#Default"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Balance/BalanceInput/BalanceInput.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return BalanceInput}));var _Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),loglevel__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/loglevel/lib/loglevel.js"),loglevel__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(loglevel__WEBPACK_IMPORTED_MODULE_1__),react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/index.js"),react_text_mask__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react-text-mask/dist/reactTextMask.js"),react_text_mask__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(react_text_mask__WEBPACK_IMPORTED_MODULE_3__),text_mask_addons_dist_createNumberMask__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/text-mask-addons/dist/createNumberMask.js"),text_mask_addons_dist_createNumberMask__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(text_mask_addons_dist_createNumberMask__WEBPACK_IMPORTED_MODULE_4__),react_hook_form__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/react-hook-form/dist/index.esm.js"),_FormattedBalance_FormattedBalance__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/components/Balance/FormattedBalance/FormattedBalance.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/react/jsx-runtime.js"),currencyMaskOptions={prefix:"",suffix:"",includeThousandsSeparator:!0,thousandsSeparatorSymbol:",",allowDecimal:!0,decimalSymbol:".",decimalLimit:12,allowNegative:!1,allowLeadingZeroes:!1},BalanceInput=function BalanceInput(_ref){var unit=_ref.unit,name=_ref.name,_useFormContext=Object(react_hook_form__WEBPACK_IMPORTED_MODULE_5__.d)(),control=(_useFormContext.register,_useFormContext.control),currencyMask=Object(react__WEBPACK_IMPORTED_MODULE_2__.useMemo)((function(){return text_mask_addons_dist_createNumberMask__WEBPACK_IMPORTED_MODULE_4___default()(Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)({},currencyMaskOptions))}),[unit]),setValueAs=Object(react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((function(value){var _value;value=null===(_value=value)||void 0===_value?void 0:_value.replaceAll(",","");var formattedValue=Object(_FormattedBalance_FormattedBalance__WEBPACK_IMPORTED_MODULE_6__.d)(value,unit);return loglevel__WEBPACK_IMPORTED_MODULE_1___default.a.debug("BalanceInput","setValueAs",value,formattedValue),formattedValue}),[_FormattedBalance_FormattedBalance__WEBPACK_IMPORTED_MODULE_6__.d,unit]);return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(react_hook_form__WEBPACK_IMPORTED_MODULE_5__.a,{control:control,name:name,render:function render(_ref2){var field=_ref2.field;return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(react_text_mask__WEBPACK_IMPORTED_MODULE_3___default.a,{mask:currencyMask,ref:field.ref,onChange:function onChange(e){return field.onChange(setValueAs(e.target.value))}})}}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("span",{children:unit})]})};try{BalanceInput.displayName="BalanceInput",BalanceInput.__docgenInfo={description:"",displayName:"BalanceInput",props:{unit:{defaultValue:null,description:"",name:"unit",required:!0,type:{name:"enum",value:[{value:'"T"'},{value:'"G"'},{value:'"M"'},{value:'"k"'},{value:'""'},{value:'"m"'},{value:'"µ"'},{value:'"n"'},{value:'"p"'}]}},name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Balance/BalanceInput/BalanceInput.tsx#BalanceInput"]={docgenInfo:BalanceInput.__docgenInfo,name:"BalanceInput",path:"src/components/Balance/BalanceInput/BalanceInput.tsx#BalanceInput"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Balance/FormattedBalance/FormattedBalance.scss":function(module,exports,__webpack_require__){},"./src/components/Balance/FormattedBalance/FormattedBalance.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));var _Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),_FormattedBalance__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/Balance/FormattedBalance/FormattedBalance.tsx"),_hooks_math_useToPrecision__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/hooks/math/useToPrecision.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js"),args={balance:{assetId:"0",balance:Object(_hooks_math_useToPrecision__WEBPACK_IMPORTED_MODULE_2__.a)("1123456")},precision:2,unitStyle:_FormattedBalance__WEBPACK_IMPORTED_MODULE_1__.c.LONG};__webpack_exports__.default={title:"components/Balance/FormattedBalance",component:_FormattedBalance__WEBPACK_IMPORTED_MODULE_1__.a,args:args};var Default=function Template(args){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment,{children:["0.000000001","0.000000012","0.00000012","0.0000012","0.000012","0.00012","0.0012","0.012","0.01","0.1","1","11","112","1123","11231","112312","1123123","11231231","112312312","1123123123","11231231231","112312312312","12560.5"].map((function(balance){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_FormattedBalance__WEBPACK_IMPORTED_MODULE_1__.a,Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)(Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)({},args),{},{balance:Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)(Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)({},args.balance),{},{balance:Object(_hooks_math_useToPrecision__WEBPACK_IMPORTED_MODULE_2__.a)(balance)})}))})}))})}.bind({});Default.parameters=Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)({storySource:{source:"(args: FormattedBalanceProps) => (\n    <>\n    {/* TODO: generate a better dataset */}\n    {[\n        '0.000000001',\n        '0.000000012',\n        '0.00000012',\n        '0.0000012',\n        '0.000012',\n        '0.00012',\n        '0.0012',\n        '0.012',\n        '0.01',\n        '0.1',\n        '1',\n        '11',\n        '112',\n        '1123',\n        '11231',\n        '112312',\n        '1123123',\n        '11231231',\n        '112312312',\n        '1123123123',\n        '11231231231',\n        '112312312312',\n        '12560.5',\n    ].map(balance => (\n        <div>\n            <FormattedBalance \n                {...args} \n                balance={{\n                    ...args.balance,\n                    balance: toPrecision12(balance)!\n                }}\n            />\n        </div>\n    ))}\n    </>\n)"}},Default.parameters)},"./src/components/Balance/FormattedBalance/FormattedBalance.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"c",(function(){return UnitStyle})),__webpack_require__.d(__webpack_exports__,"b",(function(){return MetricUnit})),__webpack_require__.d(__webpack_exports__,"d",(function(){return formatFromSIWithPrecision12})),__webpack_require__.d(__webpack_exports__,"a",(function(){return FormattedBalance}));var UnitStyle,MetricUnit,_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js"),_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),_hooks_math_useFromPrecision__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/hooks/math/useFromPrecision.tsx"),_gapit_format_si__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@gapit/format-si/dist/index.es.js"),react__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/react/index.js"),loglevel__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/loglevel/lib/loglevel.js"),loglevel__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(loglevel__WEBPACK_IMPORTED_MODULE_5__),bignumber_js__WEBPACK_IMPORTED_MODULE_7__=(__webpack_require__("./src/components/Balance/FormattedBalance/FormattedBalance.scss"),__webpack_require__("./node_modules/bignumber.js/bignumber.js")),bignumber_js__WEBPACK_IMPORTED_MODULE_7___default=__webpack_require__.n(bignumber_js__WEBPACK_IMPORTED_MODULE_7__),_hooks_math_useToPrecision__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./src/hooks/math/useToPrecision.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/react/jsx-runtime.js");!function(UnitStyle){UnitStyle.LONG="LONG",UnitStyle.SHORT="SHORT"}(UnitStyle||(UnitStyle={})),function(MetricUnit){MetricUnit.T="T",MetricUnit.G="G",MetricUnit.M="M",MetricUnit.k="k",MetricUnit.NONE="",MetricUnit.m="m",MetricUnit["µ"]="µ",MetricUnit.n="n",MetricUnit.p="p"}(MetricUnit||(MetricUnit={}));var unitMap={T:"tera",G:"giga",M:"mega",k:"kilo",h:"hecto",d:"deci",c:"centi",m:"mili","µ":"micro",n:"nano",p:"pico"},prefixMap=_gapit_format_si__WEBPACK_IMPORTED_MODULE_3__.a.reduce((function(prefixes,prefix){var key=prefix.metricPrefix;return Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__.a)(Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__.a)({},prefixes),{},Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__.a)({},key,prefix.base10))}),{}),formatFromSIWithPrecision12=function formatFromSIWithPrecision12(number,metricPrefix){var base10=prefixMap[metricPrefix];if(base10){var formattedResult=new bignumber_js__WEBPACK_IMPORTED_MODULE_7___default.a(number).multipliedBy(base10);return formattedResult.isNaN()?void 0:Object(_hooks_math_useToPrecision__WEBPACK_IMPORTED_MODULE_8__.a)(formattedResult)}},assetIdNameMap={0:{symbol:"BSX",fullName:"Basilisk"}},FormattedBalance=function FormattedBalance(_ref){var balance=_ref.balance,_ref$precision=_ref.precision,precision=void 0===_ref$precision?3:_ref$precision,_ref$unitStyle=_ref.unitStyle,unitStyle=void 0===_ref$unitStyle?UnitStyle.SHORT:_ref$unitStyle,formattedBalance=function useFormatSI(assetSymbol,precision,unitStyle,number){var formattedBalance=Object(react__WEBPACK_IMPORTED_MODULE_4__.useMemo)((function(){var balanceWithPrecision12=Object(_hooks_math_useFromPrecision__WEBPACK_IMPORTED_MODULE_2__.a)(number);if(balanceWithPrecision12){var siFormat=Object(_gapit_format_si__WEBPACK_IMPORTED_MODULE_3__.b)(balanceWithPrecision12,"",precision),unitName=unitMap[siFormat.unit];return Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__.a)(Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__.a)({},siFormat),{},{unitName:unitName})}}),[number]),numberOfDecimalPlaces=Object(react__WEBPACK_IMPORTED_MODULE_4__.useMemo)((function(){var _formattedBalance$val,_formattedBalance$val2;return null==formattedBalance||null===(_formattedBalance$val=formattedBalance.value)||void 0===_formattedBalance$val||null===(_formattedBalance$val2=_formattedBalance$val.split(".")[1])||void 0===_formattedBalance$val2?void 0:_formattedBalance$val2.length}),[formattedBalance]),suffix=Object(react__WEBPACK_IMPORTED_MODULE_4__.useMemo)((function(){if(formattedBalance){var unit=formattedBalance.unit,unitName=formattedBalance.unitName,displayUnit=unitStyle===UnitStyle.LONG&&unitName||unit;return" ".concat(displayUnit," ").concat(assetSymbol)}}),[formattedBalance]);return Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__.a)(Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__.a)({},formattedBalance),{},{numberOfDecimalPlaces:numberOfDecimalPlaces,suffix:suffix})}(Object(react__WEBPACK_IMPORTED_MODULE_4__.useMemo)((function(){var _assetIdNameMap$balan;return null===(_assetIdNameMap$balan=assetIdNameMap[balance.assetId])||void 0===_assetIdNameMap$balan?void 0:_assetIdNameMap$balan.symbol}),[balance.assetId]),precision,unitStyle,balance.balance);return loglevel__WEBPACK_IMPORTED_MODULE_5___default.a.debug("FormattedBalance",null==formattedBalance?void 0:formattedBalance.value,null==formattedBalance?void 0:formattedBalance.unit,null==formattedBalance?void 0:formattedBalance.numberOfDecimalPlaces),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.Fragment,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("span",{children:formattedBalance.value}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("span",{children:formattedBalance.suffix})]})};try{FormattedBalance.displayName="FormattedBalance",FormattedBalance.__docgenInfo={description:"",displayName:"FormattedBalance",props:{balance:{defaultValue:null,description:"",name:"balance",required:!0,type:{name:"Balance"}},precision:{defaultValue:{value:"3"},description:"",name:"precision",required:!1,type:{name:"number"}},unitStyle:{defaultValue:{value:"UnitStyle.SHORT"},description:"",name:"unitStyle",required:!1,type:{name:"enum",value:[{value:'"LONG"'},{value:'"SHORT"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Balance/FormattedBalance/FormattedBalance.tsx#FormattedBalance"]={docgenInfo:FormattedBalance.__docgenInfo,name:"FormattedBalance",path:"src/components/Balance/FormattedBalance/FormattedBalance.tsx#FormattedBalance"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Button/Button.scss":function(module,exports,__webpack_require__){},"./src/components/Button/Button.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));var _Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),_misc_StorybookWrapper__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/misc/StorybookWrapper.tsx"),_Button__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Button/Button.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.default={title:"components/Button/Button",component:_Button__WEBPACK_IMPORTED_MODULE_2__.a};var Default=function Template(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_misc_StorybookWrapper__WEBPACK_IMPORTED_MODULE_1__.a,{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{style:{width:"380px"},children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_Button__WEBPACK_IMPORTED_MODULE_2__.a,{kind:_Button__WEBPACK_IMPORTED_MODULE_2__.b.Primary,children:"click here"})})})}.bind({});Default.parameters=Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)({storySource:{source:"() => {\n    return <StorybookWrapper>\n        <div style={{\n            width: '380px'\n        }}>\n            <Button kind={ButtonKind.Primary}>\n                click here\n            </Button>\n        </div>\n    </StorybookWrapper>\n}"}},Default.parameters)},"./src/components/Button/Button.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return ButtonKind})),__webpack_require__.d(__webpack_exports__,"a",(function(){return Button}));var ButtonKind,classnames__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=(__webpack_require__("./src/components/Button/Button.scss"),__webpack_require__("./node_modules/react/jsx-runtime.js"));!function(ButtonKind){ButtonKind.Primary="Primary"}(ButtonKind||(ButtonKind={}));var Button=function Button(_ref){var _ref$kind=_ref.kind,kind=void 0===_ref$kind?ButtonKind.Primary:_ref$kind,children=_ref.children;return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("button",{className:"button "+classnames__WEBPACK_IMPORTED_MODULE_0___default()({"button--primary":kind===ButtonKind.Primary}),children:children})};try{Button.displayName="Button",Button.__docgenInfo={description:"",displayName:"Button",props:{kind:{defaultValue:{value:"ButtonKind.Primary"},description:"",name:"kind",required:!1,type:{name:"enum",value:[{value:'"Primary"'}]}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"(() => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Button/Button.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"src/components/Button/Button.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Chart/ChartHeader/ChartHeader.scss":function(module,exports,__webpack_require__){},"./src/components/Chart/ChartHeader/ChartHeader.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));var _Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),_misc_StorybookWrapper__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/misc/StorybookWrapper.tsx"),_shared__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Chart/shared.tsx"),_ChartHeader__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Chart/ChartHeader/ChartHeader.tsx"),_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/misc/colors.module.scss"),_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_4__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.default={title:"Components/Chart/ChartHeader",component:_ChartHeader__WEBPACK_IMPORTED_MODULE_3__.a,args:{assetPair:{assetA:{symbol:"BSX",fullName:"Basilisk"},assetB:{symbol:"kUSD",fullName:"Karura US Dollar"}},poolType:_shared__WEBPACK_IMPORTED_MODULE_2__.c.LBP,chartType:_shared__WEBPACK_IMPORTED_MODULE_2__.b.PRICE,granularity:_shared__WEBPACK_IMPORTED_MODULE_2__.a.H1,displayData:{balance:400,usdBalance:400,asset:{symbol:"kUSD",fullName:"Karura US Dollar"}},referenceData:{balance:200,usdBalance:200,asset:{symbol:"kUSD",fullName:"Karura US Dollar"}},availableChartTypes:[_shared__WEBPACK_IMPORTED_MODULE_2__.b.PRICE,_shared__WEBPACK_IMPORTED_MODULE_2__.b.VOLUME,_shared__WEBPACK_IMPORTED_MODULE_2__.b.WEIGHTS],availableGranularity:[_shared__WEBPACK_IMPORTED_MODULE_2__.a.D30,_shared__WEBPACK_IMPORTED_MODULE_2__.a.D7,_shared__WEBPACK_IMPORTED_MODULE_2__.a.H24,_shared__WEBPACK_IMPORTED_MODULE_2__.a.H1]}};var Default=function Template(args){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_misc_StorybookWrapper__WEBPACK_IMPORTED_MODULE_1__.a,{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{style:{width:args.wrapperWidth,backgroundColor:_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_4___default.a.gray2},children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_ChartHeader__WEBPACK_IMPORTED_MODULE_3__.a,Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)({},args))})})}.bind({});Default.parameters=Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)({storySource:{source:"(args: any) => {\n    return <StorybookWrapper>\n        <div style={{\n            width: args.wrapperWidth,\n            backgroundColor: cssColors.gray2\n        }}>\n            <ChartHeader {...args} />\n        </div>\n    </StorybookWrapper>\n}"}},Default.parameters);try{Default.displayName="Default",Default.__docgenInfo={description:"",displayName:"Default",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chart/ChartHeader/ChartHeader.stories.tsx#Default"]={docgenInfo:Default.__docgenInfo,name:"Default",path:"src/components/Chart/ChartHeader/ChartHeader.stories.tsx#Default"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Chart/ChartHeader/ChartHeader.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return ChartHeader}));var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_intl__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-intl/lib/src/components/message.js"),react_intl__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react-intl/lib/index.js"),_LineChart_LineChart__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Chart/LineChart/LineChart.tsx"),_shared__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/Chart/shared.tsx"),percent_change__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/percent-change/index.js"),percent_change__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(percent_change__WEBPACK_IMPORTED_MODULE_5__),classnames__WEBPACK_IMPORTED_MODULE_7__=(__webpack_require__("./src/components/Chart/ChartHeader/ChartHeader.scss"),__webpack_require__("./node_modules/classnames/index.js")),classnames__WEBPACK_IMPORTED_MODULE_7___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_7__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/react/jsx-runtime.js"),formatGranularity=function formatGranularity(granularity){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(react_intl__WEBPACK_IMPORTED_MODULE_1__.a,{id:"ChartHeader.granularity",defaultMessage:"{granularity, select, ALL {ALL} D30 {30D} D7 {7D} D3 {3D} H24 {24H} H12 {12H} H1 {1H} other {".concat("―","}}"),values:{granularity:granularity}})},ChartHeader=function ChartHeader(_ref){var _assetPair$assetB,_assetPair$assetB2,assetPair=_ref.assetPair,poolType=_ref.poolType,displayData=_ref.displayData,referenceData=_ref.referenceData,chartType=_ref.chartType,granularity=_ref.granularity,isUserBrowsingGraph=_ref.isUserBrowsingGraph,availableChartTypes=_ref.availableChartTypes,onChartTypeChange=_ref.onChartTypeChange,availableGranularity=_ref.availableGranularity,onGranularityChange=_ref.onGranularityChange,dataTrend=_ref.dataTrend,referenceDataPercentageChange=Object(react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((function(){return(null==referenceData?void 0:referenceData.balance)?percent_change__WEBPACK_IMPORTED_MODULE_5___default()(referenceData.balance,displayData.balance):0}),[displayData,referenceData]);return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("div",{className:"col-12 g-0 chart-header",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("div",{className:"row g-0",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("div",{className:"col-6",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("div",{className:"row g-0 align-items-center",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("div",{className:"col-xs-auto text-white-1 chart-header__pair-symbols",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("p",{children:["".concat(assetPair.assetA.symbol," / "),(null===(_assetPair$assetB=assetPair.assetB)||void 0===_assetPair$assetB?void 0:_assetPair$assetB.symbol)?"".concat(assetPair.assetB.symbol):"―"]})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("div",{className:"col text-gray-4 chart-header__type-label",children:poolType?Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.Fragment,{children:["[",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(react_intl__WEBPACK_IMPORTED_MODULE_1__.a,{id:"ChartHeader.poolType.label",defaultMessage:"{poolType, select, XYK {XYK} LBP {LBP} other {-}}",values:{poolType:poolType}}),"]"]}):null})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("div",{className:"row g-0",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("div",{className:"text-gray-4 chart-header__pair-full-names",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("p",{children:["".concat(assetPair.assetA.fullName," / "),(null===(_assetPair$assetB2=assetPair.assetB)||void 0===_assetPair$assetB2?void 0:_assetPair$assetB2.fullName)?"".concat(assetPair.assetB.fullName):"―"]})})})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("div",{className:"col-6 text-end",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("div",{className:"text-white-1 chart-header__data",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("div",{className:"row g-0",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("div",{className:"chart-header__data__in-asset",children:[displayData.balance?Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.Fragment,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(react_intl__WEBPACK_IMPORTED_MODULE_2__.b,{value:displayData.balance,style:"decimal",minimumFractionDigits:2,maximumFractionDigits:2})," "]}):"".concat("―"," "),displayData.asset.symbol]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("div",{className:"chart-header__data__breakdown",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("span",{className:"text-gray-4",children:displayData.usdBalance?Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(react_intl__WEBPACK_IMPORTED_MODULE_2__.b,{value:displayData.usdBalance,style:"currency",currency:"USD",minimumFractionDigits:2,maximumFractionDigits:2}):"$ ".concat("―")}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("span",{className:classnames__WEBPACK_IMPORTED_MODULE_7___default()({"text-green-1":dataTrend===_LineChart_LineChart__WEBPACK_IMPORTED_MODULE_3__.b.Positive,"text-gray-1":dataTrend===_LineChart_LineChart__WEBPACK_IMPORTED_MODULE_3__.b.Neutral,"text-red-1":dataTrend===_LineChart_LineChart__WEBPACK_IMPORTED_MODULE_3__.b.Negative}),children:["(",referenceDataPercentageChange>=0?"+":"",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(react_intl__WEBPACK_IMPORTED_MODULE_2__.b,{style:"percent",minimumFractionDigits:2,maximumFractionDigits:2,value:referenceDataPercentageChange}),")"]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("span",{className:"text-gray-4 chart-header__data__breakdown__granularity "+classnames__WEBPACK_IMPORTED_MODULE_7___default()({disabled:isUserBrowsingGraph}),children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(react_intl__WEBPACK_IMPORTED_MODULE_1__.a,{id:"ChartHeader.granularity.pastIndicator",defaultMessage:"Past"})," "," "," ",formatGranularity(granularity),function(){if(granularity&&poolType===_shared__WEBPACK_IMPORTED_MODULE_4__.c.LBP){if(chartType!==_shared__WEBPACK_IMPORTED_MODULE_4__.b.PRICE)return;return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.Fragment,{children:[" + ",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(react_intl__WEBPACK_IMPORTED_MODULE_1__.a,{id:"ChartHeader.granularity.futureIndicator",defaultMessage:" "})," ",formatGranularity(granularity)]})}}()]})]})]})})})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("div",{className:"row g-0 chart-header__controls",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("div",{className:"col-6",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("div",{className:"chart-header__controls__graph-type text-gray-4 text-start",children:availableChartTypes.map((function(chartTypeEntry,i){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("span",{className:classnames__WEBPACK_IMPORTED_MODULE_7___default()({"chart-header__controls__graph-type__individual":!0,active:chartTypeEntry===chartType,disabled:chartTypeEntry!==chartType}),onClick:function onClick(_){return onChartTypeChange(chartTypeEntry)},children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(react_intl__WEBPACK_IMPORTED_MODULE_1__.a,{id:"ChartHeader.chartType.selector",defaultMessage:"{chartType, select, PRICE {PRICE} VOLUME {VOLUME} WEIGHTS {WEIGHT} other {-}}",values:{chartType:chartTypeEntry}})},i)}))})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("div",{className:"col-6",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("div",{className:"chart-header__controls__granularity text-end text-gray-4",children:availableGranularity.map((function(granularityEntry,i){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("span",{className:classnames__WEBPACK_IMPORTED_MODULE_7___default()({"chart-header__controls__granularity__individual":!0,active:granularityEntry===granularity}),onClick:function onClick(_){return onGranularityChange(granularityEntry)},children:formatGranularity(granularityEntry)},i)}))})})]})]})};try{ChartHeader.displayName="ChartHeader",ChartHeader.__docgenInfo={description:"",displayName:"ChartHeader",props:{assetPair:{defaultValue:null,description:"",name:"assetPair",required:!0,type:{name:"AssetPair"}},poolType:{defaultValue:null,description:"",name:"poolType",required:!0,type:{name:"enum",value:[{value:'"LBP"'},{value:'"XYK"'}]}},displayData:{defaultValue:null,description:"",name:"displayData",required:!0,type:{name:"DisplayData"}},referenceData:{defaultValue:null,description:"",name:"referenceData",required:!0,type:{name:"DisplayData | undefined"}},dataTrend:{defaultValue:null,description:"",name:"dataTrend",required:!0,type:{name:"enum",value:[{value:'"Positive"'},{value:'"Negative"'},{value:'"Neutral"'}]}},granularity:{defaultValue:null,description:"",name:"granularity",required:!0,type:{name:"enum",value:[{value:'"D30"'},{value:'"D7"'},{value:'"H24"'},{value:'"H1"'}]}},isUserBrowsingGraph:{defaultValue:null,description:"",name:"isUserBrowsingGraph",required:!0,type:{name:"boolean | undefined"}},chartType:{defaultValue:null,description:"",name:"chartType",required:!0,type:{name:"enum",value:[{value:'"PRICE"'},{value:'"VOLUME"'},{value:'"WEIGHTS"'}]}},availableChartTypes:{defaultValue:null,description:"",name:"availableChartTypes",required:!0,type:{name:"ChartType[]"}},availableGranularity:{defaultValue:null,description:"",name:"availableGranularity",required:!0,type:{name:"ChartGranularity[]"}},onChartTypeChange:{defaultValue:null,description:"",name:"onChartTypeChange",required:!0,type:{name:"(chartType: ChartType) => void"}},onGranularityChange:{defaultValue:null,description:"",name:"onGranularityChange",required:!0,type:{name:"(granularity: ChartGranularity) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chart/ChartHeader/ChartHeader.tsx#ChartHeader"]={docgenInfo:ChartHeader.__docgenInfo,name:"ChartHeader",path:"src/components/Chart/ChartHeader/ChartHeader.tsx#ChartHeader"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Chart/ChartTicks/ChartTicks.scss":function(module,exports,__webpack_require__){},"./src/components/Chart/ChartTicks/ChartTicks.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));var _Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),date_fns_esm__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/date-fns/esm/addMinutes/index.js"),date_fns_subMinutes__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/date-fns/esm/subMinutes/index.js"),lodash__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/lodash/lodash.js"),_misc_StorybookWrapper__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/misc/StorybookWrapper.tsx"),_ChartTicks__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/Chart/ChartTicks/ChartTicks.tsx"),_shared__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/components/Chart/shared.tsx"),_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/misc/colors.module.scss"),_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_7___default=__webpack_require__.n(_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_7__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/react/jsx-runtime.js"),now=Date.now(),hourAgo=Object(date_fns_subMinutes__WEBPACK_IMPORTED_MODULE_2__.a)(now,60),randomDataPoint=function randomDataPoint(){return Object(lodash__WEBPACK_IMPORTED_MODULE_3__.random)(1,5)},datasets={primaryDataset:Object(lodash__WEBPACK_IMPORTED_MODULE_3__.times)(6).map((function(i){return{x:Object(date_fns_esm__WEBPACK_IMPORTED_MODULE_1__.a)(hourAgo,10*(i+1)),y:5==i?3:randomDataPoint()}})),secondaryDataset:Object(lodash__WEBPACK_IMPORTED_MODULE_3__.times)(6).map((function(i){return{x:Object(date_fns_esm__WEBPACK_IMPORTED_MODULE_1__.a)(now,10*i),y:0===i?3:randomDataPoint()}}))};__webpack_exports__.default={title:"Components/Chart/ChartTicks",component:_ChartTicks__WEBPACK_IMPORTED_MODULE_5__.a,args:{datasets:[datasets.primaryDataset,datasets.secondaryDataset],granularity:_shared__WEBPACK_IMPORTED_MODULE_6__.a.H1}};var Default=function Template(args){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_misc_StorybookWrapper__WEBPACK_IMPORTED_MODULE_4__.a,{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("div",{style:{backgroundColor:_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_7___default.a.gray2,width:args.wrapperWidth},children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_ChartTicks__WEBPACK_IMPORTED_MODULE_5__.a,Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)({},args))})})}.bind({});Default.parameters=Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)({storySource:{source:"(args: any) => (\n    <StorybookWrapper>\n        <div style={{\n            backgroundColor: cssColors.gray2,\n            width: args.wrapperWidth\n        }}>\n            <ChartTicks {...args} />\n        </div>\n    </StorybookWrapper>\n)"}},Default.parameters);try{Default.displayName="Default",Default.__docgenInfo={description:"",displayName:"Default",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chart/ChartTicks/ChartTicks.stories.tsx#Default"]={docgenInfo:Default.__docgenInfo,name:"Default",path:"src/components/Chart/ChartTicks/ChartTicks.stories.tsx#Default"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Chart/ChartTicks/ChartTicks.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return ChartTicks}));var lodash__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lodash/lodash.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),react_intl__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react-intl/lib/index.js"),_shared__WEBPACK_IMPORTED_MODULE_4__=(__webpack_require__("./src/components/Chart/ChartTicks/ChartTicks.scss"),__webpack_require__("./src/components/Chart/shared.tsx")),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/react/jsx-runtime.js"),ChartTicks=function ChartTicks(_ref){var datasets=_ref.datasets,granularity=_ref.granularity,className=_ref.className,ticks=Object(react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((function(){var _first,_last,allData=datasets.reduce((function(allData,dataset){return allData.concat(dataset)}),[]);allData=Object(lodash__WEBPACK_IMPORTED_MODULE_0__.orderBy)(allData,["x"],["asc"]);var firstTick=null===(_first=Object(lodash__WEBPACK_IMPORTED_MODULE_0__.first)(allData))||void 0===_first?void 0:_first.x,lastTick=null===(_last=Object(lodash__WEBPACK_IMPORTED_MODULE_0__.last)(allData))||void 0===_last?void 0:_last.x;if(firstTick&&lastTick){var ticks=[firstTick],middleTicks=function generateMiddleTicks(firstTick,lastTick,numberOfTicks){var distance=(lastTick-firstTick)/(numberOfTicks+1);return Object(lodash__WEBPACK_IMPORTED_MODULE_0__.times)(numberOfTicks).map((function(_,i){return firstTick+distance*(i+1)}))}(firstTick,lastTick,5);return(ticks=ticks.concat(middleTicks)).push(lastTick),ticks}}),[datasets]),formattedTicks=Object(react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((function(){return null==ticks?void 0:ticks.map((function(tick){return function formatTick(tick,granularity){var tickDate=new Date(tick),asTime=Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(react_intl__WEBPACK_IMPORTED_MODULE_2__.c,{hourCycle:"h24",value:tickDate}),asDate=Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(react_intl__WEBPACK_IMPORTED_MODULE_2__.a,{value:tickDate});switch(granularity){case _shared__WEBPACK_IMPORTED_MODULE_4__.a.D30:case _shared__WEBPACK_IMPORTED_MODULE_4__.a.D7:return asDate;case _shared__WEBPACK_IMPORTED_MODULE_4__.a.H24:case _shared__WEBPACK_IMPORTED_MODULE_4__.a.H1:return asTime}}(tick,granularity)}))}),[ticks,granularity]);return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{className:"row g-0 justify-content-between text-top chart-ticks ".concat(className),children:null==formattedTicks?void 0:formattedTicks.map((function(formattedTick,i){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{className:"col-auto",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("span",{children:formattedTick})},i)}))})};try{ChartTicks.displayName="ChartTicks",ChartTicks.__docgenInfo={description:"",displayName:"ChartTicks",props:{datasets:{defaultValue:null,description:"",name:"datasets",required:!0,type:{name:"Dataset[]"}},granularity:{defaultValue:null,description:"",name:"granularity",required:!0,type:{name:"enum",value:[{value:'"D30"'},{value:'"D7"'},{value:'"H24"'},{value:'"H1"'}]}},className:{defaultValue:null,description:"",name:"className",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chart/ChartTicks/ChartTicks.tsx#ChartTicks"]={docgenInfo:ChartTicks.__docgenInfo,name:"ChartTicks",path:"src/components/Chart/ChartTicks/ChartTicks.tsx#ChartTicks"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Chart/LineChart/LineChart.scss":function(module,exports,__webpack_require__){},"./src/components/Chart/LineChart/LineChart.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));var _Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),date_fns__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/date-fns/esm/subMinutes/index.js"),date_fns__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/date-fns/esm/addMinutes/index.js"),lodash__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/lodash/lodash.js"),_misc_StorybookWrapper__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/misc/StorybookWrapper.tsx"),_LineChart__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/Chart/LineChart/LineChart.tsx"),_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/misc/colors.module.scss"),_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_6___default=__webpack_require__.n(_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_6__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/react/jsx-runtime.js"),now=Date.now(),hourAgo=Object(date_fns__WEBPACK_IMPORTED_MODULE_1__.a)(now,60),randomDataPoint=function randomDataPoint(){return Object(lodash__WEBPACK_IMPORTED_MODULE_3__.random)(1,5)},args={primaryDataset:Object(lodash__WEBPACK_IMPORTED_MODULE_3__.times)(6).map((function(i){return{x:Object(date_fns__WEBPACK_IMPORTED_MODULE_2__.a)(hourAgo,10*(i+1)),y:5==i?3:randomDataPoint()}})),secondaryDataset:Object(lodash__WEBPACK_IMPORTED_MODULE_3__.times)(6).map((function(i){return{x:Object(date_fns__WEBPACK_IMPORTED_MODULE_2__.a)(now,10*i),y:0===i?3:randomDataPoint()}}))};__webpack_exports__.default={title:"components/Chart/LineChart",component:_LineChart__WEBPACK_IMPORTED_MODULE_5__.a,args:args,argTypes:{from:{control:{type:"date"}},to:{control:{type:"date"}}}};var Default=function Template(args){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_misc_StorybookWrapper__WEBPACK_IMPORTED_MODULE_4__.a,{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("div",{style:{backgroundColor:_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_6___default.a.gray2,width:args.wrapperWidth},children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_LineChart__WEBPACK_IMPORTED_MODULE_5__.a,Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)({},args))})})}.bind({});Default.parameters=Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)({storySource:{source:"(args: any) => (\n    <StorybookWrapper>\n        <div style={{\n            backgroundColor: cssColors.gray2,\n            width: args.wrapperWidth\n        }}>\n            <LineChart {...args} />\n        </div>\n    </StorybookWrapper>\n)"}},Default.parameters);try{Default.displayName="Default",Default.__docgenInfo={description:"",displayName:"Default",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chart/LineChart/LineChart.stories.tsx#Default"]={docgenInfo:Default.__docgenInfo,name:"Default",path:"src/components/Chart/LineChart/LineChart.stories.tsx#Default"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Chart/LineChart/LineChart.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return Trend})),__webpack_require__.d(__webpack_exports__,"a",(function(){return LineChart}));var Trend,_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),react_chartjs_2__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react-chartjs-2/dist/index.modern.js"),_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_4__=(__webpack_require__("./node_modules/chartjs-adapter-moment/dist/chartjs-adapter-moment.esm.js"),__webpack_require__("./src/misc/colors.module.scss")),_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_4__),lodash__WEBPACK_IMPORTED_MODULE_6__=(__webpack_require__("./src/components/Chart/LineChart/LineChart.scss"),__webpack_require__("./node_modules/lodash/lodash.js")),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/react/jsx-runtime.js");!function(Trend){Trend.Positive="Positive",Trend.Negative="Negative",Trend.Neutral="Neutral"}(Trend||(Trend={}));var isPrimaryDataset=function isPrimaryDataset(label){return"primary"===label},greenBackgroundGradient=function greenBackgroundGradient(chartCtx){var gradient=null==chartCtx?void 0:chartCtx.createLinearGradient(0,0,0,260);return null==gradient||gradient.addColorStop(0,_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_4___default.a.green1Opacity33),null==gradient||gradient.addColorStop(1,_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_4___default.a.gray2Opacity0),gradient},redBackgroundGradient=function redBackgroundGradient(chartCtx){var gradient=null==chartCtx?void 0:chartCtx.createLinearGradient(0,0,0,270);return null==gradient||gradient.addColorStop(0,_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_4___default.a.red1Opacity70),null==gradient||gradient.addColorStop(1,_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_4___default.a.gray2Opacity0),gradient},backgroundGradients=function backgroundGradients(chartCtx){return{redGradient:redBackgroundGradient(chartCtx),greenGradient:greenBackgroundGradient(chartCtx)}},useFormatDataset=function useFormatDataset(_ref){var fill=_ref.fill,trend=_ref.trend,chartCtx=_ref.chartCtx;return Object(react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((function(_ref2){var _backgroundGradients,redGradient,greenGradient,dataset=_ref2.dataset,label=_ref2.label;return{label:label,fill:fill,data:dataset,pointRadius:0,tension:.2,borderWidth:1,borderColor:isPrimaryDataset(label)?trend===Trend.Negative?_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_4___default.a.red1:_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_4___default.a.green1:_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_4___default.a.orange1,backgroundColor:(_backgroundGradients=backgroundGradients(chartCtx),redGradient=_backgroundGradients.redGradient,greenGradient=_backgroundGradients.greenGradient,trend===Trend.Negative?redGradient:greenGradient)}}),[fill,trend,chartCtx])},LineChart=function LineChart(_ref4){var primaryDataset=_ref4.primaryDataset,_ref4$secondaryDatase=_ref4.secondaryDataset,secondaryDataset=void 0===_ref4$secondaryDatase?[]:_ref4$secondaryDatase,_ref4$fill=_ref4.fill,fill=void 0!==_ref4$fill&&_ref4$fill,from=_ref4.from,to=_ref4.to,trend=_ref4.trend,onHandleTooltip=_ref4.onHandleTooltip,_useChartCtx=function useChartCtx(){var chartContainer=Object(react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),_useState=Object(react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),_useState2=Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__.a)(_useState,2),chartCtx=_useState2[0],setChartCtx=_useState2[1];return Object(react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((function(){var _document$getElements,ctx=null===(_document$getElements=document.getElementsByTagName("canvas")[0])||void 0===_document$getElements?void 0:_document$getElements.getContext("2d");setChartCtx(ctx)}),[chartContainer]),{chartContainer:chartContainer,chartCtx:chartCtx}}(),chartContainer=_useChartCtx.chartContainer,chartCtx=_useChartCtx.chartCtx,_useState3=Object(react__WEBPACK_IMPORTED_MODULE_1__.useState)(void 0),_useState4=Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__.a)(_useState3,2),tooltipData=_useState4[0],setTooltipData=_useState4[1],tooltipHandler=function useTooltipHandler(tooltipData,setTooltipData){return Object(react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((function(_ref3){var tooltip=_ref3.tooltip,visible=!!tooltip.opacity,_tooltip$dataPoints$=tooltip.dataPoints[0].parsed,x=_tooltip$dataPoints$.x,y=_tooltip$dataPoints$.y,positionX=tooltip.caretX;x===(null==tooltipData?void 0:tooltipData.data.x)&&visible===tooltipData.visible||setTooltipData({data:{x:x,y:y},positionX:positionX,visible:visible})}),[tooltipData,setTooltipData])}(tooltipData,setTooltipData);Object(react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((function(){return onHandleTooltip(tooltipData)}),[tooltipData]);var formatDataset=useFormatDataset({fill:fill,trend:trend,chartCtx:chartCtx}),formattedPrimaryDataset=formatDataset({dataset:primaryDataset,label:"primary"}),formattedSecondaryDataset=formatDataset({dataset:secondaryDataset,label:"secondary"}),chartData=Object(react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((function(){return{labels:[],datasets:formattedSecondaryDataset?[formattedPrimaryDataset,formattedSecondaryDataset]:[formattedPrimaryDataset]}}),[formattedPrimaryDataset,formattedSecondaryDataset]),yAxisMin=Object(react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((function(){var _first,allData=[primaryDataset,secondaryDataset].reduce((function(allData,dataset){return allData.concat(dataset)}),[]);return allData=Object(lodash__WEBPACK_IMPORTED_MODULE_6__.orderBy)(allData,["y"],["asc"]),null===(_first=Object(lodash__WEBPACK_IMPORTED_MODULE_6__.first)(allData))||void 0===_first?void 0:_first.y}),[primaryDataset,secondaryDataset]),chartOptions=Object(react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((function(){return{responsive:!0,maintainAspectRatio:!1,scales:{xAxis:{display:!1,type:"time",min:from,to:to},yAxis:{display:!1,stacked:!1,min:yAxisMin}},animations:{colors:!1},hover:{intersect:!0},plugins:{legend:{display:!1},tooltip:{enabled:!1,mode:"index",intersect:!1,position:"nearest",external:tooltipHandler}}}}),[from,to,tooltipHandler,yAxisMin]);return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("div",{className:"row g-0 line-chart",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(react_chartjs_2__WEBPACK_IMPORTED_MODULE_2__.a,{ref:chartContainer,data:chartData,options:chartOptions})})};try{isPrimaryDataset.displayName="isPrimaryDataset",isPrimaryDataset.__docgenInfo={description:"",displayName:"isPrimaryDataset",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chart/LineChart/LineChart.tsx#isPrimaryDataset"]={docgenInfo:isPrimaryDataset.__docgenInfo,name:"isPrimaryDataset",path:"src/components/Chart/LineChart/LineChart.tsx#isPrimaryDataset"})}catch(__react_docgen_typescript_loader_error){}try{greenBackgroundGradient.displayName="greenBackgroundGradient",greenBackgroundGradient.__docgenInfo={description:"",displayName:"greenBackgroundGradient",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chart/LineChart/LineChart.tsx#greenBackgroundGradient"]={docgenInfo:greenBackgroundGradient.__docgenInfo,name:"greenBackgroundGradient",path:"src/components/Chart/LineChart/LineChart.tsx#greenBackgroundGradient"})}catch(__react_docgen_typescript_loader_error){}try{redBackgroundGradient.displayName="redBackgroundGradient",redBackgroundGradient.__docgenInfo={description:"",displayName:"redBackgroundGradient",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chart/LineChart/LineChart.tsx#redBackgroundGradient"]={docgenInfo:redBackgroundGradient.__docgenInfo,name:"redBackgroundGradient",path:"src/components/Chart/LineChart/LineChart.tsx#redBackgroundGradient"})}catch(__react_docgen_typescript_loader_error){}try{backgroundGradients.displayName="backgroundGradients",backgroundGradients.__docgenInfo={description:"",displayName:"backgroundGradients",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chart/LineChart/LineChart.tsx#backgroundGradients"]={docgenInfo:backgroundGradients.__docgenInfo,name:"backgroundGradients",path:"src/components/Chart/LineChart/LineChart.tsx#backgroundGradients"})}catch(__react_docgen_typescript_loader_error){}try{useFormatDataset.displayName="useFormatDataset",useFormatDataset.__docgenInfo={description:"",displayName:"useFormatDataset",props:{fill:{defaultValue:{value:"false"},description:"",name:"fill",required:!1,type:{name:"boolean"}},trend:{defaultValue:null,description:"",name:"trend",required:!0,type:{name:"enum",value:[{value:'"Positive"'},{value:'"Negative"'},{value:'"Neutral"'}]}},chartCtx:{defaultValue:null,description:"",name:"chartCtx",required:!0,type:{name:"CanvasRenderingContext2D | null"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chart/LineChart/LineChart.tsx#useFormatDataset"]={docgenInfo:useFormatDataset.__docgenInfo,name:"useFormatDataset",path:"src/components/Chart/LineChart/LineChart.tsx#useFormatDataset"})}catch(__react_docgen_typescript_loader_error){}try{LineChart.displayName="LineChart",LineChart.__docgenInfo={description:"",displayName:"LineChart",props:{primaryDataset:{defaultValue:null,description:"",name:"primaryDataset",required:!0,type:{name:"Dataset"}},secondaryDataset:{defaultValue:{value:"[]"},description:"",name:"secondaryDataset",required:!1,type:{name:"Dataset"}},from:{defaultValue:null,description:"",name:"from",required:!1,type:{name:"number"}},to:{defaultValue:null,description:"",name:"to",required:!1,type:{name:"number"}},fill:{defaultValue:{value:"false"},description:"",name:"fill",required:!1,type:{name:"boolean"}},trend:{defaultValue:null,description:"",name:"trend",required:!0,type:{name:"enum",value:[{value:'"Positive"'},{value:'"Negative"'},{value:'"Neutral"'}]}},onHandleTooltip:{defaultValue:null,description:"",name:"onHandleTooltip",required:!0,type:{name:"OnHandleTooltip"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chart/LineChart/LineChart.tsx#LineChart"]={docgenInfo:LineChart.__docgenInfo,name:"LineChart",path:"src/components/Chart/LineChart/LineChart.tsx#LineChart"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Chart/TradeChart/TradeChart.scss":function(module,exports,__webpack_require__){},"./src/components/Chart/TradeChart/TradeChart.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));var _Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),_misc_StorybookWrapper__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/misc/StorybookWrapper.tsx"),_TradeChart__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Chart/TradeChart/TradeChart.tsx"),_shared__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Chart/shared.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.default={title:"Components/Chart/TradeChart",component:_TradeChart__WEBPACK_IMPORTED_MODULE_2__.a,args:{assetPair:{assetA:{symbol:"BSX",fullName:"Basilisk"},assetB:{symbol:"kUSD",fullName:"Karura US Dollar"}},poolType:_shared__WEBPACK_IMPORTED_MODULE_3__.c.LBP,chartType:_shared__WEBPACK_IMPORTED_MODULE_3__.b.PRICE,granularity:_shared__WEBPACK_IMPORTED_MODULE_3__.a.H1,displayData:{balance:400,usdBalance:400,asset:{symbol:"kUSD",fullName:"Karura US Dollar"}},wrapperWidth:"760px"}};var Default=function Template(args){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_misc_StorybookWrapper__WEBPACK_IMPORTED_MODULE_1__.a,{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div",{style:{width:args.wrapperWidth},children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_TradeChart__WEBPACK_IMPORTED_MODULE_2__.a,Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)({},args))})})}.bind({});Default.parameters=Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)({storySource:{source:"(args: any) => (\n    <StorybookWrapper>\n        <div style={{\n            width: args.wrapperWidth\n        }}>\n            <TradeChart {...args} />\n        </div>\n    </StorybookWrapper>\n)"}},Default.parameters);try{Default.displayName="Default",Default.__docgenInfo={description:"",displayName:"Default",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chart/TradeChart/TradeChart.stories.tsx#Default"]={docgenInfo:Default.__docgenInfo,name:"Default",path:"src/components/Chart/TradeChart/TradeChart.stories.tsx#Default"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Chart/TradeChart/TradeChart.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return TradeChart_TradeChart_TradeChart}));var TradeChartErrorType,objectSpread2=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),slicedToArray=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react=__webpack_require__("./node_modules/react/index.js"),ChartTicks=__webpack_require__("./src/components/Chart/ChartTicks/ChartTicks.tsx"),LineChart=__webpack_require__("./src/components/Chart/LineChart/LineChart.tsx"),shared=__webpack_require__("./src/components/Chart/shared.tsx"),ChartHeader=__webpack_require__("./src/components/Chart/ChartHeader/ChartHeader.tsx"),moment=(__webpack_require__("./src/components/Chart/TradeChart/TradeChart.scss"),__webpack_require__("./node_modules/moment/moment.js")),moment_default=__webpack_require__.n(moment),jsx_runtime=(__webpack_require__("./src/components/Chart/TradeChart/TradeChartError.scss"),__webpack_require__("./node_modules/react/jsx-runtime.js"));!function(TradeChartErrorType){TradeChartErrorType.InvalidPair="InvalidPair",TradeChartErrorType.Unexpected="Unexpected"}(TradeChartErrorType||(TradeChartErrorType={}));var TradeChartError_TradeChartError=function TradeChartError(_ref){var type=_ref.type;return Object(jsx_runtime.jsx)("div",{className:"row g-0 trade-chart-error align-items-center",children:Object(jsx_runtime.jsx)("div",{className:"col-12",children:type===TradeChartErrorType.InvalidPair?Object(jsx_runtime.jsxs)("div",{className:"row g-0",children:[Object(jsx_runtime.jsxs)("span",{className:"large",children:["Graph unavailable, please select ",Object(jsx_runtime.jsx)("br",{})," a valid asset pair"]}),Object(jsx_runtime.jsx)("span",{className:"small",children:"You can read our FAQ to learn more about valid asset pairs."})]}):Object(jsx_runtime.jsxs)("div",{className:"row g-0",children:[Object(jsx_runtime.jsxs)("span",{className:"large",children:["Oops, something went wrong.",Object(jsx_runtime.jsx)("br",{}),"Please try again."]}),Object(jsx_runtime.jsx)("span",{className:"small",children:"If this problem persists, please report an issue or talk to our support team."})]})})})};try{TradeChartError_TradeChartError.displayName="TradeChartError",TradeChartError_TradeChartError.__docgenInfo={description:"",displayName:"TradeChartError",props:{type:{defaultValue:null,description:"",name:"type",required:!0,type:{name:"enum",value:[{value:'"InvalidPair"'},{value:'"Unexpected"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chart/TradeChart/TradeChartError.tsx#TradeChartError"]={docgenInfo:TradeChartError_TradeChartError.__docgenInfo,name:"TradeChartError",path:"src/components/Chart/TradeChart/TradeChartError.tsx#TradeChartError"})}catch(__react_docgen_typescript_loader_error){}var lodash=__webpack_require__("./node_modules/lodash/lodash.js"),_getTooltipPositionCss=function _getTooltipPositionCss(tooltipPosition){var _document$getElements,canvasWidth=null===(_document$getElements=document.getElementsByTagName("canvas")[0])||void 0===_document$getElements?void 0:_document$getElements.getBoundingClientRect().width;return tooltipPosition<120?{left:0}:canvasWidth&&tooltipPosition>canvasWidth-120?{right:0}:{left:tooltipPosition-120}},TradeChart_TradeChart_TradeChart=function TradeChart(_ref){var _last,_last2,_assetPair$assetB,_assetPair$assetB2,_tooltipData$data,assetPair=_ref.assetPair,poolType=_ref.poolType,granularity=_ref.granularity,chartType=_ref.chartType,onChartTypeChange=_ref.onChartTypeChange,onGranularityChange=_ref.onGranularityChange,primaryDataset=_ref.primaryDataset,_useState=Object(react.useState)({balance:null===(_last=Object(lodash.last)(primaryDataset))||void 0===_last?void 0:_last.y,usdBalance:null===(_last2=Object(lodash.last)(primaryDataset))||void 0===_last2?void 0:_last2.y,asset:{symbol:null===(_assetPair$assetB=assetPair.assetB)||void 0===_assetPair$assetB?void 0:_assetPair$assetB.symbol,fullName:null===(_assetPair$assetB2=assetPair.assetB)||void 0===_assetPair$assetB2?void 0:_assetPair$assetB2.fullName}}),_useState2=Object(slicedToArray.a)(_useState,2),displayData=_useState2[0],setDisplayData=_useState2[1],resetDisplayData=function resetDisplayData(){var _last3,_last4,_assetPair$assetB3,_assetPair$assetB4;setDisplayData({balance:null===(_last3=Object(lodash.last)(primaryDataset))||void 0===_last3?void 0:_last3.y,usdBalance:null===(_last4=Object(lodash.last)(primaryDataset))||void 0===_last4?void 0:_last4.y,asset:{symbol:null===(_assetPair$assetB3=assetPair.assetB)||void 0===_assetPair$assetB3?void 0:_assetPair$assetB3.symbol,fullName:null===(_assetPair$assetB4=assetPair.assetB)||void 0===_assetPair$assetB4?void 0:_assetPair$assetB4.fullName}})};Object(react.useEffect)((function(){resetDisplayData()}),[assetPair]);var _useState3=Object(react.useState)(displayData),_useState4=Object(slicedToArray.a)(_useState3,2),referenceData=_useState4[0],getTooltipPositionCss=(_useState4[1],Object(react.useCallback)(_getTooltipPositionCss,[])),_useState5=Object(react.useState)(void 0),_useState6=Object(slicedToArray.a)(_useState5,2),tooltipData=_useState6[0],setTooltipData=_useState6[1],dataTrend=(null==displayData?void 0:displayData.balance)==(null==referenceData?void 0:referenceData.balance)?LineChart.b.Neutral:(null==displayData?void 0:displayData.balance)>=(null==referenceData?void 0:referenceData.balance)?LineChart.b.Positive:LineChart.b.Negative;Object(react.useEffect)((function(){}),[tooltipData]);var handleTooltip=Object(react.useCallback)((function(tooltipData){if(setTooltipData(tooltipData),null==tooltipData?void 0:tooltipData.visible){var allData=[primaryDataset].reduce((function(allData,dataset){return allData.concat(dataset)}),[]),_referenceData=Object(lodash.find)(allData,{x:null==tooltipData?void 0:tooltipData.data.x,y:null==tooltipData?void 0:tooltipData.data.y});_referenceData&&setDisplayData(Object(objectSpread2.a)(Object(objectSpread2.a)({},displayData),{},{balance:_referenceData.y,usdBalance:_referenceData.y}))}else resetDisplayData()}),[setTooltipData]),availableChartTypes=Object(react.useMemo)((function(){return[shared.b.PRICE,shared.b.VOLUME,shared.b.WEIGHTS]}),[]),availableGranularity=Object(react.useMemo)((function(){return[shared.a.D30,shared.a.D7,shared.a.H24,shared.a.H1]}),[]);return Object(jsx_runtime.jsxs)("div",{className:"row p-5 g-0 trade-chart",children:[Object(jsx_runtime.jsx)("div",{className:"row g-0",children:Object(jsx_runtime.jsx)(ChartHeader.a,{assetPair:assetPair,poolType:poolType,granularity:granularity,chartType:chartType,onChartTypeChange:onChartTypeChange,onGranularityChange:onGranularityChange,displayData:displayData,referenceData:referenceData,dataTrend:dataTrend,isUserBrowsingGraph:null==tooltipData?void 0:tooltipData.visible,availableChartTypes:availableChartTypes,availableGranularity:availableGranularity})}),Object(jsx_runtime.jsxs)("div",{className:"row g-0",children:[(null==primaryDataset?void 0:primaryDataset.length)?Object(jsx_runtime.jsxs)("div",{className:"col-12 align-self-end trade-chart__chart-wrapper",children:[Object(jsx_runtime.jsx)("div",{className:"trade-chart__chart-wrapper__chart-jail",children:Object(jsx_runtime.jsx)(LineChart.a,{primaryDataset:primaryDataset,fill:!0,trend:dataTrend,onHandleTooltip:handleTooltip})}),(null==tooltipData?void 0:tooltipData.positionX)?Object(jsx_runtime.jsxs)("div",{children:[Object(jsx_runtime.jsx)("div",{className:"trade-chart__tooltip",style:{left:"".concat(tooltipData.positionX,"px"),opacity:tooltipData.visible?1:0}}),Object(jsx_runtime.jsx)("div",{className:"trade-chart__tooltip__label",style:Object(objectSpread2.a)(Object(objectSpread2.a)({},getTooltipPositionCss(tooltipData.positionX)),{},{opacity:tooltipData.visible?1:0}),children:(null===(_tooltipData$data=tooltipData.data)||void 0===_tooltipData$data?void 0:_tooltipData$data.x)?moment_default()(new Date(tooltipData.data.x)).toString():Object(jsx_runtime.jsx)(jsx_runtime.Fragment,{})})]}):Object(jsx_runtime.jsx)(jsx_runtime.Fragment,{}),Object(jsx_runtime.jsx)(ChartTicks.a,{className:"align-self-end",datasets:[primaryDataset],granularity:granularity})]}):Object(jsx_runtime.jsx)(jsx_runtime.Fragment,{}),(null==primaryDataset?void 0:primaryDataset.length)?Object(jsx_runtime.jsx)(jsx_runtime.Fragment,{}):Object(jsx_runtime.jsx)("div",{className:"col-12 align-self-center trade-chart__error-wrapper",children:Object(jsx_runtime.jsx)(TradeChartError_TradeChartError,{type:TradeChartErrorType.InvalidPair})})]})]})};try{_getTooltipPositionCss.displayName="_getTooltipPositionCss",_getTooltipPositionCss.__docgenInfo={description:"",displayName:"_getTooltipPositionCss",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chart/TradeChart/TradeChart.tsx#_getTooltipPositionCss"]={docgenInfo:_getTooltipPositionCss.__docgenInfo,name:"_getTooltipPositionCss",path:"src/components/Chart/TradeChart/TradeChart.tsx#_getTooltipPositionCss"})}catch(__react_docgen_typescript_loader_error){}try{TradeChart_TradeChart_TradeChart.displayName="TradeChart",TradeChart_TradeChart_TradeChart.__docgenInfo={description:"",displayName:"TradeChart",props:{assetPair:{defaultValue:null,description:"",name:"assetPair",required:!0,type:{name:"AssetPair"}},poolType:{defaultValue:null,description:"",name:"poolType",required:!0,type:{name:"enum",value:[{value:'"LBP"'},{value:'"XYK"'}]}},granularity:{defaultValue:null,description:"",name:"granularity",required:!0,type:{name:"enum",value:[{value:'"D30"'},{value:'"D7"'},{value:'"H24"'},{value:'"H1"'}]}},chartType:{defaultValue:null,description:"",name:"chartType",required:!0,type:{name:"enum",value:[{value:'"PRICE"'},{value:'"VOLUME"'},{value:'"WEIGHTS"'}]}},primaryDataset:{defaultValue:null,description:"",name:"primaryDataset",required:!0,type:{name:"Dataset"}},onChartTypeChange:{defaultValue:null,description:"",name:"onChartTypeChange",required:!0,type:{name:"(chartType: ChartType) => void"}},onGranularityChange:{defaultValue:null,description:"",name:"onGranularityChange",required:!0,type:{name:"(granularity: ChartGranularity) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chart/TradeChart/TradeChart.tsx#TradeChart"]={docgenInfo:TradeChart_TradeChart_TradeChart.__docgenInfo,name:"TradeChart",path:"src/components/Chart/TradeChart/TradeChart.tsx#TradeChart"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Chart/TradeChart/TradeChartError.scss":function(module,exports,__webpack_require__){},"./src/components/Chart/shared.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";var ChartGranularity,ChartType,PoolType;__webpack_require__.d(__webpack_exports__,"a",(function(){return ChartGranularity})),__webpack_require__.d(__webpack_exports__,"b",(function(){return ChartType})),__webpack_require__.d(__webpack_exports__,"c",(function(){return PoolType})),function(ChartGranularity){ChartGranularity.D30="D30",ChartGranularity.D7="D7",ChartGranularity.H24="H24",ChartGranularity.H1="H1"}(ChartGranularity||(ChartGranularity={})),function(ChartType){ChartType.PRICE="PRICE",ChartType.VOLUME="VOLUME",ChartType.WEIGHTS="WEIGHTS"}(ChartType||(ChartType={})),function(PoolType){PoolType.LBP="LBP",PoolType.XYK="XYK"}(PoolType||(PoolType={}))},"./src/components/Input/TokenInput.scss":function(module,exports,__webpack_require__){},"./src/components/Input/TokenInput.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));var _Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),_misc_StorybookWrapper__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/misc/StorybookWrapper.tsx"),_TokenInput__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Input/TokenInput.tsx"),_misc_icons_assets_ETH_svg__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/misc/icons/assets/ETH.svg"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/react/jsx-runtime.js");console.log("icon",_misc_icons_assets_ETH_svg__WEBPACK_IMPORTED_MODULE_3__.a),__webpack_exports__.default={title:"components/Input/TokenInput",component:_TokenInput__WEBPACK_IMPORTED_MODULE_2__.a,args:{asset:{symbol:"BSXFF",fullName:"Basilisk",icon:_misc_icons_assets_ETH_svg__WEBPACK_IMPORTED_MODULE_3__.a}}};var Default=function Template(args){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_misc_StorybookWrapper__WEBPACK_IMPORTED_MODULE_1__.a,{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div",{style:{width:"400px"},children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_TokenInput__WEBPACK_IMPORTED_MODULE_2__.a,Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)({},args))})})}.bind({});Default.parameters=Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)({storySource:{source:"(args: any) => {\n    return <StorybookWrapper >\n        <div style={{\n            width: '400px'\n        }}\n        >\n            <TokenInput {...args} />\n        </div>\n    </StorybookWrapper>\n}"}},Default.parameters);try{Default.displayName="Default",Default.__docgenInfo={description:"",displayName:"Default",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Input/TokenInput.stories.tsx#Default"]={docgenInfo:Default.__docgenInfo,name:"Default",path:"src/components/Input/TokenInput.stories.tsx#Default"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Input/TokenInput.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return TokenInput}));__webpack_require__("./src/components/Input/TokenInput.scss"),__webpack_require__("./node_modules/@fortawesome/fontawesome-free/js/fontawesome.js");var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@fortawesome/free-solid-svg-icons/index.es.js"),_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@fortawesome/react-fontawesome/index.es.js"),react_currency_input_field__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/react-currency-input-field/dist/index.esm.js"),react_intl__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/react-intl/lib/index.js"),react__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/react/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/react/jsx-runtime.js"),TokenInput=function TokenInput(_ref){var asset=_ref.asset,slippage=_ref.slippage,value=_ref.value,onValueChange=_ref.onValueChange,handleValueChange=Object(react__WEBPACK_IMPORTED_MODULE_6__.useCallback)((function(value){value||(value="0"),onValueChange&&onValueChange(value)}),[]);return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("div",{className:"container-fluid p-0 token-input",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div",{className:"row p-0 g-0 align-items-stretch justify-content-between",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("div",{className:"col-auto token-input__selector",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("div",{className:"row p-0 g-0 h-100",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("div",{className:"col-auto align-self-center",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div",{className:"row p-0 g-0 align-items-center",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("div",{className:"col-auto token-input__selector__asset-icon",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("img",{src:asset.icon})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("div",{className:"col token-input__selector__asset-symbol",children:asset.symbol}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("div",{className:"col-auto token-input__selector__chevron",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_3__.a,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_2__.a})})]})})})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("div",{className:"col token-input__input",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("div",{className:"row p-0 g-0",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div",{className:"col ",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div",{className:"token-input__input__granularity",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_3__.a,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_2__.a}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("span",{children:["micro ",asset.symbol]})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(react_currency_input_field__WEBPACK_IMPORTED_MODULE_4__.a,{className:"token-input__input__currency-input",placeholder:"0",decimalsLimit:6,value:value,onValueChange:handleValueChange,size:5}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div",{className:"token-input__input__details",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("span",{className:"token-input__input__details__usd-balance",children:["~",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(react_intl__WEBPACK_IMPORTED_MODULE_5__.b,{value:3200.567,style:"currency",currency:"USD",minimumFractionDigits:2,maximumFractionDigits:2})]}),slippage?Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.Fragment,{children:[" ",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("span",{className:"token-input__input__details__slippage",children:["(-",slippage,"%)"]})]}):Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.Fragment,{})]})]})})})]})})};try{TokenInput.displayName="TokenInput",TokenInput.__docgenInfo={description:"",displayName:"TokenInput",props:{asset:{defaultValue:null,description:"",name:"asset",required:!0,type:{name:"Asset"}},slippage:{defaultValue:null,description:"",name:"slippage",required:!1,type:{name:"number"}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"string"}},onValueChange:{defaultValue:null,description:"",name:"onValueChange",required:!1,type:{name:"((value: string) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Input/TokenInput.tsx#TokenInput"]={docgenInfo:TokenInput.__docgenInfo,name:"TokenInput",path:"src/components/Input/TokenInput.tsx#TokenInput"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Navigation/Navigation.scss":function(module,exports,__webpack_require__){},"./src/components/Navigation/Navigation.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));var objectSpread2=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),slicedToArray=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react=__webpack_require__("./node_modules/react/index.js"),jsx_runtime=(__webpack_require__("./src/components/Navigation/Navigation.scss"),__webpack_require__("./node_modules/react/jsx-runtime.js")),Navigation_Modal=function Modal(_ref){var children=_ref.children;return Object(jsx_runtime.jsxs)("div",{children:[Object(jsx_runtime.jsx)("h1",{children:"modal"}),children,Object(jsx_runtime.jsx)("button",{children:"click me"})]})},Navigation_useModal=function useModal(content){var _useState=Object(react.useState)(!1),_useState2=Object(slicedToArray.a)(_useState,2),show=_useState2[0],setShow=_useState2[1];return{modal:show?Object(jsx_runtime.jsx)(Navigation_Modal,{children:content}):Object(jsx_runtime.jsx)(jsx_runtime.Fragment,{}),toggleModal:function toggleModal(){return setShow((function(show){return!show}))}}},Navigation_Navigation_Navigation=function Navigation(_ref2){var extensionIsAvailable=_ref2.extensionIsAvailable,onOpenConfig=(_ref2.activeAccount,_ref2.onOpenConfig);return extensionIsAvailable?Object(jsx_runtime.jsxs)("div",{children:[Object(jsx_runtime.jsx)("h1",{children:"Available"}),Object(jsx_runtime.jsx)("button",{onClick:function onClick(_){return onOpenConfig()},children:"config"})]}):Object(jsx_runtime.jsx)("h1",{children:"Unavailable"})};try{Navigation_Modal.displayName="Modal",Navigation_Modal.__docgenInfo={description:"",displayName:"Modal",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Navigation/Navigation.tsx#Modal"]={docgenInfo:Navigation_Modal.__docgenInfo,name:"Modal",path:"src/components/Navigation/Navigation.tsx#Modal"})}catch(__react_docgen_typescript_loader_error){}try{Navigation_useModal.displayName="useModal",Navigation_useModal.__docgenInfo={description:"",displayName:"useModal",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Navigation/Navigation.tsx#useModal"]={docgenInfo:Navigation_useModal.__docgenInfo,name:"useModal",path:"src/components/Navigation/Navigation.tsx#useModal"})}catch(__react_docgen_typescript_loader_error){}try{Navigation_Navigation_Navigation.displayName="Navigation",Navigation_Navigation_Navigation.__docgenInfo={description:"",displayName:"Navigation",props:{extensionIsAvailable:{defaultValue:null,description:"",name:"extensionIsAvailable",required:!0,type:{name:"boolean"}},activeAccount:{defaultValue:null,description:"",name:"activeAccount",required:!0,type:{name:"any"}},onOpenConfig:{defaultValue:null,description:"",name:"onOpenConfig",required:!0,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Navigation/Navigation.tsx#Navigation"]={docgenInfo:Navigation_Navigation_Navigation.__docgenInfo,name:"Navigation",path:"src/components/Navigation/Navigation.tsx#Navigation"})}catch(__react_docgen_typescript_loader_error){}__webpack_exports__.default={title:"components/Navigation",component:Navigation_Navigation_Navigation};var Default=function Template(props){return Object(jsx_runtime.jsx)(Navigation_Navigation_Navigation,Object(objectSpread2.a)({},props))}.bind({});Default.args={extensionIsAvailable:!0},Default.parameters=Object(objectSpread2.a)({storySource:{source:"(props) => {\n    return <Navigation {...props}/>\n}"}},Default.parameters)},"./src/components/Trade/TradeForm_old.scss":function(module,exports,__webpack_require__){},"./src/components/Trade/TradeForm_old.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));var _Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),_misc_StorybookWrapper__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/misc/StorybookWrapper.tsx"),_TradeForm_old__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Trade/TradeForm_old.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.default={title:"Trade/TradeForm_old",component:_TradeForm_old__WEBPACK_IMPORTED_MODULE_2__.a,args:{assetPair:{assetA:{symbol:"ETH",fullName:"Ethereum"},assetB:{symbol:"BTC",fullName:"Bitcoin"}}}};var Default=function Template(args){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_misc_StorybookWrapper__WEBPACK_IMPORTED_MODULE_1__.a,{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_TradeForm_old__WEBPACK_IMPORTED_MODULE_2__.a,Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)({},args))})}.bind({});Default.parameters=Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)({storySource:{source:"(args: TradeFormProps) => {\n  return (\n    <StorybookWrapper>\n      <TradeForm {...args} />\n    </StorybookWrapper>\n  );\n}"}},Default.parameters);try{Default.displayName="Default",Default.__docgenInfo={description:"",displayName:"Default",props:{assetPair:{defaultValue:null,description:"",name:"assetPair",required:!0,type:{name:"AssetPair"}},spotPrice:{defaultValue:null,description:"",name:"spotPrice",required:!0,type:{name:"number"}},onAssetPairSwitch:{defaultValue:null,description:"",name:"onAssetPairSwitch",required:!0,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Trade/TradeForm_old.stories.tsx#Default"]={docgenInfo:Default.__docgenInfo,name:"Default",path:"src/components/Trade/TradeForm_old.stories.tsx#Default"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Trade/TradeForm_old.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return TradeForm}));var _Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),_Input_TokenInput__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/Input/TokenInput.tsx"),_Button_Button__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Button/Button.tsx"),react__WEBPACK_IMPORTED_MODULE_4__=(__webpack_require__("./src/components/Trade/TradeForm_old.scss"),__webpack_require__("./node_modules/react/index.js")),_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@fortawesome/free-solid-svg-icons/index.es.js"),_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@fortawesome/react-fontawesome/index.es.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/react/jsx-runtime.js"),TradeForm=function TradeForm(_ref){var _assetPair$assetB,assetPair=_ref.assetPair,spotPrice=_ref.spotPrice,onAssetPairSwitch=_ref.onAssetPairSwitch,_useState=Object(react__WEBPACK_IMPORTED_MODULE_4__.useState)({assetA:{value:"0"},assetB:{value:"0"}}),_useState2=Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__.a)(_useState,2),tradeForm=_useState2[0],setTradeForm=_useState2[1];return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div",{className:"row p-5 g-0 justify-content-between flex-column trade-form",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div",{className:"col-auto",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("span",{className:"trade-form__title",children:"Pay With"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_Input_TokenInput__WEBPACK_IMPORTED_MODULE_1__.a,{asset:assetPair.assetA,value:tradeForm.assetA.value,onValueChange:function handleAssetAValueChange(value){return setTradeForm({assetB:{value:"".concat(parseFloat(value)/2)},assetA:{value:value}})}})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div",{className:"col-auto flex-row trade-form__switcher",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("div",{className:"divider"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div",{className:"row justify-content-between",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("div",{className:"col-auto",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("div",{className:"trade-form__switcher__switch-assets",onClick:onAssetPairSwitch,children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_6__.a,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_5__.b})})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("div",{className:"col-auto align-self-center",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div",{className:"trade-form__switcher__spot-price",children:["1 ",assetPair.assetA.symbol," = ",spotPrice," ",null===(_assetPair$assetB=assetPair.assetB)||void 0===_assetPair$assetB?void 0:_assetPair$assetB.symbol]})})]})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div",{className:"col-auto",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("span",{className:"trade-form__title",children:"You Get"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_Input_TokenInput__WEBPACK_IMPORTED_MODULE_1__.a,{asset:assetPair.assetB,value:tradeForm.assetB.value,onValueChange:function handleAssetBValueChange(value){return setTradeForm({assetA:{value:"".concat(2*parseFloat(value))},assetB:{value:value}})}})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div",{className:"col-auto trade-form__action",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("div",{className:"divider"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("div",{className:"row g-0 p-0 h-100",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div",{className:"col-12 align-self-end text-center",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("span",{className:"trade-form__trade-fee",children:"Trade fee = 0.03%"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_Button_Button__WEBPACK_IMPORTED_MODULE_2__.a,{kind:_Button_Button__WEBPACK_IMPORTED_MODULE_2__.b.Primary,children:"SWAP NOW"})]})})]})]})};try{TradeForm.displayName="TradeForm",TradeForm.__docgenInfo={description:"",displayName:"TradeForm",props:{assetPair:{defaultValue:null,description:"",name:"assetPair",required:!0,type:{name:"AssetPair"}},spotPrice:{defaultValue:null,description:"",name:"spotPrice",required:!0,type:{name:"number"}},onAssetPairSwitch:{defaultValue:null,description:"",name:"onAssetPairSwitch",required:!0,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Trade/TradeForm_old.tsx#TradeForm"]={docgenInfo:TradeForm.__docgenInfo,name:"TradeForm",path:"src/components/Trade/TradeForm_old.tsx#TradeForm"})}catch(__react_docgen_typescript_loader_error){}},"./src/hooks/math/useFromPrecision.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return fromPrecision12}));var bignumber_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/bignumber.js/bignumber.js"),bignumber_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(bignumber_js__WEBPACK_IMPORTED_MODULE_0__),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),precision12=new bignumber_js__WEBPACK_IMPORTED_MODULE_0___default.a(10).pow(12),precision18=new bignumber_js__WEBPACK_IMPORTED_MODULE_0___default.a(10).pow(18),fromPrecision12=function fromPrecision12(amount){return amount&&new bignumber_js__WEBPACK_IMPORTED_MODULE_0___default.a(amount).dividedBy(precision12).toFixed(12)},useFromPrecision12=function useFromPrecision12(amount){return Object(react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((function(){return fromPrecision12(amount)}),[amount])},useFromPrecision18=function useFromPrecision18(amount){return Object(react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((function(){return amount&&new bignumber_js__WEBPACK_IMPORTED_MODULE_0___default.a(amount).dividedBy(precision18).toFixed(18)}),[amount])};try{fromPrecision12.displayName="fromPrecision12",fromPrecision12.__docgenInfo={description:"",displayName:"fromPrecision12",props:{c:{defaultValue:null,description:"The coefficient of the value of this BigNumber, an array of base 1e14 integer numbers, or null.",name:"c",required:!0,type:{name:"number[] | null"}},e:{defaultValue:null,description:"The exponent of the value of this BigNumber, an integer number, -1000000000 to 1000000000, or null.",name:"e",required:!0,type:{name:"number | null"}},s:{defaultValue:null,description:"The sign of the value of this BigNumber, -1, 1, or null.",name:"s",required:!0,type:{name:"number | null"}},absoluteValue:{defaultValue:null,description:"Returns a BigNumber whose value is the absolute value, i.e. the magnitude, of the value of this\nBigNumber.\n\nThe return value is always exact and unrounded.\n\n```ts\nx = new BigNumber(-0.8)\nx.absoluteValue()           // '0.8'\n```",name:"absoluteValue",required:!0,type:{name:"() => BigNumber"}},abs:{defaultValue:null,description:"Returns a BigNumber whose value is the absolute value, i.e. the magnitude, of the value of this\nBigNumber.\n\nThe return value is always exact and unrounded.\n\n```ts\nx = new BigNumber(-0.8)\nx.abs()                     // '0.8'\n```",name:"abs",required:!0,type:{name:"() => BigNumber"}},comparedTo:{defaultValue:null,description:"Returns |                                                               |\n:-------:|:--------------------------------------------------------------|\n   1    | If the value of this BigNumber is greater than the value of `n`\n  -1    | If the value of this BigNumber is less than the value of `n`\n   0    | If this BigNumber and `n` have the same value\n`null`  | If the value of either this BigNumber or `n` is `NaN`\n\n```ts\n\nx = new BigNumber(Infinity)\ny = new BigNumber(5)\nx.comparedTo(y)                 // 1\nx.comparedTo(x.minus(1))        // 0\ny.comparedTo(NaN)               // null\ny.comparedTo('110', 2)          // -1\n```\n@param n A numeric value.\n@param base The base of n.",name:"comparedTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => number"}},decimalPlaces:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded by rounding mode\n`roundingMode` to a maximum of `decimalPlaces` decimal places.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the return value is the number of\ndecimal places of the value of this BigNumber, or `null` if the value of this BigNumber is\n±`Infinity` or `NaN`.\n\nIf `roundingMode` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(1234.56)\nx.decimalPlaces()                      // 2\nx.decimalPlaces(1)                     // '1234.6'\nx.decimalPlaces(2)                     // '1234.56'\nx.decimalPlaces(10)                    // '1234.56'\nx.decimalPlaces(0, 1)                  // '1234'\nx.decimalPlaces(0, 6)                  // '1235'\nx.decimalPlaces(1, 1)                  // '1234.5'\nx.decimalPlaces(1, BigNumber.ROUND_HALF_EVEN)     // '1234.6'\nx                                      // '1234.56'\ny = new BigNumber('9.9e-101')\ny.decimalPlaces()                      // 102\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"decimalPlaces",required:!0,type:{name:"{ (): number; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},dp:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded by rounding mode\n`roundingMode` to a maximum of `decimalPlaces` decimal places.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the return value is the number of\ndecimal places of the value of this BigNumber, or `null` if the value of this BigNumber is\n±`Infinity` or `NaN`.\n\nIf `roundingMode` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(1234.56)\nx.dp()                                 // 2\nx.dp(1)                                // '1234.6'\nx.dp(2)                                // '1234.56'\nx.dp(10)                               // '1234.56'\nx.dp(0, 1)                             // '1234'\nx.dp(0, 6)                             // '1235'\nx.dp(1, 1)                             // '1234.5'\nx.dp(1, BigNumber.ROUND_HALF_EVEN)     // '1234.6'\nx                                      // '1234.56'\ny = new BigNumber('9.9e-101')\ny.dp()                                 // 102\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"dp",required:!0,type:{name:"{ (): number; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},dividedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber divided by `n`, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\n```ts\nx = new BigNumber(355)\ny = new BigNumber(113)\nx.dividedBy(y)                  // '3.14159292035398230088'\nx.dividedBy(5)                  // '71'\nx.dividedBy(47, 16)             // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"dividedBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},div:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber divided by `n`, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\n```ts\nx = new BigNumber(355)\ny = new BigNumber(113)\nx.div(y)                    // '3.14159292035398230088'\nx.div(5)                    // '71'\nx.div(47, 16)               // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"div",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},dividedToIntegerBy:{defaultValue:null,description:"Returns a BigNumber whose value is the integer part of dividing the value of this BigNumber by\n`n`.\n\n```ts\nx = new BigNumber(5)\ny = new BigNumber(3)\nx.dividedToIntegerBy(y)              // '1'\nx.dividedToIntegerBy(0.7)            // '7'\nx.dividedToIntegerBy('0.f', 16)      // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"dividedToIntegerBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},idiv:{defaultValue:null,description:"Returns a BigNumber whose value is the integer part of dividing the value of this BigNumber by\n`n`.\n\n```ts\nx = new BigNumber(5)\ny = new BigNumber(3)\nx.idiv(y)                       // '1'\nx.idiv(0.7)                     // '7'\nx.idiv('0.f', 16)               // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"idiv",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},exponentiatedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber exponentiated by `n`, i.e.\nraised to the power `n`, and optionally modulo a modulus `m`.\n\nIf `n` is negative the result is rounded according to the current `DECIMAL_PLACES` and\n`ROUNDING_MODE` settings.\n\nAs the number of digits of the result of the power operation can grow so large so quickly,\ne.g. 123.456**10000 has over 50000 digits, the number of significant digits calculated is\nlimited to the value of the `POW_PRECISION` setting (unless a modulus `m` is specified).\n\nBy default `POW_PRECISION` is set to 0. This means that an unlimited number of significant\ndigits will be calculated, and that the method's performance will decrease dramatically for\nlarger exponents.\n\nIf `m` is specified and the value of `m`, `n` and this BigNumber are integers and `n` is\npositive, then a fast modular exponentiation algorithm is used, otherwise the operation will\nbe performed as `x.exponentiatedBy(n).modulo(m)` with a `POW_PRECISION` of 0.\n\nThrows if `n` is not an integer.\n\n```ts\nMath.pow(0.7, 2)                    // 0.48999999999999994\nx = new BigNumber(0.7)\nx.exponentiatedBy(2)                // '0.49'\nBigNumber(3).exponentiatedBy(-2)    // '0.11111111111111111111'\n```\n@param n The exponent, an integer.\n@param m The modulus.",name:"exponentiatedBy",required:!0,type:{name:"{ (n: Value, m?: Value | undefined): BigNumber; (n: number, m?: Value | undefined): BigNumber; }"}},pow:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber exponentiated by `n`, i.e.\nraised to the power `n`, and optionally modulo a modulus `m`.\n\nIf `n` is negative the result is rounded according to the current `DECIMAL_PLACES` and\n`ROUNDING_MODE` settings.\n\nAs the number of digits of the result of the power operation can grow so large so quickly,\ne.g. 123.456**10000 has over 50000 digits, the number of significant digits calculated is\nlimited to the value of the `POW_PRECISION` setting (unless a modulus `m` is specified).\n\nBy default `POW_PRECISION` is set to 0. This means that an unlimited number of significant\ndigits will be calculated, and that the method's performance will decrease dramatically for\nlarger exponents.\n\nIf `m` is specified and the value of `m`, `n` and this BigNumber are integers and `n` is\npositive, then a fast modular exponentiation algorithm is used, otherwise the operation will\nbe performed as `x.pow(n).modulo(m)` with a `POW_PRECISION` of 0.\n\nThrows if `n` is not an integer.\n\n```ts\nMath.pow(0.7, 2)                   // 0.48999999999999994\nx = new BigNumber(0.7)\nx.pow(2)                           // '0.49'\nBigNumber(3).pow(-2)               // '0.11111111111111111111'\n```\n@param n The exponent, an integer.\n@param m The modulus.",name:"pow",required:!0,type:{name:"{ (n: Value, m?: Value | undefined): BigNumber; (n: number, m?: Value | undefined): BigNumber; }"}},integerValue:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded to an integer using\nrounding mode `rm`.\n\nIf `rm` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `rm` is invalid.\n\n```ts\nx = new BigNumber(123.456)\nx.integerValue()                        // '123'\nx.integerValue(BigNumber.ROUND_CEIL)    // '124'\ny = new BigNumber(-12.7)\ny.integerValue()                        // '-13'\nx.integerValue(BigNumber.ROUND_DOWN)    // '-12'\n```\n@param rm The roundng mode, an integer, 0 to 8.",name:"integerValue",required:!0,type:{name:"(rm?: RoundingMode | undefined) => BigNumber"}},isEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is equal to the value of `n`, otherwise returns\n`false`.\n\nAs with JavaScript, `NaN` does not equal `NaN`.\n\n```ts\n0 === 1e-324                           // true\nx = new BigNumber(0)\nx.isEqualTo('1e-324')                  // false\nBigNumber(-0).isEqualTo(x)             // true  ( -0 === 0 )\nBigNumber(255).isEqualTo('ff', 16)     // true\n\ny = new BigNumber(NaN)\ny.isEqualTo(NaN)                // false\n```\n@param n A numeric value.\n@param base The base of n.",name:"isEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},eq:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is equal to the value of `n`, otherwise returns\n`false`.\n\nAs with JavaScript, `NaN` does not equal `NaN`.\n\n```ts\n0 === 1e-324                    // true\nx = new BigNumber(0)\nx.eq('1e-324')                  // false\nBigNumber(-0).eq(x)             // true  ( -0 === 0 )\nBigNumber(255).eq('ff', 16)     // true\n\ny = new BigNumber(NaN)\ny.eq(NaN)                       // false\n```\n@param n A numeric value.\n@param base The base of n.",name:"eq",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isFinite:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is a finite number, otherwise returns `false`.\n\nThe only possible non-finite values of a BigNumber are `NaN`, `Infinity` and `-Infinity`.\n\n```ts\nx = new BigNumber(1)\nx.isFinite()                    // true\ny = new BigNumber(Infinity)\ny.isFinite()                    // false\n```",name:"isFinite",required:!0,type:{name:"() => boolean"}},isGreaterThan:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than the value of `n`, otherwise\nreturns `false`.\n\n```ts\n0.1 > (0.3 - 0.2)                             // true\nx = new BigNumber(0.1)\nx.isGreaterThan(BigNumber(0.3).minus(0.2))    // false\nBigNumber(0).isGreaterThan(x)                 // false\nBigNumber(11, 3).isGreaterThan(11.1, 2)       // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isGreaterThan",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},gt:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than the value of `n`, otherwise\nreturns `false`.\n\n```ts\n0.1 > (0.3 - 0                     // true\nx = new BigNumber(0.1)\nx.gt(BigNumber(0.3).minus(0.2))    // false\nBigNumber(0).gt(x)                 // false\nBigNumber(11, 3).gt(11.1, 2)       // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"gt",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isGreaterThanOrEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n(0.3 - 0.2) >= 0.1                                  // false\nx = new BigNumber(0.3).minus(0.2)\nx.isGreaterThanOrEqualTo(0.1)                       // true\nBigNumber(1).isGreaterThanOrEqualTo(x)              // true\nBigNumber(10, 18).isGreaterThanOrEqualTo('i', 36)   // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isGreaterThanOrEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},gte:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n(0.3 - 0.2) >= 0.1                    // false\nx = new BigNumber(0.3).minus(0.2)\nx.gte(0.1)                            // true\nBigNumber(1).gte(x)                   // true\nBigNumber(10, 18).gte('i', 36)        // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"gte",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isInteger:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is an integer, otherwise returns `false`.\n\n```ts\nx = new BigNumber(1)\nx.isInteger()                   // true\ny = new BigNumber(123.456)\ny.isInteger()                   // false\n```",name:"isInteger",required:!0,type:{name:"() => boolean"}},isLessThan:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than the value of `n`, otherwise returns\n`false`.\n\n```ts\n(0.3 - 0.2) < 0.1                       // true\nx = new BigNumber(0.3).minus(0.2)\nx.isLessThan(0.1)                       // false\nBigNumber(0).isLessThan(x)              // true\nBigNumber(11.1, 2).isLessThan(11, 3)    // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isLessThan",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},lt:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than the value of `n`, otherwise returns\n`false`.\n\n```ts\n(0.3 - 0.2) < 0.1                       // true\nx = new BigNumber(0.3).minus(0.2)\nx.lt(0.1)                               // false\nBigNumber(0).lt(x)                      // true\nBigNumber(11.1, 2).lt(11, 3)            // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"lt",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isLessThanOrEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n0.1 <= (0.3 - 0.2)                                 // false\nx = new BigNumber(0.1)\nx.isLessThanOrEqualTo(BigNumber(0.3).minus(0.2))   // true\nBigNumber(-1).isLessThanOrEqualTo(x)               // true\nBigNumber(10, 18).isLessThanOrEqualTo('i', 36)     // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isLessThanOrEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},lte:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n0.1 <= (0.3 - 0.2)                  // false\nx = new BigNumber(0.1)\nx.lte(BigNumber(0.3).minus(0.2))    // true\nBigNumber(-1).lte(x)                // true\nBigNumber(10, 18).lte('i', 36)      // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"lte",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isNaN:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is `NaN`, otherwise returns `false`.\n\n```ts\nx = new BigNumber(NaN)\nx.isNaN()                       // true\ny = new BigNumber('Infinity')\ny.isNaN()                       // false\n```",name:"isNaN",required:!0,type:{name:"() => boolean"}},isNegative:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is negative, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isNegative()                  // true\ny = new BigNumber(2)\ny.isNegative()                  // false\n```",name:"isNegative",required:!0,type:{name:"() => boolean"}},isPositive:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is positive, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isPositive()                  // false\ny = new BigNumber(2)\ny.isPositive()                  // true\n```",name:"isPositive",required:!0,type:{name:"() => boolean"}},isZero:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is zero or minus zero, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isZero()                 // true\n```",name:"isZero",required:!0,type:{name:"() => boolean"}},minus:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber minus `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.3 - 0.1                       // 0.19999999999999998\nx = new BigNumber(0.3)\nx.minus(0.1)                    // '0.2'\nx.minus(0.6, 20)                // '0'\n```\n@param n A numeric value.\n@param base The base of n.",name:"minus",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},modulo:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber modulo `n`, i.e. the integer\nremainder of dividing this BigNumber by `n`.\n\nThe value returned, and in particular its sign, is dependent on the value of the `MODULO_MODE`\nsetting of this BigNumber constructor. If it is 1 (default value), the result will have the\nsame sign as this BigNumber, and it will match that of Javascript's `%` operator (within the\nlimits of double precision) and BigDecimal's `remainder` method.\n\nThe return value is always exact and unrounded.\n\nSee `MODULO_MODE` for a description of the other modulo modes.\n\n```ts\n1 % 0.9                         // 0.09999999999999998\nx = new BigNumber(1)\nx.modulo(0.9)                   // '0.1'\ny = new BigNumber(33)\ny.modulo('a', 33)               // '3'\n```\n@param n A numeric value.\n@param base The base of n.",name:"modulo",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},mod:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber modulo `n`, i.e. the integer\nremainder of dividing this BigNumber by `n`.\n\nThe value returned, and in particular its sign, is dependent on the value of the `MODULO_MODE`\nsetting of this BigNumber constructor. If it is 1 (default value), the result will have the\nsame sign as this BigNumber, and it will match that of Javascript's `%` operator (within the\nlimits of double precision) and BigDecimal's `remainder` method.\n\nThe return value is always exact and unrounded.\n\nSee `MODULO_MODE` for a description of the other modulo modes.\n\n```ts\n1 % 0.9                      // 0.09999999999999998\nx = new BigNumber(1)\nx.mod(0.9)                   // '0.1'\ny = new BigNumber(33)\ny.mod('a', 33)               // '3'\n```\n@param n A numeric value.\n@param base The base of n.",name:"mod",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},multipliedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber multiplied by `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.6 * 3                                // 1.7999999999999998\nx = new BigNumber(0.6)\ny = x.multipliedBy(3)                  // '1.8'\nBigNumber('7e+500').multipliedBy(y)    // '1.26e+501'\nx.multipliedBy('-a', 16)               // '-6'\n```\n@param n A numeric value.\n@param base The base of n.",name:"multipliedBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},times:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber multiplied by `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.6 * 3                         // 1.7999999999999998\nx = new BigNumber(0.6)\ny = x.times(3)                  // '1.8'\nBigNumber('7e+500').times(y)    // '1.26e+501'\nx.times('-a', 16)               // '-6'\n```\n@param n A numeric value.\n@param base The base of n.",name:"times",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},negated:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber negated, i.e. multiplied by -1.\n\n```ts\nx = new BigNumber(1.8)\nx.negated()                     // '-1.8'\ny = new BigNumber(-1.3)\ny.negated()                     // '1.3'\n```",name:"negated",required:!0,type:{name:"() => BigNumber"}},plus:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber plus `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.1 + 0.2                       // 0.30000000000000004\nx = new BigNumber(0.1)\ny = x.plus(0.2)                 // '0.3'\nBigNumber(0.7).plus(x).plus(y)  // '1.1'\nx.plus('0.1', 8)                // '0.225'\n```\n@param n A numeric value.\n@param base The base of n.",name:"plus",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},precision:{defaultValue:null,description:"Returns the number of significant digits of the value of this BigNumber, or `null` if the value\nof this BigNumber is ±`Infinity` or `NaN`.\n\nIf `includeZeros` is true then any trailing zeros of the integer part of the value of this\nBigNumber are counted as significant digits, otherwise they are not.\n\nThrows if `includeZeros` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.precision()                         // 9\ny = new BigNumber(987000)\ny.precision(false)                    // 3\ny.precision(true)                     // 6\n```\nReturns a BigNumber whose value is the value of this BigNumber rounded to a precision of\n`significantDigits` significant digits using rounding mode `roundingMode`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` will be used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.precision(6)                         // '9876.54'\nx.precision(6, BigNumber.ROUND_UP)     // '9876.55'\nx.precision(2)                         // '9900'\nx.precision(2, 1)                      // '9800'\nx                                      // '9876.54321'\n```\n@param includeZeros Whether to include integer trailing zeros in the significant digit count.\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"precision",required:!0,type:{name:"{ (includeZeros?: boolean | undefined): number; (significantDigits: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},sd:{defaultValue:null,description:"Returns the number of significant digits of the value of this BigNumber,\nor `null` if the value of this BigNumber is ±`Infinity` or `NaN`.\n\nIf `includeZeros` is true then any trailing zeros of the integer part of\nthe value of this BigNumber are counted as significant digits, otherwise\nthey are not.\n\nThrows if `includeZeros` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.sd()                         // 9\ny = new BigNumber(987000)\ny.sd(false)                    // 3\ny.sd(true)                     // 6\n```\nReturns a BigNumber whose value is the value of this BigNumber rounded to a precision of\n`significantDigits` significant digits using rounding mode `roundingMode`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` will be used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.sd(6)                           // '9876.54'\nx.sd(6, BigNumber.ROUND_UP)       // '9876.55'\nx.sd(2)                           // '9900'\nx.sd(2, 1)                        // '9800'\nx                                 // '9876.54321'\n```\n@param includeZeros Whether to include integer trailing zeros in the significant digit count.\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"sd",required:!0,type:{name:"{ (includeZeros?: boolean | undefined): number; (significantDigits: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},shiftedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber shifted by `n` places.\n\nThe shift is of the decimal point, i.e. of powers of ten, and is to the left if `n` is negative\nor to the right if `n` is positive.\n\nThe return value is always exact and unrounded.\n\nThrows if `n` is invalid.\n\n```ts\nx = new BigNumber(1.23)\nx.shiftedBy(3)                      // '1230'\nx.shiftedBy(-3)                     // '0.00123'\n```\n@param n The shift value, integer, -9007199254740991 to 9007199254740991.",name:"shiftedBy",required:!0,type:{name:"(n: number) => BigNumber"}},squareRoot:{defaultValue:null,description:"Returns a BigNumber whose value is the square root of the value of this BigNumber, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\nThe return value will be correctly rounded, i.e. rounded as if the result was first calculated\nto an infinite number of correct digits before rounding.\n\n```ts\nx = new BigNumber(16)\nx.squareRoot()                  // '4'\ny = new BigNumber(3)\ny.squareRoot()                  // '1.73205080756887729353'\n```",name:"squareRoot",required:!0,type:{name:"() => BigNumber"}},sqrt:{defaultValue:null,description:"Returns a BigNumber whose value is the square root of the value of this BigNumber, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\nThe return value will be correctly rounded, i.e. rounded as if the result was first calculated\nto an infinite number of correct digits before rounding.\n\n```ts\nx = new BigNumber(16)\nx.sqrt()                  // '4'\ny = new BigNumber(3)\ny.sqrt()                  // '1.73205080756887729353'\n```",name:"sqrt",required:!0,type:{name:"() => BigNumber"}},toExponential:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in exponential notation rounded using\nrounding mode `roundingMode` to `decimalPlaces` decimal places, i.e with one digit before the\ndecimal point and `decimalPlaces` digits after it.\n\nIf the value of this BigNumber in exponential notation has fewer than `decimalPlaces` fraction\ndigits, the return value will be appended with zeros accordingly.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the number of digits after the\ndecimal point defaults to the minimum number of digits necessary to represent the value\nexactly.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = 45.6\ny = new BigNumber(x)\nx.toExponential()               // '4.56e+1'\ny.toExponential()               // '4.56e+1'\nx.toExponential(0)              // '5e+1'\ny.toExponential(0)              // '5e+1'\nx.toExponential(1)              // '4.6e+1'\ny.toExponential(1)              // '4.6e+1'\ny.toExponential(1, 1)           // '4.5e+1'  (ROUND_DOWN)\nx.toExponential(3)              // '4.560e+1'\ny.toExponential(3)              // '4.560e+1'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"toExponential",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}},toFixed:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in normal (fixed-point) notation\nrounded to `decimalPlaces` decimal places using rounding mode `roundingMode`.\n\nIf the value of this BigNumber in normal notation has fewer than `decimalPlaces` fraction\ndigits, the return value will be appended with zeros accordingly.\n\nUnlike `Number.prototype.toFixed`, which returns exponential notation if a number is greater or\nequal to 10**21, this method will always return normal notation.\n\nIf `decimalPlaces` is omitted or is `null` or `undefined`, the return value will be unrounded\nand in normal notation. This is also unlike `Number.prototype.toFixed`, which returns the value\nto zero decimal places. It is useful when normal notation is required and the current\n`EXPONENTIAL_AT` setting causes `toString` to return exponential notation.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = 3.456\ny = new BigNumber(x)\nx.toFixed()                     // '3'\ny.toFixed()                     // '3.456'\ny.toFixed(0)                    // '3'\nx.toFixed(2)                    // '3.46'\ny.toFixed(2)                    // '3.46'\ny.toFixed(2, 1)                 // '3.45'  (ROUND_DOWN)\nx.toFixed(5)                    // '3.45600'\ny.toFixed(5)                    // '3.45600'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"toFixed",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}},toFormat:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in normal (fixed-point) notation\nrounded to `decimalPlaces` decimal places using rounding mode `roundingMode`, and formatted\naccording to the properties of the `format` or `FORMAT` object.\n\nThe formatting object may contain some or all of the properties shown in the examples below.\n\nIf `decimalPlaces` is omitted or is `null` or `undefined`, then the return value is not\nrounded to a fixed number of decimal places.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nIf `format` is omitted or is `null` or `undefined`, `FORMAT` is used.\n\nThrows if `decimalPlaces`, `roundingMode`, or `format` is invalid.\n\n```ts\nfmt = {\n  decimalSeparator: '.',\n  groupSeparator: ',',\n  groupSize: 3,\n  secondaryGroupSize: 0,\n  fractionGroupSeparator: ' ',\n  fractionGroupSize: 0\n}\n\nx = new BigNumber('123456789.123456789')\n\n// Set the global formatting options\nBigNumber.config({ FORMAT: fmt })\n\nx.toFormat()                              // '123,456,789.123456789'\nx.toFormat(3)                             // '123,456,789.123'\n\n// If a reference to the object assigned to FORMAT has been retained,\n// the format properties can be changed directly\nfmt.groupSeparator = ' '\nfmt.fractionGroupSize = 5\nx.toFormat()                              // '123 456 789.12345 6789'\n\n// Alternatively, pass the formatting options as an argument\nfmt = {\n  decimalSeparator: ',',\n  groupSeparator: '.',\n  groupSize: 3,\n  secondaryGroupSize: 2\n}\n\nx.toFormat()                              // '123 456 789.12345 6789'\nx.toFormat(fmt)                           // '12.34.56.789,123456789'\nx.toFormat(2, fmt)                        // '12.34.56.789,12'\nx.toFormat(3, BigNumber.ROUND_UP, fmt)    // '12.34.56.789,124'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.\n@param format Formatting options object. See `BigNumber.Format`.",name:"toFormat",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode: RoundingMode, format?: Format | undefined): string; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (decimalPlaces?: number | undefined): string; (decimalPlaces: number, format: Format): string; (format: Format): string; }"}},toFraction:{defaultValue:null,description:"Returns an array of two BigNumbers representing the value of this BigNumber as a simple\nfraction with an integer numerator and an integer denominator.\nThe denominator will be a positive non-zero value less than or equal to `max_denominator`.\nIf a maximum denominator, `max_denominator`, is not specified, or is `null` or `undefined`, the\ndenominator will be the lowest value necessary to represent the number exactly.\n\nThrows if `max_denominator` is invalid.\n\n```ts\nx = new BigNumber(1.75)\nx.toFraction()                  // '7, 4'\n\npi = new BigNumber('3.14159265358')\npi.toFraction()                 // '157079632679,50000000000'\npi.toFraction(100000)           // '312689, 99532'\npi.toFraction(10000)            // '355, 113'\npi.toFraction(100)              // '311, 99'\npi.toFraction(10)               // '22, 7'\npi.toFraction(1)                // '3, 1'\n```\n@param max_denominator The maximum denominator, integer > 0, or Infinity.",name:"toFraction",required:!0,type:{name:"(max_denominator?: Value | undefined) => [BigNumber, BigNumber]"}},toJSON:{defaultValue:null,description:"As `valueOf`.",name:"toJSON",required:!0,type:{name:"() => string"}},toNumber:{defaultValue:null,description:"Returns the value of this BigNumber as a JavaScript primitive number.\n\nUsing the unary plus operator gives the same result.\n\n```ts\nx = new BigNumber(456.789)\nx.toNumber()                    // 456.789\n+x                              // 456.789\n\ny = new BigNumber('45987349857634085409857349856430985')\ny.toNumber()                    // 4.598734985763409e+34\n\nz = new BigNumber(-0)\n1 / z.toNumber()                // -Infinity\n1 / +z                          // -Infinity\n```",name:"toNumber",required:!0,type:{name:"() => number"}},toPrecision:{defaultValue:null,description:"Returns a string representing the value of this BigNumber rounded to `significantDigits`\nsignificant digits using rounding mode `roundingMode`.\n\nIf `significantDigits` is less than the number of digits necessary to represent the integer\npart of the value in normal (fixed-point) notation, then exponential notation is used.\n\nIf `significantDigits` is omitted, or is `null` or `undefined`, then the return value is the\nsame as `n.toString()`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = 45.6\ny = new BigNumber(x)\nx.toPrecision()                 // '45.6'\ny.toPrecision()                 // '45.6'\nx.toPrecision(1)                // '5e+1'\ny.toPrecision(1)                // '5e+1'\ny.toPrecision(2, 0)             // '4.6e+1'  (ROUND_UP)\ny.toPrecision(2, 1)             // '4.5e+1'  (ROUND_DOWN)\nx.toPrecision(5)                // '45.600'\ny.toPrecision(5)                // '45.600'\n```\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer 0 to 8.",name:"toPrecision",required:!0,type:{name:"{ (significantDigits: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/hooks/math/useFromPrecision.tsx#fromPrecision12"]={docgenInfo:fromPrecision12.__docgenInfo,name:"fromPrecision12",path:"src/hooks/math/useFromPrecision.tsx#fromPrecision12"})}catch(__react_docgen_typescript_loader_error){}try{useFromPrecision12.displayName="useFromPrecision12",useFromPrecision12.__docgenInfo={description:"",displayName:"useFromPrecision12",props:{c:{defaultValue:null,description:"The coefficient of the value of this BigNumber, an array of base 1e14 integer numbers, or null.",name:"c",required:!0,type:{name:"number[] | null"}},e:{defaultValue:null,description:"The exponent of the value of this BigNumber, an integer number, -1000000000 to 1000000000, or null.",name:"e",required:!0,type:{name:"number | null"}},s:{defaultValue:null,description:"The sign of the value of this BigNumber, -1, 1, or null.",name:"s",required:!0,type:{name:"number | null"}},absoluteValue:{defaultValue:null,description:"Returns a BigNumber whose value is the absolute value, i.e. the magnitude, of the value of this\nBigNumber.\n\nThe return value is always exact and unrounded.\n\n```ts\nx = new BigNumber(-0.8)\nx.absoluteValue()           // '0.8'\n```",name:"absoluteValue",required:!0,type:{name:"() => BigNumber"}},abs:{defaultValue:null,description:"Returns a BigNumber whose value is the absolute value, i.e. the magnitude, of the value of this\nBigNumber.\n\nThe return value is always exact and unrounded.\n\n```ts\nx = new BigNumber(-0.8)\nx.abs()                     // '0.8'\n```",name:"abs",required:!0,type:{name:"() => BigNumber"}},comparedTo:{defaultValue:null,description:"Returns |                                                               |\n:-------:|:--------------------------------------------------------------|\n   1    | If the value of this BigNumber is greater than the value of `n`\n  -1    | If the value of this BigNumber is less than the value of `n`\n   0    | If this BigNumber and `n` have the same value\n`null`  | If the value of either this BigNumber or `n` is `NaN`\n\n```ts\n\nx = new BigNumber(Infinity)\ny = new BigNumber(5)\nx.comparedTo(y)                 // 1\nx.comparedTo(x.minus(1))        // 0\ny.comparedTo(NaN)               // null\ny.comparedTo('110', 2)          // -1\n```\n@param n A numeric value.\n@param base The base of n.",name:"comparedTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => number"}},decimalPlaces:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded by rounding mode\n`roundingMode` to a maximum of `decimalPlaces` decimal places.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the return value is the number of\ndecimal places of the value of this BigNumber, or `null` if the value of this BigNumber is\n±`Infinity` or `NaN`.\n\nIf `roundingMode` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(1234.56)\nx.decimalPlaces()                      // 2\nx.decimalPlaces(1)                     // '1234.6'\nx.decimalPlaces(2)                     // '1234.56'\nx.decimalPlaces(10)                    // '1234.56'\nx.decimalPlaces(0, 1)                  // '1234'\nx.decimalPlaces(0, 6)                  // '1235'\nx.decimalPlaces(1, 1)                  // '1234.5'\nx.decimalPlaces(1, BigNumber.ROUND_HALF_EVEN)     // '1234.6'\nx                                      // '1234.56'\ny = new BigNumber('9.9e-101')\ny.decimalPlaces()                      // 102\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"decimalPlaces",required:!0,type:{name:"{ (): number; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},dp:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded by rounding mode\n`roundingMode` to a maximum of `decimalPlaces` decimal places.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the return value is the number of\ndecimal places of the value of this BigNumber, or `null` if the value of this BigNumber is\n±`Infinity` or `NaN`.\n\nIf `roundingMode` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(1234.56)\nx.dp()                                 // 2\nx.dp(1)                                // '1234.6'\nx.dp(2)                                // '1234.56'\nx.dp(10)                               // '1234.56'\nx.dp(0, 1)                             // '1234'\nx.dp(0, 6)                             // '1235'\nx.dp(1, 1)                             // '1234.5'\nx.dp(1, BigNumber.ROUND_HALF_EVEN)     // '1234.6'\nx                                      // '1234.56'\ny = new BigNumber('9.9e-101')\ny.dp()                                 // 102\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"dp",required:!0,type:{name:"{ (): number; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},dividedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber divided by `n`, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\n```ts\nx = new BigNumber(355)\ny = new BigNumber(113)\nx.dividedBy(y)                  // '3.14159292035398230088'\nx.dividedBy(5)                  // '71'\nx.dividedBy(47, 16)             // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"dividedBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},div:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber divided by `n`, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\n```ts\nx = new BigNumber(355)\ny = new BigNumber(113)\nx.div(y)                    // '3.14159292035398230088'\nx.div(5)                    // '71'\nx.div(47, 16)               // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"div",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},dividedToIntegerBy:{defaultValue:null,description:"Returns a BigNumber whose value is the integer part of dividing the value of this BigNumber by\n`n`.\n\n```ts\nx = new BigNumber(5)\ny = new BigNumber(3)\nx.dividedToIntegerBy(y)              // '1'\nx.dividedToIntegerBy(0.7)            // '7'\nx.dividedToIntegerBy('0.f', 16)      // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"dividedToIntegerBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},idiv:{defaultValue:null,description:"Returns a BigNumber whose value is the integer part of dividing the value of this BigNumber by\n`n`.\n\n```ts\nx = new BigNumber(5)\ny = new BigNumber(3)\nx.idiv(y)                       // '1'\nx.idiv(0.7)                     // '7'\nx.idiv('0.f', 16)               // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"idiv",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},exponentiatedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber exponentiated by `n`, i.e.\nraised to the power `n`, and optionally modulo a modulus `m`.\n\nIf `n` is negative the result is rounded according to the current `DECIMAL_PLACES` and\n`ROUNDING_MODE` settings.\n\nAs the number of digits of the result of the power operation can grow so large so quickly,\ne.g. 123.456**10000 has over 50000 digits, the number of significant digits calculated is\nlimited to the value of the `POW_PRECISION` setting (unless a modulus `m` is specified).\n\nBy default `POW_PRECISION` is set to 0. This means that an unlimited number of significant\ndigits will be calculated, and that the method's performance will decrease dramatically for\nlarger exponents.\n\nIf `m` is specified and the value of `m`, `n` and this BigNumber are integers and `n` is\npositive, then a fast modular exponentiation algorithm is used, otherwise the operation will\nbe performed as `x.exponentiatedBy(n).modulo(m)` with a `POW_PRECISION` of 0.\n\nThrows if `n` is not an integer.\n\n```ts\nMath.pow(0.7, 2)                    // 0.48999999999999994\nx = new BigNumber(0.7)\nx.exponentiatedBy(2)                // '0.49'\nBigNumber(3).exponentiatedBy(-2)    // '0.11111111111111111111'\n```\n@param n The exponent, an integer.\n@param m The modulus.",name:"exponentiatedBy",required:!0,type:{name:"{ (n: Value, m?: Value | undefined): BigNumber; (n: number, m?: Value | undefined): BigNumber; }"}},pow:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber exponentiated by `n`, i.e.\nraised to the power `n`, and optionally modulo a modulus `m`.\n\nIf `n` is negative the result is rounded according to the current `DECIMAL_PLACES` and\n`ROUNDING_MODE` settings.\n\nAs the number of digits of the result of the power operation can grow so large so quickly,\ne.g. 123.456**10000 has over 50000 digits, the number of significant digits calculated is\nlimited to the value of the `POW_PRECISION` setting (unless a modulus `m` is specified).\n\nBy default `POW_PRECISION` is set to 0. This means that an unlimited number of significant\ndigits will be calculated, and that the method's performance will decrease dramatically for\nlarger exponents.\n\nIf `m` is specified and the value of `m`, `n` and this BigNumber are integers and `n` is\npositive, then a fast modular exponentiation algorithm is used, otherwise the operation will\nbe performed as `x.pow(n).modulo(m)` with a `POW_PRECISION` of 0.\n\nThrows if `n` is not an integer.\n\n```ts\nMath.pow(0.7, 2)                   // 0.48999999999999994\nx = new BigNumber(0.7)\nx.pow(2)                           // '0.49'\nBigNumber(3).pow(-2)               // '0.11111111111111111111'\n```\n@param n The exponent, an integer.\n@param m The modulus.",name:"pow",required:!0,type:{name:"{ (n: Value, m?: Value | undefined): BigNumber; (n: number, m?: Value | undefined): BigNumber; }"}},integerValue:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded to an integer using\nrounding mode `rm`.\n\nIf `rm` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `rm` is invalid.\n\n```ts\nx = new BigNumber(123.456)\nx.integerValue()                        // '123'\nx.integerValue(BigNumber.ROUND_CEIL)    // '124'\ny = new BigNumber(-12.7)\ny.integerValue()                        // '-13'\nx.integerValue(BigNumber.ROUND_DOWN)    // '-12'\n```\n@param rm The roundng mode, an integer, 0 to 8.",name:"integerValue",required:!0,type:{name:"(rm?: RoundingMode | undefined) => BigNumber"}},isEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is equal to the value of `n`, otherwise returns\n`false`.\n\nAs with JavaScript, `NaN` does not equal `NaN`.\n\n```ts\n0 === 1e-324                           // true\nx = new BigNumber(0)\nx.isEqualTo('1e-324')                  // false\nBigNumber(-0).isEqualTo(x)             // true  ( -0 === 0 )\nBigNumber(255).isEqualTo('ff', 16)     // true\n\ny = new BigNumber(NaN)\ny.isEqualTo(NaN)                // false\n```\n@param n A numeric value.\n@param base The base of n.",name:"isEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},eq:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is equal to the value of `n`, otherwise returns\n`false`.\n\nAs with JavaScript, `NaN` does not equal `NaN`.\n\n```ts\n0 === 1e-324                    // true\nx = new BigNumber(0)\nx.eq('1e-324')                  // false\nBigNumber(-0).eq(x)             // true  ( -0 === 0 )\nBigNumber(255).eq('ff', 16)     // true\n\ny = new BigNumber(NaN)\ny.eq(NaN)                       // false\n```\n@param n A numeric value.\n@param base The base of n.",name:"eq",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isFinite:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is a finite number, otherwise returns `false`.\n\nThe only possible non-finite values of a BigNumber are `NaN`, `Infinity` and `-Infinity`.\n\n```ts\nx = new BigNumber(1)\nx.isFinite()                    // true\ny = new BigNumber(Infinity)\ny.isFinite()                    // false\n```",name:"isFinite",required:!0,type:{name:"() => boolean"}},isGreaterThan:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than the value of `n`, otherwise\nreturns `false`.\n\n```ts\n0.1 > (0.3 - 0.2)                             // true\nx = new BigNumber(0.1)\nx.isGreaterThan(BigNumber(0.3).minus(0.2))    // false\nBigNumber(0).isGreaterThan(x)                 // false\nBigNumber(11, 3).isGreaterThan(11.1, 2)       // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isGreaterThan",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},gt:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than the value of `n`, otherwise\nreturns `false`.\n\n```ts\n0.1 > (0.3 - 0                     // true\nx = new BigNumber(0.1)\nx.gt(BigNumber(0.3).minus(0.2))    // false\nBigNumber(0).gt(x)                 // false\nBigNumber(11, 3).gt(11.1, 2)       // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"gt",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isGreaterThanOrEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n(0.3 - 0.2) >= 0.1                                  // false\nx = new BigNumber(0.3).minus(0.2)\nx.isGreaterThanOrEqualTo(0.1)                       // true\nBigNumber(1).isGreaterThanOrEqualTo(x)              // true\nBigNumber(10, 18).isGreaterThanOrEqualTo('i', 36)   // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isGreaterThanOrEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},gte:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n(0.3 - 0.2) >= 0.1                    // false\nx = new BigNumber(0.3).minus(0.2)\nx.gte(0.1)                            // true\nBigNumber(1).gte(x)                   // true\nBigNumber(10, 18).gte('i', 36)        // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"gte",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isInteger:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is an integer, otherwise returns `false`.\n\n```ts\nx = new BigNumber(1)\nx.isInteger()                   // true\ny = new BigNumber(123.456)\ny.isInteger()                   // false\n```",name:"isInteger",required:!0,type:{name:"() => boolean"}},isLessThan:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than the value of `n`, otherwise returns\n`false`.\n\n```ts\n(0.3 - 0.2) < 0.1                       // true\nx = new BigNumber(0.3).minus(0.2)\nx.isLessThan(0.1)                       // false\nBigNumber(0).isLessThan(x)              // true\nBigNumber(11.1, 2).isLessThan(11, 3)    // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isLessThan",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},lt:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than the value of `n`, otherwise returns\n`false`.\n\n```ts\n(0.3 - 0.2) < 0.1                       // true\nx = new BigNumber(0.3).minus(0.2)\nx.lt(0.1)                               // false\nBigNumber(0).lt(x)                      // true\nBigNumber(11.1, 2).lt(11, 3)            // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"lt",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isLessThanOrEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n0.1 <= (0.3 - 0.2)                                 // false\nx = new BigNumber(0.1)\nx.isLessThanOrEqualTo(BigNumber(0.3).minus(0.2))   // true\nBigNumber(-1).isLessThanOrEqualTo(x)               // true\nBigNumber(10, 18).isLessThanOrEqualTo('i', 36)     // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isLessThanOrEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},lte:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n0.1 <= (0.3 - 0.2)                  // false\nx = new BigNumber(0.1)\nx.lte(BigNumber(0.3).minus(0.2))    // true\nBigNumber(-1).lte(x)                // true\nBigNumber(10, 18).lte('i', 36)      // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"lte",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isNaN:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is `NaN`, otherwise returns `false`.\n\n```ts\nx = new BigNumber(NaN)\nx.isNaN()                       // true\ny = new BigNumber('Infinity')\ny.isNaN()                       // false\n```",name:"isNaN",required:!0,type:{name:"() => boolean"}},isNegative:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is negative, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isNegative()                  // true\ny = new BigNumber(2)\ny.isNegative()                  // false\n```",name:"isNegative",required:!0,type:{name:"() => boolean"}},isPositive:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is positive, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isPositive()                  // false\ny = new BigNumber(2)\ny.isPositive()                  // true\n```",name:"isPositive",required:!0,type:{name:"() => boolean"}},isZero:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is zero or minus zero, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isZero()                 // true\n```",name:"isZero",required:!0,type:{name:"() => boolean"}},minus:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber minus `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.3 - 0.1                       // 0.19999999999999998\nx = new BigNumber(0.3)\nx.minus(0.1)                    // '0.2'\nx.minus(0.6, 20)                // '0'\n```\n@param n A numeric value.\n@param base The base of n.",name:"minus",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},modulo:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber modulo `n`, i.e. the integer\nremainder of dividing this BigNumber by `n`.\n\nThe value returned, and in particular its sign, is dependent on the value of the `MODULO_MODE`\nsetting of this BigNumber constructor. If it is 1 (default value), the result will have the\nsame sign as this BigNumber, and it will match that of Javascript's `%` operator (within the\nlimits of double precision) and BigDecimal's `remainder` method.\n\nThe return value is always exact and unrounded.\n\nSee `MODULO_MODE` for a description of the other modulo modes.\n\n```ts\n1 % 0.9                         // 0.09999999999999998\nx = new BigNumber(1)\nx.modulo(0.9)                   // '0.1'\ny = new BigNumber(33)\ny.modulo('a', 33)               // '3'\n```\n@param n A numeric value.\n@param base The base of n.",name:"modulo",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},mod:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber modulo `n`, i.e. the integer\nremainder of dividing this BigNumber by `n`.\n\nThe value returned, and in particular its sign, is dependent on the value of the `MODULO_MODE`\nsetting of this BigNumber constructor. If it is 1 (default value), the result will have the\nsame sign as this BigNumber, and it will match that of Javascript's `%` operator (within the\nlimits of double precision) and BigDecimal's `remainder` method.\n\nThe return value is always exact and unrounded.\n\nSee `MODULO_MODE` for a description of the other modulo modes.\n\n```ts\n1 % 0.9                      // 0.09999999999999998\nx = new BigNumber(1)\nx.mod(0.9)                   // '0.1'\ny = new BigNumber(33)\ny.mod('a', 33)               // '3'\n```\n@param n A numeric value.\n@param base The base of n.",name:"mod",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},multipliedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber multiplied by `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.6 * 3                                // 1.7999999999999998\nx = new BigNumber(0.6)\ny = x.multipliedBy(3)                  // '1.8'\nBigNumber('7e+500').multipliedBy(y)    // '1.26e+501'\nx.multipliedBy('-a', 16)               // '-6'\n```\n@param n A numeric value.\n@param base The base of n.",name:"multipliedBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},times:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber multiplied by `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.6 * 3                         // 1.7999999999999998\nx = new BigNumber(0.6)\ny = x.times(3)                  // '1.8'\nBigNumber('7e+500').times(y)    // '1.26e+501'\nx.times('-a', 16)               // '-6'\n```\n@param n A numeric value.\n@param base The base of n.",name:"times",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},negated:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber negated, i.e. multiplied by -1.\n\n```ts\nx = new BigNumber(1.8)\nx.negated()                     // '-1.8'\ny = new BigNumber(-1.3)\ny.negated()                     // '1.3'\n```",name:"negated",required:!0,type:{name:"() => BigNumber"}},plus:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber plus `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.1 + 0.2                       // 0.30000000000000004\nx = new BigNumber(0.1)\ny = x.plus(0.2)                 // '0.3'\nBigNumber(0.7).plus(x).plus(y)  // '1.1'\nx.plus('0.1', 8)                // '0.225'\n```\n@param n A numeric value.\n@param base The base of n.",name:"plus",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},precision:{defaultValue:null,description:"Returns the number of significant digits of the value of this BigNumber, or `null` if the value\nof this BigNumber is ±`Infinity` or `NaN`.\n\nIf `includeZeros` is true then any trailing zeros of the integer part of the value of this\nBigNumber are counted as significant digits, otherwise they are not.\n\nThrows if `includeZeros` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.precision()                         // 9\ny = new BigNumber(987000)\ny.precision(false)                    // 3\ny.precision(true)                     // 6\n```\nReturns a BigNumber whose value is the value of this BigNumber rounded to a precision of\n`significantDigits` significant digits using rounding mode `roundingMode`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` will be used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.precision(6)                         // '9876.54'\nx.precision(6, BigNumber.ROUND_UP)     // '9876.55'\nx.precision(2)                         // '9900'\nx.precision(2, 1)                      // '9800'\nx                                      // '9876.54321'\n```\n@param includeZeros Whether to include integer trailing zeros in the significant digit count.\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"precision",required:!0,type:{name:"{ (includeZeros?: boolean | undefined): number; (significantDigits: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},sd:{defaultValue:null,description:"Returns the number of significant digits of the value of this BigNumber,\nor `null` if the value of this BigNumber is ±`Infinity` or `NaN`.\n\nIf `includeZeros` is true then any trailing zeros of the integer part of\nthe value of this BigNumber are counted as significant digits, otherwise\nthey are not.\n\nThrows if `includeZeros` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.sd()                         // 9\ny = new BigNumber(987000)\ny.sd(false)                    // 3\ny.sd(true)                     // 6\n```\nReturns a BigNumber whose value is the value of this BigNumber rounded to a precision of\n`significantDigits` significant digits using rounding mode `roundingMode`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` will be used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.sd(6)                           // '9876.54'\nx.sd(6, BigNumber.ROUND_UP)       // '9876.55'\nx.sd(2)                           // '9900'\nx.sd(2, 1)                        // '9800'\nx                                 // '9876.54321'\n```\n@param includeZeros Whether to include integer trailing zeros in the significant digit count.\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"sd",required:!0,type:{name:"{ (includeZeros?: boolean | undefined): number; (significantDigits: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},shiftedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber shifted by `n` places.\n\nThe shift is of the decimal point, i.e. of powers of ten, and is to the left if `n` is negative\nor to the right if `n` is positive.\n\nThe return value is always exact and unrounded.\n\nThrows if `n` is invalid.\n\n```ts\nx = new BigNumber(1.23)\nx.shiftedBy(3)                      // '1230'\nx.shiftedBy(-3)                     // '0.00123'\n```\n@param n The shift value, integer, -9007199254740991 to 9007199254740991.",name:"shiftedBy",required:!0,type:{name:"(n: number) => BigNumber"}},squareRoot:{defaultValue:null,description:"Returns a BigNumber whose value is the square root of the value of this BigNumber, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\nThe return value will be correctly rounded, i.e. rounded as if the result was first calculated\nto an infinite number of correct digits before rounding.\n\n```ts\nx = new BigNumber(16)\nx.squareRoot()                  // '4'\ny = new BigNumber(3)\ny.squareRoot()                  // '1.73205080756887729353'\n```",name:"squareRoot",required:!0,type:{name:"() => BigNumber"}},sqrt:{defaultValue:null,description:"Returns a BigNumber whose value is the square root of the value of this BigNumber, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\nThe return value will be correctly rounded, i.e. rounded as if the result was first calculated\nto an infinite number of correct digits before rounding.\n\n```ts\nx = new BigNumber(16)\nx.sqrt()                  // '4'\ny = new BigNumber(3)\ny.sqrt()                  // '1.73205080756887729353'\n```",name:"sqrt",required:!0,type:{name:"() => BigNumber"}},toExponential:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in exponential notation rounded using\nrounding mode `roundingMode` to `decimalPlaces` decimal places, i.e with one digit before the\ndecimal point and `decimalPlaces` digits after it.\n\nIf the value of this BigNumber in exponential notation has fewer than `decimalPlaces` fraction\ndigits, the return value will be appended with zeros accordingly.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the number of digits after the\ndecimal point defaults to the minimum number of digits necessary to represent the value\nexactly.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = 45.6\ny = new BigNumber(x)\nx.toExponential()               // '4.56e+1'\ny.toExponential()               // '4.56e+1'\nx.toExponential(0)              // '5e+1'\ny.toExponential(0)              // '5e+1'\nx.toExponential(1)              // '4.6e+1'\ny.toExponential(1)              // '4.6e+1'\ny.toExponential(1, 1)           // '4.5e+1'  (ROUND_DOWN)\nx.toExponential(3)              // '4.560e+1'\ny.toExponential(3)              // '4.560e+1'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"toExponential",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}},toFixed:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in normal (fixed-point) notation\nrounded to `decimalPlaces` decimal places using rounding mode `roundingMode`.\n\nIf the value of this BigNumber in normal notation has fewer than `decimalPlaces` fraction\ndigits, the return value will be appended with zeros accordingly.\n\nUnlike `Number.prototype.toFixed`, which returns exponential notation if a number is greater or\nequal to 10**21, this method will always return normal notation.\n\nIf `decimalPlaces` is omitted or is `null` or `undefined`, the return value will be unrounded\nand in normal notation. This is also unlike `Number.prototype.toFixed`, which returns the value\nto zero decimal places. It is useful when normal notation is required and the current\n`EXPONENTIAL_AT` setting causes `toString` to return exponential notation.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = 3.456\ny = new BigNumber(x)\nx.toFixed()                     // '3'\ny.toFixed()                     // '3.456'\ny.toFixed(0)                    // '3'\nx.toFixed(2)                    // '3.46'\ny.toFixed(2)                    // '3.46'\ny.toFixed(2, 1)                 // '3.45'  (ROUND_DOWN)\nx.toFixed(5)                    // '3.45600'\ny.toFixed(5)                    // '3.45600'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"toFixed",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}},toFormat:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in normal (fixed-point) notation\nrounded to `decimalPlaces` decimal places using rounding mode `roundingMode`, and formatted\naccording to the properties of the `format` or `FORMAT` object.\n\nThe formatting object may contain some or all of the properties shown in the examples below.\n\nIf `decimalPlaces` is omitted or is `null` or `undefined`, then the return value is not\nrounded to a fixed number of decimal places.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nIf `format` is omitted or is `null` or `undefined`, `FORMAT` is used.\n\nThrows if `decimalPlaces`, `roundingMode`, or `format` is invalid.\n\n```ts\nfmt = {\n  decimalSeparator: '.',\n  groupSeparator: ',',\n  groupSize: 3,\n  secondaryGroupSize: 0,\n  fractionGroupSeparator: ' ',\n  fractionGroupSize: 0\n}\n\nx = new BigNumber('123456789.123456789')\n\n// Set the global formatting options\nBigNumber.config({ FORMAT: fmt })\n\nx.toFormat()                              // '123,456,789.123456789'\nx.toFormat(3)                             // '123,456,789.123'\n\n// If a reference to the object assigned to FORMAT has been retained,\n// the format properties can be changed directly\nfmt.groupSeparator = ' '\nfmt.fractionGroupSize = 5\nx.toFormat()                              // '123 456 789.12345 6789'\n\n// Alternatively, pass the formatting options as an argument\nfmt = {\n  decimalSeparator: ',',\n  groupSeparator: '.',\n  groupSize: 3,\n  secondaryGroupSize: 2\n}\n\nx.toFormat()                              // '123 456 789.12345 6789'\nx.toFormat(fmt)                           // '12.34.56.789,123456789'\nx.toFormat(2, fmt)                        // '12.34.56.789,12'\nx.toFormat(3, BigNumber.ROUND_UP, fmt)    // '12.34.56.789,124'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.\n@param format Formatting options object. See `BigNumber.Format`.",name:"toFormat",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode: RoundingMode, format?: Format | undefined): string; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (decimalPlaces?: number | undefined): string; (decimalPlaces: number, format: Format): string; (format: Format): string; }"}},toFraction:{defaultValue:null,description:"Returns an array of two BigNumbers representing the value of this BigNumber as a simple\nfraction with an integer numerator and an integer denominator.\nThe denominator will be a positive non-zero value less than or equal to `max_denominator`.\nIf a maximum denominator, `max_denominator`, is not specified, or is `null` or `undefined`, the\ndenominator will be the lowest value necessary to represent the number exactly.\n\nThrows if `max_denominator` is invalid.\n\n```ts\nx = new BigNumber(1.75)\nx.toFraction()                  // '7, 4'\n\npi = new BigNumber('3.14159265358')\npi.toFraction()                 // '157079632679,50000000000'\npi.toFraction(100000)           // '312689, 99532'\npi.toFraction(10000)            // '355, 113'\npi.toFraction(100)              // '311, 99'\npi.toFraction(10)               // '22, 7'\npi.toFraction(1)                // '3, 1'\n```\n@param max_denominator The maximum denominator, integer > 0, or Infinity.",name:"toFraction",required:!0,type:{name:"(max_denominator?: Value | undefined) => [BigNumber, BigNumber]"}},toJSON:{defaultValue:null,description:"As `valueOf`.",name:"toJSON",required:!0,type:{name:"() => string"}},toNumber:{defaultValue:null,description:"Returns the value of this BigNumber as a JavaScript primitive number.\n\nUsing the unary plus operator gives the same result.\n\n```ts\nx = new BigNumber(456.789)\nx.toNumber()                    // 456.789\n+x                              // 456.789\n\ny = new BigNumber('45987349857634085409857349856430985')\ny.toNumber()                    // 4.598734985763409e+34\n\nz = new BigNumber(-0)\n1 / z.toNumber()                // -Infinity\n1 / +z                          // -Infinity\n```",name:"toNumber",required:!0,type:{name:"() => number"}},toPrecision:{defaultValue:null,description:"Returns a string representing the value of this BigNumber rounded to `significantDigits`\nsignificant digits using rounding mode `roundingMode`.\n\nIf `significantDigits` is less than the number of digits necessary to represent the integer\npart of the value in normal (fixed-point) notation, then exponential notation is used.\n\nIf `significantDigits` is omitted, or is `null` or `undefined`, then the return value is the\nsame as `n.toString()`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = 45.6\ny = new BigNumber(x)\nx.toPrecision()                 // '45.6'\ny.toPrecision()                 // '45.6'\nx.toPrecision(1)                // '5e+1'\ny.toPrecision(1)                // '5e+1'\ny.toPrecision(2, 0)             // '4.6e+1'  (ROUND_UP)\ny.toPrecision(2, 1)             // '4.5e+1'  (ROUND_DOWN)\nx.toPrecision(5)                // '45.600'\ny.toPrecision(5)                // '45.600'\n```\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer 0 to 8.",name:"toPrecision",required:!0,type:{name:"{ (significantDigits: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/hooks/math/useFromPrecision.tsx#useFromPrecision12"]={docgenInfo:useFromPrecision12.__docgenInfo,name:"useFromPrecision12",path:"src/hooks/math/useFromPrecision.tsx#useFromPrecision12"})}catch(__react_docgen_typescript_loader_error){}try{useFromPrecision18.displayName="useFromPrecision18",useFromPrecision18.__docgenInfo={description:"",displayName:"useFromPrecision18",props:{c:{defaultValue:null,description:"The coefficient of the value of this BigNumber, an array of base 1e14 integer numbers, or null.",name:"c",required:!0,type:{name:"number[] | null"}},e:{defaultValue:null,description:"The exponent of the value of this BigNumber, an integer number, -1000000000 to 1000000000, or null.",name:"e",required:!0,type:{name:"number | null"}},s:{defaultValue:null,description:"The sign of the value of this BigNumber, -1, 1, or null.",name:"s",required:!0,type:{name:"number | null"}},absoluteValue:{defaultValue:null,description:"Returns a BigNumber whose value is the absolute value, i.e. the magnitude, of the value of this\nBigNumber.\n\nThe return value is always exact and unrounded.\n\n```ts\nx = new BigNumber(-0.8)\nx.absoluteValue()           // '0.8'\n```",name:"absoluteValue",required:!0,type:{name:"() => BigNumber"}},abs:{defaultValue:null,description:"Returns a BigNumber whose value is the absolute value, i.e. the magnitude, of the value of this\nBigNumber.\n\nThe return value is always exact and unrounded.\n\n```ts\nx = new BigNumber(-0.8)\nx.abs()                     // '0.8'\n```",name:"abs",required:!0,type:{name:"() => BigNumber"}},comparedTo:{defaultValue:null,description:"Returns |                                                               |\n:-------:|:--------------------------------------------------------------|\n   1    | If the value of this BigNumber is greater than the value of `n`\n  -1    | If the value of this BigNumber is less than the value of `n`\n   0    | If this BigNumber and `n` have the same value\n`null`  | If the value of either this BigNumber or `n` is `NaN`\n\n```ts\n\nx = new BigNumber(Infinity)\ny = new BigNumber(5)\nx.comparedTo(y)                 // 1\nx.comparedTo(x.minus(1))        // 0\ny.comparedTo(NaN)               // null\ny.comparedTo('110', 2)          // -1\n```\n@param n A numeric value.\n@param base The base of n.",name:"comparedTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => number"}},decimalPlaces:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded by rounding mode\n`roundingMode` to a maximum of `decimalPlaces` decimal places.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the return value is the number of\ndecimal places of the value of this BigNumber, or `null` if the value of this BigNumber is\n±`Infinity` or `NaN`.\n\nIf `roundingMode` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(1234.56)\nx.decimalPlaces()                      // 2\nx.decimalPlaces(1)                     // '1234.6'\nx.decimalPlaces(2)                     // '1234.56'\nx.decimalPlaces(10)                    // '1234.56'\nx.decimalPlaces(0, 1)                  // '1234'\nx.decimalPlaces(0, 6)                  // '1235'\nx.decimalPlaces(1, 1)                  // '1234.5'\nx.decimalPlaces(1, BigNumber.ROUND_HALF_EVEN)     // '1234.6'\nx                                      // '1234.56'\ny = new BigNumber('9.9e-101')\ny.decimalPlaces()                      // 102\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"decimalPlaces",required:!0,type:{name:"{ (): number; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},dp:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded by rounding mode\n`roundingMode` to a maximum of `decimalPlaces` decimal places.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the return value is the number of\ndecimal places of the value of this BigNumber, or `null` if the value of this BigNumber is\n±`Infinity` or `NaN`.\n\nIf `roundingMode` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(1234.56)\nx.dp()                                 // 2\nx.dp(1)                                // '1234.6'\nx.dp(2)                                // '1234.56'\nx.dp(10)                               // '1234.56'\nx.dp(0, 1)                             // '1234'\nx.dp(0, 6)                             // '1235'\nx.dp(1, 1)                             // '1234.5'\nx.dp(1, BigNumber.ROUND_HALF_EVEN)     // '1234.6'\nx                                      // '1234.56'\ny = new BigNumber('9.9e-101')\ny.dp()                                 // 102\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"dp",required:!0,type:{name:"{ (): number; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},dividedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber divided by `n`, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\n```ts\nx = new BigNumber(355)\ny = new BigNumber(113)\nx.dividedBy(y)                  // '3.14159292035398230088'\nx.dividedBy(5)                  // '71'\nx.dividedBy(47, 16)             // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"dividedBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},div:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber divided by `n`, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\n```ts\nx = new BigNumber(355)\ny = new BigNumber(113)\nx.div(y)                    // '3.14159292035398230088'\nx.div(5)                    // '71'\nx.div(47, 16)               // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"div",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},dividedToIntegerBy:{defaultValue:null,description:"Returns a BigNumber whose value is the integer part of dividing the value of this BigNumber by\n`n`.\n\n```ts\nx = new BigNumber(5)\ny = new BigNumber(3)\nx.dividedToIntegerBy(y)              // '1'\nx.dividedToIntegerBy(0.7)            // '7'\nx.dividedToIntegerBy('0.f', 16)      // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"dividedToIntegerBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},idiv:{defaultValue:null,description:"Returns a BigNumber whose value is the integer part of dividing the value of this BigNumber by\n`n`.\n\n```ts\nx = new BigNumber(5)\ny = new BigNumber(3)\nx.idiv(y)                       // '1'\nx.idiv(0.7)                     // '7'\nx.idiv('0.f', 16)               // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"idiv",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},exponentiatedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber exponentiated by `n`, i.e.\nraised to the power `n`, and optionally modulo a modulus `m`.\n\nIf `n` is negative the result is rounded according to the current `DECIMAL_PLACES` and\n`ROUNDING_MODE` settings.\n\nAs the number of digits of the result of the power operation can grow so large so quickly,\ne.g. 123.456**10000 has over 50000 digits, the number of significant digits calculated is\nlimited to the value of the `POW_PRECISION` setting (unless a modulus `m` is specified).\n\nBy default `POW_PRECISION` is set to 0. This means that an unlimited number of significant\ndigits will be calculated, and that the method's performance will decrease dramatically for\nlarger exponents.\n\nIf `m` is specified and the value of `m`, `n` and this BigNumber are integers and `n` is\npositive, then a fast modular exponentiation algorithm is used, otherwise the operation will\nbe performed as `x.exponentiatedBy(n).modulo(m)` with a `POW_PRECISION` of 0.\n\nThrows if `n` is not an integer.\n\n```ts\nMath.pow(0.7, 2)                    // 0.48999999999999994\nx = new BigNumber(0.7)\nx.exponentiatedBy(2)                // '0.49'\nBigNumber(3).exponentiatedBy(-2)    // '0.11111111111111111111'\n```\n@param n The exponent, an integer.\n@param m The modulus.",name:"exponentiatedBy",required:!0,type:{name:"{ (n: Value, m?: Value | undefined): BigNumber; (n: number, m?: Value | undefined): BigNumber; }"}},pow:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber exponentiated by `n`, i.e.\nraised to the power `n`, and optionally modulo a modulus `m`.\n\nIf `n` is negative the result is rounded according to the current `DECIMAL_PLACES` and\n`ROUNDING_MODE` settings.\n\nAs the number of digits of the result of the power operation can grow so large so quickly,\ne.g. 123.456**10000 has over 50000 digits, the number of significant digits calculated is\nlimited to the value of the `POW_PRECISION` setting (unless a modulus `m` is specified).\n\nBy default `POW_PRECISION` is set to 0. This means that an unlimited number of significant\ndigits will be calculated, and that the method's performance will decrease dramatically for\nlarger exponents.\n\nIf `m` is specified and the value of `m`, `n` and this BigNumber are integers and `n` is\npositive, then a fast modular exponentiation algorithm is used, otherwise the operation will\nbe performed as `x.pow(n).modulo(m)` with a `POW_PRECISION` of 0.\n\nThrows if `n` is not an integer.\n\n```ts\nMath.pow(0.7, 2)                   // 0.48999999999999994\nx = new BigNumber(0.7)\nx.pow(2)                           // '0.49'\nBigNumber(3).pow(-2)               // '0.11111111111111111111'\n```\n@param n The exponent, an integer.\n@param m The modulus.",name:"pow",required:!0,type:{name:"{ (n: Value, m?: Value | undefined): BigNumber; (n: number, m?: Value | undefined): BigNumber; }"}},integerValue:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded to an integer using\nrounding mode `rm`.\n\nIf `rm` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `rm` is invalid.\n\n```ts\nx = new BigNumber(123.456)\nx.integerValue()                        // '123'\nx.integerValue(BigNumber.ROUND_CEIL)    // '124'\ny = new BigNumber(-12.7)\ny.integerValue()                        // '-13'\nx.integerValue(BigNumber.ROUND_DOWN)    // '-12'\n```\n@param rm The roundng mode, an integer, 0 to 8.",name:"integerValue",required:!0,type:{name:"(rm?: RoundingMode | undefined) => BigNumber"}},isEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is equal to the value of `n`, otherwise returns\n`false`.\n\nAs with JavaScript, `NaN` does not equal `NaN`.\n\n```ts\n0 === 1e-324                           // true\nx = new BigNumber(0)\nx.isEqualTo('1e-324')                  // false\nBigNumber(-0).isEqualTo(x)             // true  ( -0 === 0 )\nBigNumber(255).isEqualTo('ff', 16)     // true\n\ny = new BigNumber(NaN)\ny.isEqualTo(NaN)                // false\n```\n@param n A numeric value.\n@param base The base of n.",name:"isEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},eq:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is equal to the value of `n`, otherwise returns\n`false`.\n\nAs with JavaScript, `NaN` does not equal `NaN`.\n\n```ts\n0 === 1e-324                    // true\nx = new BigNumber(0)\nx.eq('1e-324')                  // false\nBigNumber(-0).eq(x)             // true  ( -0 === 0 )\nBigNumber(255).eq('ff', 16)     // true\n\ny = new BigNumber(NaN)\ny.eq(NaN)                       // false\n```\n@param n A numeric value.\n@param base The base of n.",name:"eq",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isFinite:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is a finite number, otherwise returns `false`.\n\nThe only possible non-finite values of a BigNumber are `NaN`, `Infinity` and `-Infinity`.\n\n```ts\nx = new BigNumber(1)\nx.isFinite()                    // true\ny = new BigNumber(Infinity)\ny.isFinite()                    // false\n```",name:"isFinite",required:!0,type:{name:"() => boolean"}},isGreaterThan:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than the value of `n`, otherwise\nreturns `false`.\n\n```ts\n0.1 > (0.3 - 0.2)                             // true\nx = new BigNumber(0.1)\nx.isGreaterThan(BigNumber(0.3).minus(0.2))    // false\nBigNumber(0).isGreaterThan(x)                 // false\nBigNumber(11, 3).isGreaterThan(11.1, 2)       // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isGreaterThan",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},gt:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than the value of `n`, otherwise\nreturns `false`.\n\n```ts\n0.1 > (0.3 - 0                     // true\nx = new BigNumber(0.1)\nx.gt(BigNumber(0.3).minus(0.2))    // false\nBigNumber(0).gt(x)                 // false\nBigNumber(11, 3).gt(11.1, 2)       // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"gt",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isGreaterThanOrEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n(0.3 - 0.2) >= 0.1                                  // false\nx = new BigNumber(0.3).minus(0.2)\nx.isGreaterThanOrEqualTo(0.1)                       // true\nBigNumber(1).isGreaterThanOrEqualTo(x)              // true\nBigNumber(10, 18).isGreaterThanOrEqualTo('i', 36)   // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isGreaterThanOrEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},gte:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n(0.3 - 0.2) >= 0.1                    // false\nx = new BigNumber(0.3).minus(0.2)\nx.gte(0.1)                            // true\nBigNumber(1).gte(x)                   // true\nBigNumber(10, 18).gte('i', 36)        // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"gte",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isInteger:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is an integer, otherwise returns `false`.\n\n```ts\nx = new BigNumber(1)\nx.isInteger()                   // true\ny = new BigNumber(123.456)\ny.isInteger()                   // false\n```",name:"isInteger",required:!0,type:{name:"() => boolean"}},isLessThan:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than the value of `n`, otherwise returns\n`false`.\n\n```ts\n(0.3 - 0.2) < 0.1                       // true\nx = new BigNumber(0.3).minus(0.2)\nx.isLessThan(0.1)                       // false\nBigNumber(0).isLessThan(x)              // true\nBigNumber(11.1, 2).isLessThan(11, 3)    // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isLessThan",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},lt:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than the value of `n`, otherwise returns\n`false`.\n\n```ts\n(0.3 - 0.2) < 0.1                       // true\nx = new BigNumber(0.3).minus(0.2)\nx.lt(0.1)                               // false\nBigNumber(0).lt(x)                      // true\nBigNumber(11.1, 2).lt(11, 3)            // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"lt",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isLessThanOrEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n0.1 <= (0.3 - 0.2)                                 // false\nx = new BigNumber(0.1)\nx.isLessThanOrEqualTo(BigNumber(0.3).minus(0.2))   // true\nBigNumber(-1).isLessThanOrEqualTo(x)               // true\nBigNumber(10, 18).isLessThanOrEqualTo('i', 36)     // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isLessThanOrEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},lte:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n0.1 <= (0.3 - 0.2)                  // false\nx = new BigNumber(0.1)\nx.lte(BigNumber(0.3).minus(0.2))    // true\nBigNumber(-1).lte(x)                // true\nBigNumber(10, 18).lte('i', 36)      // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"lte",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isNaN:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is `NaN`, otherwise returns `false`.\n\n```ts\nx = new BigNumber(NaN)\nx.isNaN()                       // true\ny = new BigNumber('Infinity')\ny.isNaN()                       // false\n```",name:"isNaN",required:!0,type:{name:"() => boolean"}},isNegative:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is negative, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isNegative()                  // true\ny = new BigNumber(2)\ny.isNegative()                  // false\n```",name:"isNegative",required:!0,type:{name:"() => boolean"}},isPositive:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is positive, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isPositive()                  // false\ny = new BigNumber(2)\ny.isPositive()                  // true\n```",name:"isPositive",required:!0,type:{name:"() => boolean"}},isZero:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is zero or minus zero, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isZero()                 // true\n```",name:"isZero",required:!0,type:{name:"() => boolean"}},minus:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber minus `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.3 - 0.1                       // 0.19999999999999998\nx = new BigNumber(0.3)\nx.minus(0.1)                    // '0.2'\nx.minus(0.6, 20)                // '0'\n```\n@param n A numeric value.\n@param base The base of n.",name:"minus",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},modulo:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber modulo `n`, i.e. the integer\nremainder of dividing this BigNumber by `n`.\n\nThe value returned, and in particular its sign, is dependent on the value of the `MODULO_MODE`\nsetting of this BigNumber constructor. If it is 1 (default value), the result will have the\nsame sign as this BigNumber, and it will match that of Javascript's `%` operator (within the\nlimits of double precision) and BigDecimal's `remainder` method.\n\nThe return value is always exact and unrounded.\n\nSee `MODULO_MODE` for a description of the other modulo modes.\n\n```ts\n1 % 0.9                         // 0.09999999999999998\nx = new BigNumber(1)\nx.modulo(0.9)                   // '0.1'\ny = new BigNumber(33)\ny.modulo('a', 33)               // '3'\n```\n@param n A numeric value.\n@param base The base of n.",name:"modulo",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},mod:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber modulo `n`, i.e. the integer\nremainder of dividing this BigNumber by `n`.\n\nThe value returned, and in particular its sign, is dependent on the value of the `MODULO_MODE`\nsetting of this BigNumber constructor. If it is 1 (default value), the result will have the\nsame sign as this BigNumber, and it will match that of Javascript's `%` operator (within the\nlimits of double precision) and BigDecimal's `remainder` method.\n\nThe return value is always exact and unrounded.\n\nSee `MODULO_MODE` for a description of the other modulo modes.\n\n```ts\n1 % 0.9                      // 0.09999999999999998\nx = new BigNumber(1)\nx.mod(0.9)                   // '0.1'\ny = new BigNumber(33)\ny.mod('a', 33)               // '3'\n```\n@param n A numeric value.\n@param base The base of n.",name:"mod",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},multipliedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber multiplied by `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.6 * 3                                // 1.7999999999999998\nx = new BigNumber(0.6)\ny = x.multipliedBy(3)                  // '1.8'\nBigNumber('7e+500').multipliedBy(y)    // '1.26e+501'\nx.multipliedBy('-a', 16)               // '-6'\n```\n@param n A numeric value.\n@param base The base of n.",name:"multipliedBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},times:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber multiplied by `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.6 * 3                         // 1.7999999999999998\nx = new BigNumber(0.6)\ny = x.times(3)                  // '1.8'\nBigNumber('7e+500').times(y)    // '1.26e+501'\nx.times('-a', 16)               // '-6'\n```\n@param n A numeric value.\n@param base The base of n.",name:"times",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},negated:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber negated, i.e. multiplied by -1.\n\n```ts\nx = new BigNumber(1.8)\nx.negated()                     // '-1.8'\ny = new BigNumber(-1.3)\ny.negated()                     // '1.3'\n```",name:"negated",required:!0,type:{name:"() => BigNumber"}},plus:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber plus `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.1 + 0.2                       // 0.30000000000000004\nx = new BigNumber(0.1)\ny = x.plus(0.2)                 // '0.3'\nBigNumber(0.7).plus(x).plus(y)  // '1.1'\nx.plus('0.1', 8)                // '0.225'\n```\n@param n A numeric value.\n@param base The base of n.",name:"plus",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},precision:{defaultValue:null,description:"Returns the number of significant digits of the value of this BigNumber, or `null` if the value\nof this BigNumber is ±`Infinity` or `NaN`.\n\nIf `includeZeros` is true then any trailing zeros of the integer part of the value of this\nBigNumber are counted as significant digits, otherwise they are not.\n\nThrows if `includeZeros` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.precision()                         // 9\ny = new BigNumber(987000)\ny.precision(false)                    // 3\ny.precision(true)                     // 6\n```\nReturns a BigNumber whose value is the value of this BigNumber rounded to a precision of\n`significantDigits` significant digits using rounding mode `roundingMode`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` will be used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.precision(6)                         // '9876.54'\nx.precision(6, BigNumber.ROUND_UP)     // '9876.55'\nx.precision(2)                         // '9900'\nx.precision(2, 1)                      // '9800'\nx                                      // '9876.54321'\n```\n@param includeZeros Whether to include integer trailing zeros in the significant digit count.\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"precision",required:!0,type:{name:"{ (includeZeros?: boolean | undefined): number; (significantDigits: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},sd:{defaultValue:null,description:"Returns the number of significant digits of the value of this BigNumber,\nor `null` if the value of this BigNumber is ±`Infinity` or `NaN`.\n\nIf `includeZeros` is true then any trailing zeros of the integer part of\nthe value of this BigNumber are counted as significant digits, otherwise\nthey are not.\n\nThrows if `includeZeros` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.sd()                         // 9\ny = new BigNumber(987000)\ny.sd(false)                    // 3\ny.sd(true)                     // 6\n```\nReturns a BigNumber whose value is the value of this BigNumber rounded to a precision of\n`significantDigits` significant digits using rounding mode `roundingMode`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` will be used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.sd(6)                           // '9876.54'\nx.sd(6, BigNumber.ROUND_UP)       // '9876.55'\nx.sd(2)                           // '9900'\nx.sd(2, 1)                        // '9800'\nx                                 // '9876.54321'\n```\n@param includeZeros Whether to include integer trailing zeros in the significant digit count.\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"sd",required:!0,type:{name:"{ (includeZeros?: boolean | undefined): number; (significantDigits: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},shiftedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber shifted by `n` places.\n\nThe shift is of the decimal point, i.e. of powers of ten, and is to the left if `n` is negative\nor to the right if `n` is positive.\n\nThe return value is always exact and unrounded.\n\nThrows if `n` is invalid.\n\n```ts\nx = new BigNumber(1.23)\nx.shiftedBy(3)                      // '1230'\nx.shiftedBy(-3)                     // '0.00123'\n```\n@param n The shift value, integer, -9007199254740991 to 9007199254740991.",name:"shiftedBy",required:!0,type:{name:"(n: number) => BigNumber"}},squareRoot:{defaultValue:null,description:"Returns a BigNumber whose value is the square root of the value of this BigNumber, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\nThe return value will be correctly rounded, i.e. rounded as if the result was first calculated\nto an infinite number of correct digits before rounding.\n\n```ts\nx = new BigNumber(16)\nx.squareRoot()                  // '4'\ny = new BigNumber(3)\ny.squareRoot()                  // '1.73205080756887729353'\n```",name:"squareRoot",required:!0,type:{name:"() => BigNumber"}},sqrt:{defaultValue:null,description:"Returns a BigNumber whose value is the square root of the value of this BigNumber, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\nThe return value will be correctly rounded, i.e. rounded as if the result was first calculated\nto an infinite number of correct digits before rounding.\n\n```ts\nx = new BigNumber(16)\nx.sqrt()                  // '4'\ny = new BigNumber(3)\ny.sqrt()                  // '1.73205080756887729353'\n```",name:"sqrt",required:!0,type:{name:"() => BigNumber"}},toExponential:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in exponential notation rounded using\nrounding mode `roundingMode` to `decimalPlaces` decimal places, i.e with one digit before the\ndecimal point and `decimalPlaces` digits after it.\n\nIf the value of this BigNumber in exponential notation has fewer than `decimalPlaces` fraction\ndigits, the return value will be appended with zeros accordingly.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the number of digits after the\ndecimal point defaults to the minimum number of digits necessary to represent the value\nexactly.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = 45.6\ny = new BigNumber(x)\nx.toExponential()               // '4.56e+1'\ny.toExponential()               // '4.56e+1'\nx.toExponential(0)              // '5e+1'\ny.toExponential(0)              // '5e+1'\nx.toExponential(1)              // '4.6e+1'\ny.toExponential(1)              // '4.6e+1'\ny.toExponential(1, 1)           // '4.5e+1'  (ROUND_DOWN)\nx.toExponential(3)              // '4.560e+1'\ny.toExponential(3)              // '4.560e+1'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"toExponential",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}},toFixed:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in normal (fixed-point) notation\nrounded to `decimalPlaces` decimal places using rounding mode `roundingMode`.\n\nIf the value of this BigNumber in normal notation has fewer than `decimalPlaces` fraction\ndigits, the return value will be appended with zeros accordingly.\n\nUnlike `Number.prototype.toFixed`, which returns exponential notation if a number is greater or\nequal to 10**21, this method will always return normal notation.\n\nIf `decimalPlaces` is omitted or is `null` or `undefined`, the return value will be unrounded\nand in normal notation. This is also unlike `Number.prototype.toFixed`, which returns the value\nto zero decimal places. It is useful when normal notation is required and the current\n`EXPONENTIAL_AT` setting causes `toString` to return exponential notation.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = 3.456\ny = new BigNumber(x)\nx.toFixed()                     // '3'\ny.toFixed()                     // '3.456'\ny.toFixed(0)                    // '3'\nx.toFixed(2)                    // '3.46'\ny.toFixed(2)                    // '3.46'\ny.toFixed(2, 1)                 // '3.45'  (ROUND_DOWN)\nx.toFixed(5)                    // '3.45600'\ny.toFixed(5)                    // '3.45600'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"toFixed",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}},toFormat:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in normal (fixed-point) notation\nrounded to `decimalPlaces` decimal places using rounding mode `roundingMode`, and formatted\naccording to the properties of the `format` or `FORMAT` object.\n\nThe formatting object may contain some or all of the properties shown in the examples below.\n\nIf `decimalPlaces` is omitted or is `null` or `undefined`, then the return value is not\nrounded to a fixed number of decimal places.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nIf `format` is omitted or is `null` or `undefined`, `FORMAT` is used.\n\nThrows if `decimalPlaces`, `roundingMode`, or `format` is invalid.\n\n```ts\nfmt = {\n  decimalSeparator: '.',\n  groupSeparator: ',',\n  groupSize: 3,\n  secondaryGroupSize: 0,\n  fractionGroupSeparator: ' ',\n  fractionGroupSize: 0\n}\n\nx = new BigNumber('123456789.123456789')\n\n// Set the global formatting options\nBigNumber.config({ FORMAT: fmt })\n\nx.toFormat()                              // '123,456,789.123456789'\nx.toFormat(3)                             // '123,456,789.123'\n\n// If a reference to the object assigned to FORMAT has been retained,\n// the format properties can be changed directly\nfmt.groupSeparator = ' '\nfmt.fractionGroupSize = 5\nx.toFormat()                              // '123 456 789.12345 6789'\n\n// Alternatively, pass the formatting options as an argument\nfmt = {\n  decimalSeparator: ',',\n  groupSeparator: '.',\n  groupSize: 3,\n  secondaryGroupSize: 2\n}\n\nx.toFormat()                              // '123 456 789.12345 6789'\nx.toFormat(fmt)                           // '12.34.56.789,123456789'\nx.toFormat(2, fmt)                        // '12.34.56.789,12'\nx.toFormat(3, BigNumber.ROUND_UP, fmt)    // '12.34.56.789,124'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.\n@param format Formatting options object. See `BigNumber.Format`.",name:"toFormat",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode: RoundingMode, format?: Format | undefined): string; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (decimalPlaces?: number | undefined): string; (decimalPlaces: number, format: Format): string; (format: Format): string; }"}},toFraction:{defaultValue:null,description:"Returns an array of two BigNumbers representing the value of this BigNumber as a simple\nfraction with an integer numerator and an integer denominator.\nThe denominator will be a positive non-zero value less than or equal to `max_denominator`.\nIf a maximum denominator, `max_denominator`, is not specified, or is `null` or `undefined`, the\ndenominator will be the lowest value necessary to represent the number exactly.\n\nThrows if `max_denominator` is invalid.\n\n```ts\nx = new BigNumber(1.75)\nx.toFraction()                  // '7, 4'\n\npi = new BigNumber('3.14159265358')\npi.toFraction()                 // '157079632679,50000000000'\npi.toFraction(100000)           // '312689, 99532'\npi.toFraction(10000)            // '355, 113'\npi.toFraction(100)              // '311, 99'\npi.toFraction(10)               // '22, 7'\npi.toFraction(1)                // '3, 1'\n```\n@param max_denominator The maximum denominator, integer > 0, or Infinity.",name:"toFraction",required:!0,type:{name:"(max_denominator?: Value | undefined) => [BigNumber, BigNumber]"}},toJSON:{defaultValue:null,description:"As `valueOf`.",name:"toJSON",required:!0,type:{name:"() => string"}},toNumber:{defaultValue:null,description:"Returns the value of this BigNumber as a JavaScript primitive number.\n\nUsing the unary plus operator gives the same result.\n\n```ts\nx = new BigNumber(456.789)\nx.toNumber()                    // 456.789\n+x                              // 456.789\n\ny = new BigNumber('45987349857634085409857349856430985')\ny.toNumber()                    // 4.598734985763409e+34\n\nz = new BigNumber(-0)\n1 / z.toNumber()                // -Infinity\n1 / +z                          // -Infinity\n```",name:"toNumber",required:!0,type:{name:"() => number"}},toPrecision:{defaultValue:null,description:"Returns a string representing the value of this BigNumber rounded to `significantDigits`\nsignificant digits using rounding mode `roundingMode`.\n\nIf `significantDigits` is less than the number of digits necessary to represent the integer\npart of the value in normal (fixed-point) notation, then exponential notation is used.\n\nIf `significantDigits` is omitted, or is `null` or `undefined`, then the return value is the\nsame as `n.toString()`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = 45.6\ny = new BigNumber(x)\nx.toPrecision()                 // '45.6'\ny.toPrecision()                 // '45.6'\nx.toPrecision(1)                // '5e+1'\ny.toPrecision(1)                // '5e+1'\ny.toPrecision(2, 0)             // '4.6e+1'  (ROUND_UP)\ny.toPrecision(2, 1)             // '4.5e+1'  (ROUND_DOWN)\nx.toPrecision(5)                // '45.600'\ny.toPrecision(5)                // '45.600'\n```\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer 0 to 8.",name:"toPrecision",required:!0,type:{name:"{ (significantDigits: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/hooks/math/useFromPrecision.tsx#useFromPrecision18"]={docgenInfo:useFromPrecision18.__docgenInfo,name:"useFromPrecision18",path:"src/hooks/math/useFromPrecision.tsx#useFromPrecision18"})}catch(__react_docgen_typescript_loader_error){}},"./src/hooks/math/useToPrecision.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return toPrecision12}));var bignumber_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/bignumber.js/bignumber.js"),bignumber_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(bignumber_js__WEBPACK_IMPORTED_MODULE_0__),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),precision12=new bignumber_js__WEBPACK_IMPORTED_MODULE_0___default.a(10).pow(12),precision18=new bignumber_js__WEBPACK_IMPORTED_MODULE_0___default.a(10).pow(18),toPrecision12=function toPrecision12(amount){return amount&&new bignumber_js__WEBPACK_IMPORTED_MODULE_0___default.a(amount).multipliedBy(precision12).toFixed(0)},useToPrecision12=function useToPrecision12(amount){return Object(react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((function(){return toPrecision12(amount)}),[amount])},useToPrecision18=function useToPrecision18(amount){return Object(react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((function(){return amount&&new bignumber_js__WEBPACK_IMPORTED_MODULE_0___default.a(amount).multipliedBy(precision18).toFixed(0)}),[amount])};try{toPrecision12.displayName="toPrecision12",toPrecision12.__docgenInfo={description:"",displayName:"toPrecision12",props:{c:{defaultValue:null,description:"The coefficient of the value of this BigNumber, an array of base 1e14 integer numbers, or null.",name:"c",required:!0,type:{name:"number[] | null"}},e:{defaultValue:null,description:"The exponent of the value of this BigNumber, an integer number, -1000000000 to 1000000000, or null.",name:"e",required:!0,type:{name:"number | null"}},s:{defaultValue:null,description:"The sign of the value of this BigNumber, -1, 1, or null.",name:"s",required:!0,type:{name:"number | null"}},absoluteValue:{defaultValue:null,description:"Returns a BigNumber whose value is the absolute value, i.e. the magnitude, of the value of this\nBigNumber.\n\nThe return value is always exact and unrounded.\n\n```ts\nx = new BigNumber(-0.8)\nx.absoluteValue()           // '0.8'\n```",name:"absoluteValue",required:!0,type:{name:"() => BigNumber"}},abs:{defaultValue:null,description:"Returns a BigNumber whose value is the absolute value, i.e. the magnitude, of the value of this\nBigNumber.\n\nThe return value is always exact and unrounded.\n\n```ts\nx = new BigNumber(-0.8)\nx.abs()                     // '0.8'\n```",name:"abs",required:!0,type:{name:"() => BigNumber"}},comparedTo:{defaultValue:null,description:"Returns |                                                               |\n:-------:|:--------------------------------------------------------------|\n   1    | If the value of this BigNumber is greater than the value of `n`\n  -1    | If the value of this BigNumber is less than the value of `n`\n   0    | If this BigNumber and `n` have the same value\n`null`  | If the value of either this BigNumber or `n` is `NaN`\n\n```ts\n\nx = new BigNumber(Infinity)\ny = new BigNumber(5)\nx.comparedTo(y)                 // 1\nx.comparedTo(x.minus(1))        // 0\ny.comparedTo(NaN)               // null\ny.comparedTo('110', 2)          // -1\n```\n@param n A numeric value.\n@param base The base of n.",name:"comparedTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => number"}},decimalPlaces:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded by rounding mode\n`roundingMode` to a maximum of `decimalPlaces` decimal places.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the return value is the number of\ndecimal places of the value of this BigNumber, or `null` if the value of this BigNumber is\n±`Infinity` or `NaN`.\n\nIf `roundingMode` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(1234.56)\nx.decimalPlaces()                      // 2\nx.decimalPlaces(1)                     // '1234.6'\nx.decimalPlaces(2)                     // '1234.56'\nx.decimalPlaces(10)                    // '1234.56'\nx.decimalPlaces(0, 1)                  // '1234'\nx.decimalPlaces(0, 6)                  // '1235'\nx.decimalPlaces(1, 1)                  // '1234.5'\nx.decimalPlaces(1, BigNumber.ROUND_HALF_EVEN)     // '1234.6'\nx                                      // '1234.56'\ny = new BigNumber('9.9e-101')\ny.decimalPlaces()                      // 102\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"decimalPlaces",required:!0,type:{name:"{ (): number; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},dp:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded by rounding mode\n`roundingMode` to a maximum of `decimalPlaces` decimal places.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the return value is the number of\ndecimal places of the value of this BigNumber, or `null` if the value of this BigNumber is\n±`Infinity` or `NaN`.\n\nIf `roundingMode` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(1234.56)\nx.dp()                                 // 2\nx.dp(1)                                // '1234.6'\nx.dp(2)                                // '1234.56'\nx.dp(10)                               // '1234.56'\nx.dp(0, 1)                             // '1234'\nx.dp(0, 6)                             // '1235'\nx.dp(1, 1)                             // '1234.5'\nx.dp(1, BigNumber.ROUND_HALF_EVEN)     // '1234.6'\nx                                      // '1234.56'\ny = new BigNumber('9.9e-101')\ny.dp()                                 // 102\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"dp",required:!0,type:{name:"{ (): number; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},dividedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber divided by `n`, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\n```ts\nx = new BigNumber(355)\ny = new BigNumber(113)\nx.dividedBy(y)                  // '3.14159292035398230088'\nx.dividedBy(5)                  // '71'\nx.dividedBy(47, 16)             // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"dividedBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},div:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber divided by `n`, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\n```ts\nx = new BigNumber(355)\ny = new BigNumber(113)\nx.div(y)                    // '3.14159292035398230088'\nx.div(5)                    // '71'\nx.div(47, 16)               // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"div",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},dividedToIntegerBy:{defaultValue:null,description:"Returns a BigNumber whose value is the integer part of dividing the value of this BigNumber by\n`n`.\n\n```ts\nx = new BigNumber(5)\ny = new BigNumber(3)\nx.dividedToIntegerBy(y)              // '1'\nx.dividedToIntegerBy(0.7)            // '7'\nx.dividedToIntegerBy('0.f', 16)      // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"dividedToIntegerBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},idiv:{defaultValue:null,description:"Returns a BigNumber whose value is the integer part of dividing the value of this BigNumber by\n`n`.\n\n```ts\nx = new BigNumber(5)\ny = new BigNumber(3)\nx.idiv(y)                       // '1'\nx.idiv(0.7)                     // '7'\nx.idiv('0.f', 16)               // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"idiv",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},exponentiatedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber exponentiated by `n`, i.e.\nraised to the power `n`, and optionally modulo a modulus `m`.\n\nIf `n` is negative the result is rounded according to the current `DECIMAL_PLACES` and\n`ROUNDING_MODE` settings.\n\nAs the number of digits of the result of the power operation can grow so large so quickly,\ne.g. 123.456**10000 has over 50000 digits, the number of significant digits calculated is\nlimited to the value of the `POW_PRECISION` setting (unless a modulus `m` is specified).\n\nBy default `POW_PRECISION` is set to 0. This means that an unlimited number of significant\ndigits will be calculated, and that the method's performance will decrease dramatically for\nlarger exponents.\n\nIf `m` is specified and the value of `m`, `n` and this BigNumber are integers and `n` is\npositive, then a fast modular exponentiation algorithm is used, otherwise the operation will\nbe performed as `x.exponentiatedBy(n).modulo(m)` with a `POW_PRECISION` of 0.\n\nThrows if `n` is not an integer.\n\n```ts\nMath.pow(0.7, 2)                    // 0.48999999999999994\nx = new BigNumber(0.7)\nx.exponentiatedBy(2)                // '0.49'\nBigNumber(3).exponentiatedBy(-2)    // '0.11111111111111111111'\n```\n@param n The exponent, an integer.\n@param m The modulus.",name:"exponentiatedBy",required:!0,type:{name:"{ (n: Value, m?: Value | undefined): BigNumber; (n: number, m?: Value | undefined): BigNumber; }"}},pow:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber exponentiated by `n`, i.e.\nraised to the power `n`, and optionally modulo a modulus `m`.\n\nIf `n` is negative the result is rounded according to the current `DECIMAL_PLACES` and\n`ROUNDING_MODE` settings.\n\nAs the number of digits of the result of the power operation can grow so large so quickly,\ne.g. 123.456**10000 has over 50000 digits, the number of significant digits calculated is\nlimited to the value of the `POW_PRECISION` setting (unless a modulus `m` is specified).\n\nBy default `POW_PRECISION` is set to 0. This means that an unlimited number of significant\ndigits will be calculated, and that the method's performance will decrease dramatically for\nlarger exponents.\n\nIf `m` is specified and the value of `m`, `n` and this BigNumber are integers and `n` is\npositive, then a fast modular exponentiation algorithm is used, otherwise the operation will\nbe performed as `x.pow(n).modulo(m)` with a `POW_PRECISION` of 0.\n\nThrows if `n` is not an integer.\n\n```ts\nMath.pow(0.7, 2)                   // 0.48999999999999994\nx = new BigNumber(0.7)\nx.pow(2)                           // '0.49'\nBigNumber(3).pow(-2)               // '0.11111111111111111111'\n```\n@param n The exponent, an integer.\n@param m The modulus.",name:"pow",required:!0,type:{name:"{ (n: Value, m?: Value | undefined): BigNumber; (n: number, m?: Value | undefined): BigNumber; }"}},integerValue:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded to an integer using\nrounding mode `rm`.\n\nIf `rm` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `rm` is invalid.\n\n```ts\nx = new BigNumber(123.456)\nx.integerValue()                        // '123'\nx.integerValue(BigNumber.ROUND_CEIL)    // '124'\ny = new BigNumber(-12.7)\ny.integerValue()                        // '-13'\nx.integerValue(BigNumber.ROUND_DOWN)    // '-12'\n```\n@param rm The roundng mode, an integer, 0 to 8.",name:"integerValue",required:!0,type:{name:"(rm?: RoundingMode | undefined) => BigNumber"}},isEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is equal to the value of `n`, otherwise returns\n`false`.\n\nAs with JavaScript, `NaN` does not equal `NaN`.\n\n```ts\n0 === 1e-324                           // true\nx = new BigNumber(0)\nx.isEqualTo('1e-324')                  // false\nBigNumber(-0).isEqualTo(x)             // true  ( -0 === 0 )\nBigNumber(255).isEqualTo('ff', 16)     // true\n\ny = new BigNumber(NaN)\ny.isEqualTo(NaN)                // false\n```\n@param n A numeric value.\n@param base The base of n.",name:"isEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},eq:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is equal to the value of `n`, otherwise returns\n`false`.\n\nAs with JavaScript, `NaN` does not equal `NaN`.\n\n```ts\n0 === 1e-324                    // true\nx = new BigNumber(0)\nx.eq('1e-324')                  // false\nBigNumber(-0).eq(x)             // true  ( -0 === 0 )\nBigNumber(255).eq('ff', 16)     // true\n\ny = new BigNumber(NaN)\ny.eq(NaN)                       // false\n```\n@param n A numeric value.\n@param base The base of n.",name:"eq",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isFinite:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is a finite number, otherwise returns `false`.\n\nThe only possible non-finite values of a BigNumber are `NaN`, `Infinity` and `-Infinity`.\n\n```ts\nx = new BigNumber(1)\nx.isFinite()                    // true\ny = new BigNumber(Infinity)\ny.isFinite()                    // false\n```",name:"isFinite",required:!0,type:{name:"() => boolean"}},isGreaterThan:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than the value of `n`, otherwise\nreturns `false`.\n\n```ts\n0.1 > (0.3 - 0.2)                             // true\nx = new BigNumber(0.1)\nx.isGreaterThan(BigNumber(0.3).minus(0.2))    // false\nBigNumber(0).isGreaterThan(x)                 // false\nBigNumber(11, 3).isGreaterThan(11.1, 2)       // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isGreaterThan",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},gt:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than the value of `n`, otherwise\nreturns `false`.\n\n```ts\n0.1 > (0.3 - 0                     // true\nx = new BigNumber(0.1)\nx.gt(BigNumber(0.3).minus(0.2))    // false\nBigNumber(0).gt(x)                 // false\nBigNumber(11, 3).gt(11.1, 2)       // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"gt",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isGreaterThanOrEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n(0.3 - 0.2) >= 0.1                                  // false\nx = new BigNumber(0.3).minus(0.2)\nx.isGreaterThanOrEqualTo(0.1)                       // true\nBigNumber(1).isGreaterThanOrEqualTo(x)              // true\nBigNumber(10, 18).isGreaterThanOrEqualTo('i', 36)   // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isGreaterThanOrEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},gte:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n(0.3 - 0.2) >= 0.1                    // false\nx = new BigNumber(0.3).minus(0.2)\nx.gte(0.1)                            // true\nBigNumber(1).gte(x)                   // true\nBigNumber(10, 18).gte('i', 36)        // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"gte",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isInteger:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is an integer, otherwise returns `false`.\n\n```ts\nx = new BigNumber(1)\nx.isInteger()                   // true\ny = new BigNumber(123.456)\ny.isInteger()                   // false\n```",name:"isInteger",required:!0,type:{name:"() => boolean"}},isLessThan:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than the value of `n`, otherwise returns\n`false`.\n\n```ts\n(0.3 - 0.2) < 0.1                       // true\nx = new BigNumber(0.3).minus(0.2)\nx.isLessThan(0.1)                       // false\nBigNumber(0).isLessThan(x)              // true\nBigNumber(11.1, 2).isLessThan(11, 3)    // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isLessThan",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},lt:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than the value of `n`, otherwise returns\n`false`.\n\n```ts\n(0.3 - 0.2) < 0.1                       // true\nx = new BigNumber(0.3).minus(0.2)\nx.lt(0.1)                               // false\nBigNumber(0).lt(x)                      // true\nBigNumber(11.1, 2).lt(11, 3)            // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"lt",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isLessThanOrEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n0.1 <= (0.3 - 0.2)                                 // false\nx = new BigNumber(0.1)\nx.isLessThanOrEqualTo(BigNumber(0.3).minus(0.2))   // true\nBigNumber(-1).isLessThanOrEqualTo(x)               // true\nBigNumber(10, 18).isLessThanOrEqualTo('i', 36)     // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isLessThanOrEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},lte:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n0.1 <= (0.3 - 0.2)                  // false\nx = new BigNumber(0.1)\nx.lte(BigNumber(0.3).minus(0.2))    // true\nBigNumber(-1).lte(x)                // true\nBigNumber(10, 18).lte('i', 36)      // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"lte",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isNaN:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is `NaN`, otherwise returns `false`.\n\n```ts\nx = new BigNumber(NaN)\nx.isNaN()                       // true\ny = new BigNumber('Infinity')\ny.isNaN()                       // false\n```",name:"isNaN",required:!0,type:{name:"() => boolean"}},isNegative:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is negative, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isNegative()                  // true\ny = new BigNumber(2)\ny.isNegative()                  // false\n```",name:"isNegative",required:!0,type:{name:"() => boolean"}},isPositive:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is positive, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isPositive()                  // false\ny = new BigNumber(2)\ny.isPositive()                  // true\n```",name:"isPositive",required:!0,type:{name:"() => boolean"}},isZero:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is zero or minus zero, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isZero()                 // true\n```",name:"isZero",required:!0,type:{name:"() => boolean"}},minus:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber minus `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.3 - 0.1                       // 0.19999999999999998\nx = new BigNumber(0.3)\nx.minus(0.1)                    // '0.2'\nx.minus(0.6, 20)                // '0'\n```\n@param n A numeric value.\n@param base The base of n.",name:"minus",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},modulo:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber modulo `n`, i.e. the integer\nremainder of dividing this BigNumber by `n`.\n\nThe value returned, and in particular its sign, is dependent on the value of the `MODULO_MODE`\nsetting of this BigNumber constructor. If it is 1 (default value), the result will have the\nsame sign as this BigNumber, and it will match that of Javascript's `%` operator (within the\nlimits of double precision) and BigDecimal's `remainder` method.\n\nThe return value is always exact and unrounded.\n\nSee `MODULO_MODE` for a description of the other modulo modes.\n\n```ts\n1 % 0.9                         // 0.09999999999999998\nx = new BigNumber(1)\nx.modulo(0.9)                   // '0.1'\ny = new BigNumber(33)\ny.modulo('a', 33)               // '3'\n```\n@param n A numeric value.\n@param base The base of n.",name:"modulo",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},mod:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber modulo `n`, i.e. the integer\nremainder of dividing this BigNumber by `n`.\n\nThe value returned, and in particular its sign, is dependent on the value of the `MODULO_MODE`\nsetting of this BigNumber constructor. If it is 1 (default value), the result will have the\nsame sign as this BigNumber, and it will match that of Javascript's `%` operator (within the\nlimits of double precision) and BigDecimal's `remainder` method.\n\nThe return value is always exact and unrounded.\n\nSee `MODULO_MODE` for a description of the other modulo modes.\n\n```ts\n1 % 0.9                      // 0.09999999999999998\nx = new BigNumber(1)\nx.mod(0.9)                   // '0.1'\ny = new BigNumber(33)\ny.mod('a', 33)               // '3'\n```\n@param n A numeric value.\n@param base The base of n.",name:"mod",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},multipliedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber multiplied by `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.6 * 3                                // 1.7999999999999998\nx = new BigNumber(0.6)\ny = x.multipliedBy(3)                  // '1.8'\nBigNumber('7e+500').multipliedBy(y)    // '1.26e+501'\nx.multipliedBy('-a', 16)               // '-6'\n```\n@param n A numeric value.\n@param base The base of n.",name:"multipliedBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},times:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber multiplied by `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.6 * 3                         // 1.7999999999999998\nx = new BigNumber(0.6)\ny = x.times(3)                  // '1.8'\nBigNumber('7e+500').times(y)    // '1.26e+501'\nx.times('-a', 16)               // '-6'\n```\n@param n A numeric value.\n@param base The base of n.",name:"times",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},negated:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber negated, i.e. multiplied by -1.\n\n```ts\nx = new BigNumber(1.8)\nx.negated()                     // '-1.8'\ny = new BigNumber(-1.3)\ny.negated()                     // '1.3'\n```",name:"negated",required:!0,type:{name:"() => BigNumber"}},plus:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber plus `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.1 + 0.2                       // 0.30000000000000004\nx = new BigNumber(0.1)\ny = x.plus(0.2)                 // '0.3'\nBigNumber(0.7).plus(x).plus(y)  // '1.1'\nx.plus('0.1', 8)                // '0.225'\n```\n@param n A numeric value.\n@param base The base of n.",name:"plus",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},precision:{defaultValue:null,description:"Returns the number of significant digits of the value of this BigNumber, or `null` if the value\nof this BigNumber is ±`Infinity` or `NaN`.\n\nIf `includeZeros` is true then any trailing zeros of the integer part of the value of this\nBigNumber are counted as significant digits, otherwise they are not.\n\nThrows if `includeZeros` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.precision()                         // 9\ny = new BigNumber(987000)\ny.precision(false)                    // 3\ny.precision(true)                     // 6\n```\nReturns a BigNumber whose value is the value of this BigNumber rounded to a precision of\n`significantDigits` significant digits using rounding mode `roundingMode`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` will be used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.precision(6)                         // '9876.54'\nx.precision(6, BigNumber.ROUND_UP)     // '9876.55'\nx.precision(2)                         // '9900'\nx.precision(2, 1)                      // '9800'\nx                                      // '9876.54321'\n```\n@param includeZeros Whether to include integer trailing zeros in the significant digit count.\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"precision",required:!0,type:{name:"{ (includeZeros?: boolean | undefined): number; (significantDigits: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},sd:{defaultValue:null,description:"Returns the number of significant digits of the value of this BigNumber,\nor `null` if the value of this BigNumber is ±`Infinity` or `NaN`.\n\nIf `includeZeros` is true then any trailing zeros of the integer part of\nthe value of this BigNumber are counted as significant digits, otherwise\nthey are not.\n\nThrows if `includeZeros` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.sd()                         // 9\ny = new BigNumber(987000)\ny.sd(false)                    // 3\ny.sd(true)                     // 6\n```\nReturns a BigNumber whose value is the value of this BigNumber rounded to a precision of\n`significantDigits` significant digits using rounding mode `roundingMode`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` will be used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.sd(6)                           // '9876.54'\nx.sd(6, BigNumber.ROUND_UP)       // '9876.55'\nx.sd(2)                           // '9900'\nx.sd(2, 1)                        // '9800'\nx                                 // '9876.54321'\n```\n@param includeZeros Whether to include integer trailing zeros in the significant digit count.\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"sd",required:!0,type:{name:"{ (includeZeros?: boolean | undefined): number; (significantDigits: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},shiftedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber shifted by `n` places.\n\nThe shift is of the decimal point, i.e. of powers of ten, and is to the left if `n` is negative\nor to the right if `n` is positive.\n\nThe return value is always exact and unrounded.\n\nThrows if `n` is invalid.\n\n```ts\nx = new BigNumber(1.23)\nx.shiftedBy(3)                      // '1230'\nx.shiftedBy(-3)                     // '0.00123'\n```\n@param n The shift value, integer, -9007199254740991 to 9007199254740991.",name:"shiftedBy",required:!0,type:{name:"(n: number) => BigNumber"}},squareRoot:{defaultValue:null,description:"Returns a BigNumber whose value is the square root of the value of this BigNumber, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\nThe return value will be correctly rounded, i.e. rounded as if the result was first calculated\nto an infinite number of correct digits before rounding.\n\n```ts\nx = new BigNumber(16)\nx.squareRoot()                  // '4'\ny = new BigNumber(3)\ny.squareRoot()                  // '1.73205080756887729353'\n```",name:"squareRoot",required:!0,type:{name:"() => BigNumber"}},sqrt:{defaultValue:null,description:"Returns a BigNumber whose value is the square root of the value of this BigNumber, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\nThe return value will be correctly rounded, i.e. rounded as if the result was first calculated\nto an infinite number of correct digits before rounding.\n\n```ts\nx = new BigNumber(16)\nx.sqrt()                  // '4'\ny = new BigNumber(3)\ny.sqrt()                  // '1.73205080756887729353'\n```",name:"sqrt",required:!0,type:{name:"() => BigNumber"}},toExponential:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in exponential notation rounded using\nrounding mode `roundingMode` to `decimalPlaces` decimal places, i.e with one digit before the\ndecimal point and `decimalPlaces` digits after it.\n\nIf the value of this BigNumber in exponential notation has fewer than `decimalPlaces` fraction\ndigits, the return value will be appended with zeros accordingly.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the number of digits after the\ndecimal point defaults to the minimum number of digits necessary to represent the value\nexactly.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = 45.6\ny = new BigNumber(x)\nx.toExponential()               // '4.56e+1'\ny.toExponential()               // '4.56e+1'\nx.toExponential(0)              // '5e+1'\ny.toExponential(0)              // '5e+1'\nx.toExponential(1)              // '4.6e+1'\ny.toExponential(1)              // '4.6e+1'\ny.toExponential(1, 1)           // '4.5e+1'  (ROUND_DOWN)\nx.toExponential(3)              // '4.560e+1'\ny.toExponential(3)              // '4.560e+1'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"toExponential",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}},toFixed:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in normal (fixed-point) notation\nrounded to `decimalPlaces` decimal places using rounding mode `roundingMode`.\n\nIf the value of this BigNumber in normal notation has fewer than `decimalPlaces` fraction\ndigits, the return value will be appended with zeros accordingly.\n\nUnlike `Number.prototype.toFixed`, which returns exponential notation if a number is greater or\nequal to 10**21, this method will always return normal notation.\n\nIf `decimalPlaces` is omitted or is `null` or `undefined`, the return value will be unrounded\nand in normal notation. This is also unlike `Number.prototype.toFixed`, which returns the value\nto zero decimal places. It is useful when normal notation is required and the current\n`EXPONENTIAL_AT` setting causes `toString` to return exponential notation.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = 3.456\ny = new BigNumber(x)\nx.toFixed()                     // '3'\ny.toFixed()                     // '3.456'\ny.toFixed(0)                    // '3'\nx.toFixed(2)                    // '3.46'\ny.toFixed(2)                    // '3.46'\ny.toFixed(2, 1)                 // '3.45'  (ROUND_DOWN)\nx.toFixed(5)                    // '3.45600'\ny.toFixed(5)                    // '3.45600'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"toFixed",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}},toFormat:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in normal (fixed-point) notation\nrounded to `decimalPlaces` decimal places using rounding mode `roundingMode`, and formatted\naccording to the properties of the `format` or `FORMAT` object.\n\nThe formatting object may contain some or all of the properties shown in the examples below.\n\nIf `decimalPlaces` is omitted or is `null` or `undefined`, then the return value is not\nrounded to a fixed number of decimal places.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nIf `format` is omitted or is `null` or `undefined`, `FORMAT` is used.\n\nThrows if `decimalPlaces`, `roundingMode`, or `format` is invalid.\n\n```ts\nfmt = {\n  decimalSeparator: '.',\n  groupSeparator: ',',\n  groupSize: 3,\n  secondaryGroupSize: 0,\n  fractionGroupSeparator: ' ',\n  fractionGroupSize: 0\n}\n\nx = new BigNumber('123456789.123456789')\n\n// Set the global formatting options\nBigNumber.config({ FORMAT: fmt })\n\nx.toFormat()                              // '123,456,789.123456789'\nx.toFormat(3)                             // '123,456,789.123'\n\n// If a reference to the object assigned to FORMAT has been retained,\n// the format properties can be changed directly\nfmt.groupSeparator = ' '\nfmt.fractionGroupSize = 5\nx.toFormat()                              // '123 456 789.12345 6789'\n\n// Alternatively, pass the formatting options as an argument\nfmt = {\n  decimalSeparator: ',',\n  groupSeparator: '.',\n  groupSize: 3,\n  secondaryGroupSize: 2\n}\n\nx.toFormat()                              // '123 456 789.12345 6789'\nx.toFormat(fmt)                           // '12.34.56.789,123456789'\nx.toFormat(2, fmt)                        // '12.34.56.789,12'\nx.toFormat(3, BigNumber.ROUND_UP, fmt)    // '12.34.56.789,124'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.\n@param format Formatting options object. See `BigNumber.Format`.",name:"toFormat",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode: RoundingMode, format?: Format | undefined): string; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (decimalPlaces?: number | undefined): string; (decimalPlaces: number, format: Format): string; (format: Format): string; }"}},toFraction:{defaultValue:null,description:"Returns an array of two BigNumbers representing the value of this BigNumber as a simple\nfraction with an integer numerator and an integer denominator.\nThe denominator will be a positive non-zero value less than or equal to `max_denominator`.\nIf a maximum denominator, `max_denominator`, is not specified, or is `null` or `undefined`, the\ndenominator will be the lowest value necessary to represent the number exactly.\n\nThrows if `max_denominator` is invalid.\n\n```ts\nx = new BigNumber(1.75)\nx.toFraction()                  // '7, 4'\n\npi = new BigNumber('3.14159265358')\npi.toFraction()                 // '157079632679,50000000000'\npi.toFraction(100000)           // '312689, 99532'\npi.toFraction(10000)            // '355, 113'\npi.toFraction(100)              // '311, 99'\npi.toFraction(10)               // '22, 7'\npi.toFraction(1)                // '3, 1'\n```\n@param max_denominator The maximum denominator, integer > 0, or Infinity.",name:"toFraction",required:!0,type:{name:"(max_denominator?: Value | undefined) => [BigNumber, BigNumber]"}},toJSON:{defaultValue:null,description:"As `valueOf`.",name:"toJSON",required:!0,type:{name:"() => string"}},toNumber:{defaultValue:null,description:"Returns the value of this BigNumber as a JavaScript primitive number.\n\nUsing the unary plus operator gives the same result.\n\n```ts\nx = new BigNumber(456.789)\nx.toNumber()                    // 456.789\n+x                              // 456.789\n\ny = new BigNumber('45987349857634085409857349856430985')\ny.toNumber()                    // 4.598734985763409e+34\n\nz = new BigNumber(-0)\n1 / z.toNumber()                // -Infinity\n1 / +z                          // -Infinity\n```",name:"toNumber",required:!0,type:{name:"() => number"}},toPrecision:{defaultValue:null,description:"Returns a string representing the value of this BigNumber rounded to `significantDigits`\nsignificant digits using rounding mode `roundingMode`.\n\nIf `significantDigits` is less than the number of digits necessary to represent the integer\npart of the value in normal (fixed-point) notation, then exponential notation is used.\n\nIf `significantDigits` is omitted, or is `null` or `undefined`, then the return value is the\nsame as `n.toString()`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = 45.6\ny = new BigNumber(x)\nx.toPrecision()                 // '45.6'\ny.toPrecision()                 // '45.6'\nx.toPrecision(1)                // '5e+1'\ny.toPrecision(1)                // '5e+1'\ny.toPrecision(2, 0)             // '4.6e+1'  (ROUND_UP)\ny.toPrecision(2, 1)             // '4.5e+1'  (ROUND_DOWN)\nx.toPrecision(5)                // '45.600'\ny.toPrecision(5)                // '45.600'\n```\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer 0 to 8.",name:"toPrecision",required:!0,type:{name:"{ (significantDigits: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/hooks/math/useToPrecision.tsx#toPrecision12"]={docgenInfo:toPrecision12.__docgenInfo,name:"toPrecision12",path:"src/hooks/math/useToPrecision.tsx#toPrecision12"})}catch(__react_docgen_typescript_loader_error){}try{useToPrecision12.displayName="useToPrecision12",useToPrecision12.__docgenInfo={description:"",displayName:"useToPrecision12",props:{c:{defaultValue:null,description:"The coefficient of the value of this BigNumber, an array of base 1e14 integer numbers, or null.",name:"c",required:!0,type:{name:"number[] | null"}},e:{defaultValue:null,description:"The exponent of the value of this BigNumber, an integer number, -1000000000 to 1000000000, or null.",name:"e",required:!0,type:{name:"number | null"}},s:{defaultValue:null,description:"The sign of the value of this BigNumber, -1, 1, or null.",name:"s",required:!0,type:{name:"number | null"}},absoluteValue:{defaultValue:null,description:"Returns a BigNumber whose value is the absolute value, i.e. the magnitude, of the value of this\nBigNumber.\n\nThe return value is always exact and unrounded.\n\n```ts\nx = new BigNumber(-0.8)\nx.absoluteValue()           // '0.8'\n```",name:"absoluteValue",required:!0,type:{name:"() => BigNumber"}},abs:{defaultValue:null,description:"Returns a BigNumber whose value is the absolute value, i.e. the magnitude, of the value of this\nBigNumber.\n\nThe return value is always exact and unrounded.\n\n```ts\nx = new BigNumber(-0.8)\nx.abs()                     // '0.8'\n```",name:"abs",required:!0,type:{name:"() => BigNumber"}},comparedTo:{defaultValue:null,description:"Returns |                                                               |\n:-------:|:--------------------------------------------------------------|\n   1    | If the value of this BigNumber is greater than the value of `n`\n  -1    | If the value of this BigNumber is less than the value of `n`\n   0    | If this BigNumber and `n` have the same value\n`null`  | If the value of either this BigNumber or `n` is `NaN`\n\n```ts\n\nx = new BigNumber(Infinity)\ny = new BigNumber(5)\nx.comparedTo(y)                 // 1\nx.comparedTo(x.minus(1))        // 0\ny.comparedTo(NaN)               // null\ny.comparedTo('110', 2)          // -1\n```\n@param n A numeric value.\n@param base The base of n.",name:"comparedTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => number"}},decimalPlaces:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded by rounding mode\n`roundingMode` to a maximum of `decimalPlaces` decimal places.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the return value is the number of\ndecimal places of the value of this BigNumber, or `null` if the value of this BigNumber is\n±`Infinity` or `NaN`.\n\nIf `roundingMode` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(1234.56)\nx.decimalPlaces()                      // 2\nx.decimalPlaces(1)                     // '1234.6'\nx.decimalPlaces(2)                     // '1234.56'\nx.decimalPlaces(10)                    // '1234.56'\nx.decimalPlaces(0, 1)                  // '1234'\nx.decimalPlaces(0, 6)                  // '1235'\nx.decimalPlaces(1, 1)                  // '1234.5'\nx.decimalPlaces(1, BigNumber.ROUND_HALF_EVEN)     // '1234.6'\nx                                      // '1234.56'\ny = new BigNumber('9.9e-101')\ny.decimalPlaces()                      // 102\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"decimalPlaces",required:!0,type:{name:"{ (): number; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},dp:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded by rounding mode\n`roundingMode` to a maximum of `decimalPlaces` decimal places.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the return value is the number of\ndecimal places of the value of this BigNumber, or `null` if the value of this BigNumber is\n±`Infinity` or `NaN`.\n\nIf `roundingMode` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(1234.56)\nx.dp()                                 // 2\nx.dp(1)                                // '1234.6'\nx.dp(2)                                // '1234.56'\nx.dp(10)                               // '1234.56'\nx.dp(0, 1)                             // '1234'\nx.dp(0, 6)                             // '1235'\nx.dp(1, 1)                             // '1234.5'\nx.dp(1, BigNumber.ROUND_HALF_EVEN)     // '1234.6'\nx                                      // '1234.56'\ny = new BigNumber('9.9e-101')\ny.dp()                                 // 102\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"dp",required:!0,type:{name:"{ (): number; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},dividedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber divided by `n`, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\n```ts\nx = new BigNumber(355)\ny = new BigNumber(113)\nx.dividedBy(y)                  // '3.14159292035398230088'\nx.dividedBy(5)                  // '71'\nx.dividedBy(47, 16)             // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"dividedBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},div:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber divided by `n`, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\n```ts\nx = new BigNumber(355)\ny = new BigNumber(113)\nx.div(y)                    // '3.14159292035398230088'\nx.div(5)                    // '71'\nx.div(47, 16)               // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"div",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},dividedToIntegerBy:{defaultValue:null,description:"Returns a BigNumber whose value is the integer part of dividing the value of this BigNumber by\n`n`.\n\n```ts\nx = new BigNumber(5)\ny = new BigNumber(3)\nx.dividedToIntegerBy(y)              // '1'\nx.dividedToIntegerBy(0.7)            // '7'\nx.dividedToIntegerBy('0.f', 16)      // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"dividedToIntegerBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},idiv:{defaultValue:null,description:"Returns a BigNumber whose value is the integer part of dividing the value of this BigNumber by\n`n`.\n\n```ts\nx = new BigNumber(5)\ny = new BigNumber(3)\nx.idiv(y)                       // '1'\nx.idiv(0.7)                     // '7'\nx.idiv('0.f', 16)               // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"idiv",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},exponentiatedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber exponentiated by `n`, i.e.\nraised to the power `n`, and optionally modulo a modulus `m`.\n\nIf `n` is negative the result is rounded according to the current `DECIMAL_PLACES` and\n`ROUNDING_MODE` settings.\n\nAs the number of digits of the result of the power operation can grow so large so quickly,\ne.g. 123.456**10000 has over 50000 digits, the number of significant digits calculated is\nlimited to the value of the `POW_PRECISION` setting (unless a modulus `m` is specified).\n\nBy default `POW_PRECISION` is set to 0. This means that an unlimited number of significant\ndigits will be calculated, and that the method's performance will decrease dramatically for\nlarger exponents.\n\nIf `m` is specified and the value of `m`, `n` and this BigNumber are integers and `n` is\npositive, then a fast modular exponentiation algorithm is used, otherwise the operation will\nbe performed as `x.exponentiatedBy(n).modulo(m)` with a `POW_PRECISION` of 0.\n\nThrows if `n` is not an integer.\n\n```ts\nMath.pow(0.7, 2)                    // 0.48999999999999994\nx = new BigNumber(0.7)\nx.exponentiatedBy(2)                // '0.49'\nBigNumber(3).exponentiatedBy(-2)    // '0.11111111111111111111'\n```\n@param n The exponent, an integer.\n@param m The modulus.",name:"exponentiatedBy",required:!0,type:{name:"{ (n: Value, m?: Value | undefined): BigNumber; (n: number, m?: Value | undefined): BigNumber; }"}},pow:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber exponentiated by `n`, i.e.\nraised to the power `n`, and optionally modulo a modulus `m`.\n\nIf `n` is negative the result is rounded according to the current `DECIMAL_PLACES` and\n`ROUNDING_MODE` settings.\n\nAs the number of digits of the result of the power operation can grow so large so quickly,\ne.g. 123.456**10000 has over 50000 digits, the number of significant digits calculated is\nlimited to the value of the `POW_PRECISION` setting (unless a modulus `m` is specified).\n\nBy default `POW_PRECISION` is set to 0. This means that an unlimited number of significant\ndigits will be calculated, and that the method's performance will decrease dramatically for\nlarger exponents.\n\nIf `m` is specified and the value of `m`, `n` and this BigNumber are integers and `n` is\npositive, then a fast modular exponentiation algorithm is used, otherwise the operation will\nbe performed as `x.pow(n).modulo(m)` with a `POW_PRECISION` of 0.\n\nThrows if `n` is not an integer.\n\n```ts\nMath.pow(0.7, 2)                   // 0.48999999999999994\nx = new BigNumber(0.7)\nx.pow(2)                           // '0.49'\nBigNumber(3).pow(-2)               // '0.11111111111111111111'\n```\n@param n The exponent, an integer.\n@param m The modulus.",name:"pow",required:!0,type:{name:"{ (n: Value, m?: Value | undefined): BigNumber; (n: number, m?: Value | undefined): BigNumber; }"}},integerValue:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded to an integer using\nrounding mode `rm`.\n\nIf `rm` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `rm` is invalid.\n\n```ts\nx = new BigNumber(123.456)\nx.integerValue()                        // '123'\nx.integerValue(BigNumber.ROUND_CEIL)    // '124'\ny = new BigNumber(-12.7)\ny.integerValue()                        // '-13'\nx.integerValue(BigNumber.ROUND_DOWN)    // '-12'\n```\n@param rm The roundng mode, an integer, 0 to 8.",name:"integerValue",required:!0,type:{name:"(rm?: RoundingMode | undefined) => BigNumber"}},isEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is equal to the value of `n`, otherwise returns\n`false`.\n\nAs with JavaScript, `NaN` does not equal `NaN`.\n\n```ts\n0 === 1e-324                           // true\nx = new BigNumber(0)\nx.isEqualTo('1e-324')                  // false\nBigNumber(-0).isEqualTo(x)             // true  ( -0 === 0 )\nBigNumber(255).isEqualTo('ff', 16)     // true\n\ny = new BigNumber(NaN)\ny.isEqualTo(NaN)                // false\n```\n@param n A numeric value.\n@param base The base of n.",name:"isEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},eq:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is equal to the value of `n`, otherwise returns\n`false`.\n\nAs with JavaScript, `NaN` does not equal `NaN`.\n\n```ts\n0 === 1e-324                    // true\nx = new BigNumber(0)\nx.eq('1e-324')                  // false\nBigNumber(-0).eq(x)             // true  ( -0 === 0 )\nBigNumber(255).eq('ff', 16)     // true\n\ny = new BigNumber(NaN)\ny.eq(NaN)                       // false\n```\n@param n A numeric value.\n@param base The base of n.",name:"eq",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isFinite:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is a finite number, otherwise returns `false`.\n\nThe only possible non-finite values of a BigNumber are `NaN`, `Infinity` and `-Infinity`.\n\n```ts\nx = new BigNumber(1)\nx.isFinite()                    // true\ny = new BigNumber(Infinity)\ny.isFinite()                    // false\n```",name:"isFinite",required:!0,type:{name:"() => boolean"}},isGreaterThan:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than the value of `n`, otherwise\nreturns `false`.\n\n```ts\n0.1 > (0.3 - 0.2)                             // true\nx = new BigNumber(0.1)\nx.isGreaterThan(BigNumber(0.3).minus(0.2))    // false\nBigNumber(0).isGreaterThan(x)                 // false\nBigNumber(11, 3).isGreaterThan(11.1, 2)       // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isGreaterThan",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},gt:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than the value of `n`, otherwise\nreturns `false`.\n\n```ts\n0.1 > (0.3 - 0                     // true\nx = new BigNumber(0.1)\nx.gt(BigNumber(0.3).minus(0.2))    // false\nBigNumber(0).gt(x)                 // false\nBigNumber(11, 3).gt(11.1, 2)       // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"gt",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isGreaterThanOrEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n(0.3 - 0.2) >= 0.1                                  // false\nx = new BigNumber(0.3).minus(0.2)\nx.isGreaterThanOrEqualTo(0.1)                       // true\nBigNumber(1).isGreaterThanOrEqualTo(x)              // true\nBigNumber(10, 18).isGreaterThanOrEqualTo('i', 36)   // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isGreaterThanOrEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},gte:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n(0.3 - 0.2) >= 0.1                    // false\nx = new BigNumber(0.3).minus(0.2)\nx.gte(0.1)                            // true\nBigNumber(1).gte(x)                   // true\nBigNumber(10, 18).gte('i', 36)        // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"gte",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isInteger:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is an integer, otherwise returns `false`.\n\n```ts\nx = new BigNumber(1)\nx.isInteger()                   // true\ny = new BigNumber(123.456)\ny.isInteger()                   // false\n```",name:"isInteger",required:!0,type:{name:"() => boolean"}},isLessThan:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than the value of `n`, otherwise returns\n`false`.\n\n```ts\n(0.3 - 0.2) < 0.1                       // true\nx = new BigNumber(0.3).minus(0.2)\nx.isLessThan(0.1)                       // false\nBigNumber(0).isLessThan(x)              // true\nBigNumber(11.1, 2).isLessThan(11, 3)    // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isLessThan",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},lt:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than the value of `n`, otherwise returns\n`false`.\n\n```ts\n(0.3 - 0.2) < 0.1                       // true\nx = new BigNumber(0.3).minus(0.2)\nx.lt(0.1)                               // false\nBigNumber(0).lt(x)                      // true\nBigNumber(11.1, 2).lt(11, 3)            // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"lt",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isLessThanOrEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n0.1 <= (0.3 - 0.2)                                 // false\nx = new BigNumber(0.1)\nx.isLessThanOrEqualTo(BigNumber(0.3).minus(0.2))   // true\nBigNumber(-1).isLessThanOrEqualTo(x)               // true\nBigNumber(10, 18).isLessThanOrEqualTo('i', 36)     // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isLessThanOrEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},lte:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n0.1 <= (0.3 - 0.2)                  // false\nx = new BigNumber(0.1)\nx.lte(BigNumber(0.3).minus(0.2))    // true\nBigNumber(-1).lte(x)                // true\nBigNumber(10, 18).lte('i', 36)      // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"lte",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isNaN:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is `NaN`, otherwise returns `false`.\n\n```ts\nx = new BigNumber(NaN)\nx.isNaN()                       // true\ny = new BigNumber('Infinity')\ny.isNaN()                       // false\n```",name:"isNaN",required:!0,type:{name:"() => boolean"}},isNegative:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is negative, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isNegative()                  // true\ny = new BigNumber(2)\ny.isNegative()                  // false\n```",name:"isNegative",required:!0,type:{name:"() => boolean"}},isPositive:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is positive, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isPositive()                  // false\ny = new BigNumber(2)\ny.isPositive()                  // true\n```",name:"isPositive",required:!0,type:{name:"() => boolean"}},isZero:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is zero or minus zero, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isZero()                 // true\n```",name:"isZero",required:!0,type:{name:"() => boolean"}},minus:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber minus `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.3 - 0.1                       // 0.19999999999999998\nx = new BigNumber(0.3)\nx.minus(0.1)                    // '0.2'\nx.minus(0.6, 20)                // '0'\n```\n@param n A numeric value.\n@param base The base of n.",name:"minus",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},modulo:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber modulo `n`, i.e. the integer\nremainder of dividing this BigNumber by `n`.\n\nThe value returned, and in particular its sign, is dependent on the value of the `MODULO_MODE`\nsetting of this BigNumber constructor. If it is 1 (default value), the result will have the\nsame sign as this BigNumber, and it will match that of Javascript's `%` operator (within the\nlimits of double precision) and BigDecimal's `remainder` method.\n\nThe return value is always exact and unrounded.\n\nSee `MODULO_MODE` for a description of the other modulo modes.\n\n```ts\n1 % 0.9                         // 0.09999999999999998\nx = new BigNumber(1)\nx.modulo(0.9)                   // '0.1'\ny = new BigNumber(33)\ny.modulo('a', 33)               // '3'\n```\n@param n A numeric value.\n@param base The base of n.",name:"modulo",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},mod:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber modulo `n`, i.e. the integer\nremainder of dividing this BigNumber by `n`.\n\nThe value returned, and in particular its sign, is dependent on the value of the `MODULO_MODE`\nsetting of this BigNumber constructor. If it is 1 (default value), the result will have the\nsame sign as this BigNumber, and it will match that of Javascript's `%` operator (within the\nlimits of double precision) and BigDecimal's `remainder` method.\n\nThe return value is always exact and unrounded.\n\nSee `MODULO_MODE` for a description of the other modulo modes.\n\n```ts\n1 % 0.9                      // 0.09999999999999998\nx = new BigNumber(1)\nx.mod(0.9)                   // '0.1'\ny = new BigNumber(33)\ny.mod('a', 33)               // '3'\n```\n@param n A numeric value.\n@param base The base of n.",name:"mod",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},multipliedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber multiplied by `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.6 * 3                                // 1.7999999999999998\nx = new BigNumber(0.6)\ny = x.multipliedBy(3)                  // '1.8'\nBigNumber('7e+500').multipliedBy(y)    // '1.26e+501'\nx.multipliedBy('-a', 16)               // '-6'\n```\n@param n A numeric value.\n@param base The base of n.",name:"multipliedBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},times:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber multiplied by `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.6 * 3                         // 1.7999999999999998\nx = new BigNumber(0.6)\ny = x.times(3)                  // '1.8'\nBigNumber('7e+500').times(y)    // '1.26e+501'\nx.times('-a', 16)               // '-6'\n```\n@param n A numeric value.\n@param base The base of n.",name:"times",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},negated:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber negated, i.e. multiplied by -1.\n\n```ts\nx = new BigNumber(1.8)\nx.negated()                     // '-1.8'\ny = new BigNumber(-1.3)\ny.negated()                     // '1.3'\n```",name:"negated",required:!0,type:{name:"() => BigNumber"}},plus:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber plus `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.1 + 0.2                       // 0.30000000000000004\nx = new BigNumber(0.1)\ny = x.plus(0.2)                 // '0.3'\nBigNumber(0.7).plus(x).plus(y)  // '1.1'\nx.plus('0.1', 8)                // '0.225'\n```\n@param n A numeric value.\n@param base The base of n.",name:"plus",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},precision:{defaultValue:null,description:"Returns the number of significant digits of the value of this BigNumber, or `null` if the value\nof this BigNumber is ±`Infinity` or `NaN`.\n\nIf `includeZeros` is true then any trailing zeros of the integer part of the value of this\nBigNumber are counted as significant digits, otherwise they are not.\n\nThrows if `includeZeros` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.precision()                         // 9\ny = new BigNumber(987000)\ny.precision(false)                    // 3\ny.precision(true)                     // 6\n```\nReturns a BigNumber whose value is the value of this BigNumber rounded to a precision of\n`significantDigits` significant digits using rounding mode `roundingMode`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` will be used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.precision(6)                         // '9876.54'\nx.precision(6, BigNumber.ROUND_UP)     // '9876.55'\nx.precision(2)                         // '9900'\nx.precision(2, 1)                      // '9800'\nx                                      // '9876.54321'\n```\n@param includeZeros Whether to include integer trailing zeros in the significant digit count.\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"precision",required:!0,type:{name:"{ (includeZeros?: boolean | undefined): number; (significantDigits: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},sd:{defaultValue:null,description:"Returns the number of significant digits of the value of this BigNumber,\nor `null` if the value of this BigNumber is ±`Infinity` or `NaN`.\n\nIf `includeZeros` is true then any trailing zeros of the integer part of\nthe value of this BigNumber are counted as significant digits, otherwise\nthey are not.\n\nThrows if `includeZeros` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.sd()                         // 9\ny = new BigNumber(987000)\ny.sd(false)                    // 3\ny.sd(true)                     // 6\n```\nReturns a BigNumber whose value is the value of this BigNumber rounded to a precision of\n`significantDigits` significant digits using rounding mode `roundingMode`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` will be used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.sd(6)                           // '9876.54'\nx.sd(6, BigNumber.ROUND_UP)       // '9876.55'\nx.sd(2)                           // '9900'\nx.sd(2, 1)                        // '9800'\nx                                 // '9876.54321'\n```\n@param includeZeros Whether to include integer trailing zeros in the significant digit count.\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"sd",required:!0,type:{name:"{ (includeZeros?: boolean | undefined): number; (significantDigits: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},shiftedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber shifted by `n` places.\n\nThe shift is of the decimal point, i.e. of powers of ten, and is to the left if `n` is negative\nor to the right if `n` is positive.\n\nThe return value is always exact and unrounded.\n\nThrows if `n` is invalid.\n\n```ts\nx = new BigNumber(1.23)\nx.shiftedBy(3)                      // '1230'\nx.shiftedBy(-3)                     // '0.00123'\n```\n@param n The shift value, integer, -9007199254740991 to 9007199254740991.",name:"shiftedBy",required:!0,type:{name:"(n: number) => BigNumber"}},squareRoot:{defaultValue:null,description:"Returns a BigNumber whose value is the square root of the value of this BigNumber, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\nThe return value will be correctly rounded, i.e. rounded as if the result was first calculated\nto an infinite number of correct digits before rounding.\n\n```ts\nx = new BigNumber(16)\nx.squareRoot()                  // '4'\ny = new BigNumber(3)\ny.squareRoot()                  // '1.73205080756887729353'\n```",name:"squareRoot",required:!0,type:{name:"() => BigNumber"}},sqrt:{defaultValue:null,description:"Returns a BigNumber whose value is the square root of the value of this BigNumber, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\nThe return value will be correctly rounded, i.e. rounded as if the result was first calculated\nto an infinite number of correct digits before rounding.\n\n```ts\nx = new BigNumber(16)\nx.sqrt()                  // '4'\ny = new BigNumber(3)\ny.sqrt()                  // '1.73205080756887729353'\n```",name:"sqrt",required:!0,type:{name:"() => BigNumber"}},toExponential:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in exponential notation rounded using\nrounding mode `roundingMode` to `decimalPlaces` decimal places, i.e with one digit before the\ndecimal point and `decimalPlaces` digits after it.\n\nIf the value of this BigNumber in exponential notation has fewer than `decimalPlaces` fraction\ndigits, the return value will be appended with zeros accordingly.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the number of digits after the\ndecimal point defaults to the minimum number of digits necessary to represent the value\nexactly.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = 45.6\ny = new BigNumber(x)\nx.toExponential()               // '4.56e+1'\ny.toExponential()               // '4.56e+1'\nx.toExponential(0)              // '5e+1'\ny.toExponential(0)              // '5e+1'\nx.toExponential(1)              // '4.6e+1'\ny.toExponential(1)              // '4.6e+1'\ny.toExponential(1, 1)           // '4.5e+1'  (ROUND_DOWN)\nx.toExponential(3)              // '4.560e+1'\ny.toExponential(3)              // '4.560e+1'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"toExponential",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}},toFixed:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in normal (fixed-point) notation\nrounded to `decimalPlaces` decimal places using rounding mode `roundingMode`.\n\nIf the value of this BigNumber in normal notation has fewer than `decimalPlaces` fraction\ndigits, the return value will be appended with zeros accordingly.\n\nUnlike `Number.prototype.toFixed`, which returns exponential notation if a number is greater or\nequal to 10**21, this method will always return normal notation.\n\nIf `decimalPlaces` is omitted or is `null` or `undefined`, the return value will be unrounded\nand in normal notation. This is also unlike `Number.prototype.toFixed`, which returns the value\nto zero decimal places. It is useful when normal notation is required and the current\n`EXPONENTIAL_AT` setting causes `toString` to return exponential notation.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = 3.456\ny = new BigNumber(x)\nx.toFixed()                     // '3'\ny.toFixed()                     // '3.456'\ny.toFixed(0)                    // '3'\nx.toFixed(2)                    // '3.46'\ny.toFixed(2)                    // '3.46'\ny.toFixed(2, 1)                 // '3.45'  (ROUND_DOWN)\nx.toFixed(5)                    // '3.45600'\ny.toFixed(5)                    // '3.45600'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"toFixed",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}},toFormat:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in normal (fixed-point) notation\nrounded to `decimalPlaces` decimal places using rounding mode `roundingMode`, and formatted\naccording to the properties of the `format` or `FORMAT` object.\n\nThe formatting object may contain some or all of the properties shown in the examples below.\n\nIf `decimalPlaces` is omitted or is `null` or `undefined`, then the return value is not\nrounded to a fixed number of decimal places.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nIf `format` is omitted or is `null` or `undefined`, `FORMAT` is used.\n\nThrows if `decimalPlaces`, `roundingMode`, or `format` is invalid.\n\n```ts\nfmt = {\n  decimalSeparator: '.',\n  groupSeparator: ',',\n  groupSize: 3,\n  secondaryGroupSize: 0,\n  fractionGroupSeparator: ' ',\n  fractionGroupSize: 0\n}\n\nx = new BigNumber('123456789.123456789')\n\n// Set the global formatting options\nBigNumber.config({ FORMAT: fmt })\n\nx.toFormat()                              // '123,456,789.123456789'\nx.toFormat(3)                             // '123,456,789.123'\n\n// If a reference to the object assigned to FORMAT has been retained,\n// the format properties can be changed directly\nfmt.groupSeparator = ' '\nfmt.fractionGroupSize = 5\nx.toFormat()                              // '123 456 789.12345 6789'\n\n// Alternatively, pass the formatting options as an argument\nfmt = {\n  decimalSeparator: ',',\n  groupSeparator: '.',\n  groupSize: 3,\n  secondaryGroupSize: 2\n}\n\nx.toFormat()                              // '123 456 789.12345 6789'\nx.toFormat(fmt)                           // '12.34.56.789,123456789'\nx.toFormat(2, fmt)                        // '12.34.56.789,12'\nx.toFormat(3, BigNumber.ROUND_UP, fmt)    // '12.34.56.789,124'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.\n@param format Formatting options object. See `BigNumber.Format`.",name:"toFormat",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode: RoundingMode, format?: Format | undefined): string; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (decimalPlaces?: number | undefined): string; (decimalPlaces: number, format: Format): string; (format: Format): string; }"}},toFraction:{defaultValue:null,description:"Returns an array of two BigNumbers representing the value of this BigNumber as a simple\nfraction with an integer numerator and an integer denominator.\nThe denominator will be a positive non-zero value less than or equal to `max_denominator`.\nIf a maximum denominator, `max_denominator`, is not specified, or is `null` or `undefined`, the\ndenominator will be the lowest value necessary to represent the number exactly.\n\nThrows if `max_denominator` is invalid.\n\n```ts\nx = new BigNumber(1.75)\nx.toFraction()                  // '7, 4'\n\npi = new BigNumber('3.14159265358')\npi.toFraction()                 // '157079632679,50000000000'\npi.toFraction(100000)           // '312689, 99532'\npi.toFraction(10000)            // '355, 113'\npi.toFraction(100)              // '311, 99'\npi.toFraction(10)               // '22, 7'\npi.toFraction(1)                // '3, 1'\n```\n@param max_denominator The maximum denominator, integer > 0, or Infinity.",name:"toFraction",required:!0,type:{name:"(max_denominator?: Value | undefined) => [BigNumber, BigNumber]"}},toJSON:{defaultValue:null,description:"As `valueOf`.",name:"toJSON",required:!0,type:{name:"() => string"}},toNumber:{defaultValue:null,description:"Returns the value of this BigNumber as a JavaScript primitive number.\n\nUsing the unary plus operator gives the same result.\n\n```ts\nx = new BigNumber(456.789)\nx.toNumber()                    // 456.789\n+x                              // 456.789\n\ny = new BigNumber('45987349857634085409857349856430985')\ny.toNumber()                    // 4.598734985763409e+34\n\nz = new BigNumber(-0)\n1 / z.toNumber()                // -Infinity\n1 / +z                          // -Infinity\n```",name:"toNumber",required:!0,type:{name:"() => number"}},toPrecision:{defaultValue:null,description:"Returns a string representing the value of this BigNumber rounded to `significantDigits`\nsignificant digits using rounding mode `roundingMode`.\n\nIf `significantDigits` is less than the number of digits necessary to represent the integer\npart of the value in normal (fixed-point) notation, then exponential notation is used.\n\nIf `significantDigits` is omitted, or is `null` or `undefined`, then the return value is the\nsame as `n.toString()`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = 45.6\ny = new BigNumber(x)\nx.toPrecision()                 // '45.6'\ny.toPrecision()                 // '45.6'\nx.toPrecision(1)                // '5e+1'\ny.toPrecision(1)                // '5e+1'\ny.toPrecision(2, 0)             // '4.6e+1'  (ROUND_UP)\ny.toPrecision(2, 1)             // '4.5e+1'  (ROUND_DOWN)\nx.toPrecision(5)                // '45.600'\ny.toPrecision(5)                // '45.600'\n```\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer 0 to 8.",name:"toPrecision",required:!0,type:{name:"{ (significantDigits: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/hooks/math/useToPrecision.tsx#useToPrecision12"]={docgenInfo:useToPrecision12.__docgenInfo,name:"useToPrecision12",path:"src/hooks/math/useToPrecision.tsx#useToPrecision12"})}catch(__react_docgen_typescript_loader_error){}try{useToPrecision18.displayName="useToPrecision18",useToPrecision18.__docgenInfo={description:"",displayName:"useToPrecision18",props:{c:{defaultValue:null,description:"The coefficient of the value of this BigNumber, an array of base 1e14 integer numbers, or null.",name:"c",required:!0,type:{name:"number[] | null"}},e:{defaultValue:null,description:"The exponent of the value of this BigNumber, an integer number, -1000000000 to 1000000000, or null.",name:"e",required:!0,type:{name:"number | null"}},s:{defaultValue:null,description:"The sign of the value of this BigNumber, -1, 1, or null.",name:"s",required:!0,type:{name:"number | null"}},absoluteValue:{defaultValue:null,description:"Returns a BigNumber whose value is the absolute value, i.e. the magnitude, of the value of this\nBigNumber.\n\nThe return value is always exact and unrounded.\n\n```ts\nx = new BigNumber(-0.8)\nx.absoluteValue()           // '0.8'\n```",name:"absoluteValue",required:!0,type:{name:"() => BigNumber"}},abs:{defaultValue:null,description:"Returns a BigNumber whose value is the absolute value, i.e. the magnitude, of the value of this\nBigNumber.\n\nThe return value is always exact and unrounded.\n\n```ts\nx = new BigNumber(-0.8)\nx.abs()                     // '0.8'\n```",name:"abs",required:!0,type:{name:"() => BigNumber"}},comparedTo:{defaultValue:null,description:"Returns |                                                               |\n:-------:|:--------------------------------------------------------------|\n   1    | If the value of this BigNumber is greater than the value of `n`\n  -1    | If the value of this BigNumber is less than the value of `n`\n   0    | If this BigNumber and `n` have the same value\n`null`  | If the value of either this BigNumber or `n` is `NaN`\n\n```ts\n\nx = new BigNumber(Infinity)\ny = new BigNumber(5)\nx.comparedTo(y)                 // 1\nx.comparedTo(x.minus(1))        // 0\ny.comparedTo(NaN)               // null\ny.comparedTo('110', 2)          // -1\n```\n@param n A numeric value.\n@param base The base of n.",name:"comparedTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => number"}},decimalPlaces:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded by rounding mode\n`roundingMode` to a maximum of `decimalPlaces` decimal places.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the return value is the number of\ndecimal places of the value of this BigNumber, or `null` if the value of this BigNumber is\n±`Infinity` or `NaN`.\n\nIf `roundingMode` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(1234.56)\nx.decimalPlaces()                      // 2\nx.decimalPlaces(1)                     // '1234.6'\nx.decimalPlaces(2)                     // '1234.56'\nx.decimalPlaces(10)                    // '1234.56'\nx.decimalPlaces(0, 1)                  // '1234'\nx.decimalPlaces(0, 6)                  // '1235'\nx.decimalPlaces(1, 1)                  // '1234.5'\nx.decimalPlaces(1, BigNumber.ROUND_HALF_EVEN)     // '1234.6'\nx                                      // '1234.56'\ny = new BigNumber('9.9e-101')\ny.decimalPlaces()                      // 102\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"decimalPlaces",required:!0,type:{name:"{ (): number; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},dp:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded by rounding mode\n`roundingMode` to a maximum of `decimalPlaces` decimal places.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the return value is the number of\ndecimal places of the value of this BigNumber, or `null` if the value of this BigNumber is\n±`Infinity` or `NaN`.\n\nIf `roundingMode` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(1234.56)\nx.dp()                                 // 2\nx.dp(1)                                // '1234.6'\nx.dp(2)                                // '1234.56'\nx.dp(10)                               // '1234.56'\nx.dp(0, 1)                             // '1234'\nx.dp(0, 6)                             // '1235'\nx.dp(1, 1)                             // '1234.5'\nx.dp(1, BigNumber.ROUND_HALF_EVEN)     // '1234.6'\nx                                      // '1234.56'\ny = new BigNumber('9.9e-101')\ny.dp()                                 // 102\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"dp",required:!0,type:{name:"{ (): number; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},dividedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber divided by `n`, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\n```ts\nx = new BigNumber(355)\ny = new BigNumber(113)\nx.dividedBy(y)                  // '3.14159292035398230088'\nx.dividedBy(5)                  // '71'\nx.dividedBy(47, 16)             // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"dividedBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},div:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber divided by `n`, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\n```ts\nx = new BigNumber(355)\ny = new BigNumber(113)\nx.div(y)                    // '3.14159292035398230088'\nx.div(5)                    // '71'\nx.div(47, 16)               // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"div",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},dividedToIntegerBy:{defaultValue:null,description:"Returns a BigNumber whose value is the integer part of dividing the value of this BigNumber by\n`n`.\n\n```ts\nx = new BigNumber(5)\ny = new BigNumber(3)\nx.dividedToIntegerBy(y)              // '1'\nx.dividedToIntegerBy(0.7)            // '7'\nx.dividedToIntegerBy('0.f', 16)      // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"dividedToIntegerBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},idiv:{defaultValue:null,description:"Returns a BigNumber whose value is the integer part of dividing the value of this BigNumber by\n`n`.\n\n```ts\nx = new BigNumber(5)\ny = new BigNumber(3)\nx.idiv(y)                       // '1'\nx.idiv(0.7)                     // '7'\nx.idiv('0.f', 16)               // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"idiv",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},exponentiatedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber exponentiated by `n`, i.e.\nraised to the power `n`, and optionally modulo a modulus `m`.\n\nIf `n` is negative the result is rounded according to the current `DECIMAL_PLACES` and\n`ROUNDING_MODE` settings.\n\nAs the number of digits of the result of the power operation can grow so large so quickly,\ne.g. 123.456**10000 has over 50000 digits, the number of significant digits calculated is\nlimited to the value of the `POW_PRECISION` setting (unless a modulus `m` is specified).\n\nBy default `POW_PRECISION` is set to 0. This means that an unlimited number of significant\ndigits will be calculated, and that the method's performance will decrease dramatically for\nlarger exponents.\n\nIf `m` is specified and the value of `m`, `n` and this BigNumber are integers and `n` is\npositive, then a fast modular exponentiation algorithm is used, otherwise the operation will\nbe performed as `x.exponentiatedBy(n).modulo(m)` with a `POW_PRECISION` of 0.\n\nThrows if `n` is not an integer.\n\n```ts\nMath.pow(0.7, 2)                    // 0.48999999999999994\nx = new BigNumber(0.7)\nx.exponentiatedBy(2)                // '0.49'\nBigNumber(3).exponentiatedBy(-2)    // '0.11111111111111111111'\n```\n@param n The exponent, an integer.\n@param m The modulus.",name:"exponentiatedBy",required:!0,type:{name:"{ (n: Value, m?: Value | undefined): BigNumber; (n: number, m?: Value | undefined): BigNumber; }"}},pow:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber exponentiated by `n`, i.e.\nraised to the power `n`, and optionally modulo a modulus `m`.\n\nIf `n` is negative the result is rounded according to the current `DECIMAL_PLACES` and\n`ROUNDING_MODE` settings.\n\nAs the number of digits of the result of the power operation can grow so large so quickly,\ne.g. 123.456**10000 has over 50000 digits, the number of significant digits calculated is\nlimited to the value of the `POW_PRECISION` setting (unless a modulus `m` is specified).\n\nBy default `POW_PRECISION` is set to 0. This means that an unlimited number of significant\ndigits will be calculated, and that the method's performance will decrease dramatically for\nlarger exponents.\n\nIf `m` is specified and the value of `m`, `n` and this BigNumber are integers and `n` is\npositive, then a fast modular exponentiation algorithm is used, otherwise the operation will\nbe performed as `x.pow(n).modulo(m)` with a `POW_PRECISION` of 0.\n\nThrows if `n` is not an integer.\n\n```ts\nMath.pow(0.7, 2)                   // 0.48999999999999994\nx = new BigNumber(0.7)\nx.pow(2)                           // '0.49'\nBigNumber(3).pow(-2)               // '0.11111111111111111111'\n```\n@param n The exponent, an integer.\n@param m The modulus.",name:"pow",required:!0,type:{name:"{ (n: Value, m?: Value | undefined): BigNumber; (n: number, m?: Value | undefined): BigNumber; }"}},integerValue:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded to an integer using\nrounding mode `rm`.\n\nIf `rm` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `rm` is invalid.\n\n```ts\nx = new BigNumber(123.456)\nx.integerValue()                        // '123'\nx.integerValue(BigNumber.ROUND_CEIL)    // '124'\ny = new BigNumber(-12.7)\ny.integerValue()                        // '-13'\nx.integerValue(BigNumber.ROUND_DOWN)    // '-12'\n```\n@param rm The roundng mode, an integer, 0 to 8.",name:"integerValue",required:!0,type:{name:"(rm?: RoundingMode | undefined) => BigNumber"}},isEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is equal to the value of `n`, otherwise returns\n`false`.\n\nAs with JavaScript, `NaN` does not equal `NaN`.\n\n```ts\n0 === 1e-324                           // true\nx = new BigNumber(0)\nx.isEqualTo('1e-324')                  // false\nBigNumber(-0).isEqualTo(x)             // true  ( -0 === 0 )\nBigNumber(255).isEqualTo('ff', 16)     // true\n\ny = new BigNumber(NaN)\ny.isEqualTo(NaN)                // false\n```\n@param n A numeric value.\n@param base The base of n.",name:"isEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},eq:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is equal to the value of `n`, otherwise returns\n`false`.\n\nAs with JavaScript, `NaN` does not equal `NaN`.\n\n```ts\n0 === 1e-324                    // true\nx = new BigNumber(0)\nx.eq('1e-324')                  // false\nBigNumber(-0).eq(x)             // true  ( -0 === 0 )\nBigNumber(255).eq('ff', 16)     // true\n\ny = new BigNumber(NaN)\ny.eq(NaN)                       // false\n```\n@param n A numeric value.\n@param base The base of n.",name:"eq",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isFinite:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is a finite number, otherwise returns `false`.\n\nThe only possible non-finite values of a BigNumber are `NaN`, `Infinity` and `-Infinity`.\n\n```ts\nx = new BigNumber(1)\nx.isFinite()                    // true\ny = new BigNumber(Infinity)\ny.isFinite()                    // false\n```",name:"isFinite",required:!0,type:{name:"() => boolean"}},isGreaterThan:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than the value of `n`, otherwise\nreturns `false`.\n\n```ts\n0.1 > (0.3 - 0.2)                             // true\nx = new BigNumber(0.1)\nx.isGreaterThan(BigNumber(0.3).minus(0.2))    // false\nBigNumber(0).isGreaterThan(x)                 // false\nBigNumber(11, 3).isGreaterThan(11.1, 2)       // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isGreaterThan",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},gt:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than the value of `n`, otherwise\nreturns `false`.\n\n```ts\n0.1 > (0.3 - 0                     // true\nx = new BigNumber(0.1)\nx.gt(BigNumber(0.3).minus(0.2))    // false\nBigNumber(0).gt(x)                 // false\nBigNumber(11, 3).gt(11.1, 2)       // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"gt",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isGreaterThanOrEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n(0.3 - 0.2) >= 0.1                                  // false\nx = new BigNumber(0.3).minus(0.2)\nx.isGreaterThanOrEqualTo(0.1)                       // true\nBigNumber(1).isGreaterThanOrEqualTo(x)              // true\nBigNumber(10, 18).isGreaterThanOrEqualTo('i', 36)   // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isGreaterThanOrEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},gte:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n(0.3 - 0.2) >= 0.1                    // false\nx = new BigNumber(0.3).minus(0.2)\nx.gte(0.1)                            // true\nBigNumber(1).gte(x)                   // true\nBigNumber(10, 18).gte('i', 36)        // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"gte",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isInteger:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is an integer, otherwise returns `false`.\n\n```ts\nx = new BigNumber(1)\nx.isInteger()                   // true\ny = new BigNumber(123.456)\ny.isInteger()                   // false\n```",name:"isInteger",required:!0,type:{name:"() => boolean"}},isLessThan:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than the value of `n`, otherwise returns\n`false`.\n\n```ts\n(0.3 - 0.2) < 0.1                       // true\nx = new BigNumber(0.3).minus(0.2)\nx.isLessThan(0.1)                       // false\nBigNumber(0).isLessThan(x)              // true\nBigNumber(11.1, 2).isLessThan(11, 3)    // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isLessThan",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},lt:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than the value of `n`, otherwise returns\n`false`.\n\n```ts\n(0.3 - 0.2) < 0.1                       // true\nx = new BigNumber(0.3).minus(0.2)\nx.lt(0.1)                               // false\nBigNumber(0).lt(x)                      // true\nBigNumber(11.1, 2).lt(11, 3)            // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"lt",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isLessThanOrEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n0.1 <= (0.3 - 0.2)                                 // false\nx = new BigNumber(0.1)\nx.isLessThanOrEqualTo(BigNumber(0.3).minus(0.2))   // true\nBigNumber(-1).isLessThanOrEqualTo(x)               // true\nBigNumber(10, 18).isLessThanOrEqualTo('i', 36)     // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isLessThanOrEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},lte:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n0.1 <= (0.3 - 0.2)                  // false\nx = new BigNumber(0.1)\nx.lte(BigNumber(0.3).minus(0.2))    // true\nBigNumber(-1).lte(x)                // true\nBigNumber(10, 18).lte('i', 36)      // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"lte",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isNaN:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is `NaN`, otherwise returns `false`.\n\n```ts\nx = new BigNumber(NaN)\nx.isNaN()                       // true\ny = new BigNumber('Infinity')\ny.isNaN()                       // false\n```",name:"isNaN",required:!0,type:{name:"() => boolean"}},isNegative:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is negative, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isNegative()                  // true\ny = new BigNumber(2)\ny.isNegative()                  // false\n```",name:"isNegative",required:!0,type:{name:"() => boolean"}},isPositive:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is positive, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isPositive()                  // false\ny = new BigNumber(2)\ny.isPositive()                  // true\n```",name:"isPositive",required:!0,type:{name:"() => boolean"}},isZero:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is zero or minus zero, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isZero()                 // true\n```",name:"isZero",required:!0,type:{name:"() => boolean"}},minus:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber minus `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.3 - 0.1                       // 0.19999999999999998\nx = new BigNumber(0.3)\nx.minus(0.1)                    // '0.2'\nx.minus(0.6, 20)                // '0'\n```\n@param n A numeric value.\n@param base The base of n.",name:"minus",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},modulo:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber modulo `n`, i.e. the integer\nremainder of dividing this BigNumber by `n`.\n\nThe value returned, and in particular its sign, is dependent on the value of the `MODULO_MODE`\nsetting of this BigNumber constructor. If it is 1 (default value), the result will have the\nsame sign as this BigNumber, and it will match that of Javascript's `%` operator (within the\nlimits of double precision) and BigDecimal's `remainder` method.\n\nThe return value is always exact and unrounded.\n\nSee `MODULO_MODE` for a description of the other modulo modes.\n\n```ts\n1 % 0.9                         // 0.09999999999999998\nx = new BigNumber(1)\nx.modulo(0.9)                   // '0.1'\ny = new BigNumber(33)\ny.modulo('a', 33)               // '3'\n```\n@param n A numeric value.\n@param base The base of n.",name:"modulo",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},mod:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber modulo `n`, i.e. the integer\nremainder of dividing this BigNumber by `n`.\n\nThe value returned, and in particular its sign, is dependent on the value of the `MODULO_MODE`\nsetting of this BigNumber constructor. If it is 1 (default value), the result will have the\nsame sign as this BigNumber, and it will match that of Javascript's `%` operator (within the\nlimits of double precision) and BigDecimal's `remainder` method.\n\nThe return value is always exact and unrounded.\n\nSee `MODULO_MODE` for a description of the other modulo modes.\n\n```ts\n1 % 0.9                      // 0.09999999999999998\nx = new BigNumber(1)\nx.mod(0.9)                   // '0.1'\ny = new BigNumber(33)\ny.mod('a', 33)               // '3'\n```\n@param n A numeric value.\n@param base The base of n.",name:"mod",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},multipliedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber multiplied by `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.6 * 3                                // 1.7999999999999998\nx = new BigNumber(0.6)\ny = x.multipliedBy(3)                  // '1.8'\nBigNumber('7e+500').multipliedBy(y)    // '1.26e+501'\nx.multipliedBy('-a', 16)               // '-6'\n```\n@param n A numeric value.\n@param base The base of n.",name:"multipliedBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},times:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber multiplied by `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.6 * 3                         // 1.7999999999999998\nx = new BigNumber(0.6)\ny = x.times(3)                  // '1.8'\nBigNumber('7e+500').times(y)    // '1.26e+501'\nx.times('-a', 16)               // '-6'\n```\n@param n A numeric value.\n@param base The base of n.",name:"times",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},negated:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber negated, i.e. multiplied by -1.\n\n```ts\nx = new BigNumber(1.8)\nx.negated()                     // '-1.8'\ny = new BigNumber(-1.3)\ny.negated()                     // '1.3'\n```",name:"negated",required:!0,type:{name:"() => BigNumber"}},plus:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber plus `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.1 + 0.2                       // 0.30000000000000004\nx = new BigNumber(0.1)\ny = x.plus(0.2)                 // '0.3'\nBigNumber(0.7).plus(x).plus(y)  // '1.1'\nx.plus('0.1', 8)                // '0.225'\n```\n@param n A numeric value.\n@param base The base of n.",name:"plus",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},precision:{defaultValue:null,description:"Returns the number of significant digits of the value of this BigNumber, or `null` if the value\nof this BigNumber is ±`Infinity` or `NaN`.\n\nIf `includeZeros` is true then any trailing zeros of the integer part of the value of this\nBigNumber are counted as significant digits, otherwise they are not.\n\nThrows if `includeZeros` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.precision()                         // 9\ny = new BigNumber(987000)\ny.precision(false)                    // 3\ny.precision(true)                     // 6\n```\nReturns a BigNumber whose value is the value of this BigNumber rounded to a precision of\n`significantDigits` significant digits using rounding mode `roundingMode`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` will be used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.precision(6)                         // '9876.54'\nx.precision(6, BigNumber.ROUND_UP)     // '9876.55'\nx.precision(2)                         // '9900'\nx.precision(2, 1)                      // '9800'\nx                                      // '9876.54321'\n```\n@param includeZeros Whether to include integer trailing zeros in the significant digit count.\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"precision",required:!0,type:{name:"{ (includeZeros?: boolean | undefined): number; (significantDigits: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},sd:{defaultValue:null,description:"Returns the number of significant digits of the value of this BigNumber,\nor `null` if the value of this BigNumber is ±`Infinity` or `NaN`.\n\nIf `includeZeros` is true then any trailing zeros of the integer part of\nthe value of this BigNumber are counted as significant digits, otherwise\nthey are not.\n\nThrows if `includeZeros` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.sd()                         // 9\ny = new BigNumber(987000)\ny.sd(false)                    // 3\ny.sd(true)                     // 6\n```\nReturns a BigNumber whose value is the value of this BigNumber rounded to a precision of\n`significantDigits` significant digits using rounding mode `roundingMode`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` will be used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.sd(6)                           // '9876.54'\nx.sd(6, BigNumber.ROUND_UP)       // '9876.55'\nx.sd(2)                           // '9900'\nx.sd(2, 1)                        // '9800'\nx                                 // '9876.54321'\n```\n@param includeZeros Whether to include integer trailing zeros in the significant digit count.\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"sd",required:!0,type:{name:"{ (includeZeros?: boolean | undefined): number; (significantDigits: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},shiftedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber shifted by `n` places.\n\nThe shift is of the decimal point, i.e. of powers of ten, and is to the left if `n` is negative\nor to the right if `n` is positive.\n\nThe return value is always exact and unrounded.\n\nThrows if `n` is invalid.\n\n```ts\nx = new BigNumber(1.23)\nx.shiftedBy(3)                      // '1230'\nx.shiftedBy(-3)                     // '0.00123'\n```\n@param n The shift value, integer, -9007199254740991 to 9007199254740991.",name:"shiftedBy",required:!0,type:{name:"(n: number) => BigNumber"}},squareRoot:{defaultValue:null,description:"Returns a BigNumber whose value is the square root of the value of this BigNumber, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\nThe return value will be correctly rounded, i.e. rounded as if the result was first calculated\nto an infinite number of correct digits before rounding.\n\n```ts\nx = new BigNumber(16)\nx.squareRoot()                  // '4'\ny = new BigNumber(3)\ny.squareRoot()                  // '1.73205080756887729353'\n```",name:"squareRoot",required:!0,type:{name:"() => BigNumber"}},sqrt:{defaultValue:null,description:"Returns a BigNumber whose value is the square root of the value of this BigNumber, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\nThe return value will be correctly rounded, i.e. rounded as if the result was first calculated\nto an infinite number of correct digits before rounding.\n\n```ts\nx = new BigNumber(16)\nx.sqrt()                  // '4'\ny = new BigNumber(3)\ny.sqrt()                  // '1.73205080756887729353'\n```",name:"sqrt",required:!0,type:{name:"() => BigNumber"}},toExponential:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in exponential notation rounded using\nrounding mode `roundingMode` to `decimalPlaces` decimal places, i.e with one digit before the\ndecimal point and `decimalPlaces` digits after it.\n\nIf the value of this BigNumber in exponential notation has fewer than `decimalPlaces` fraction\ndigits, the return value will be appended with zeros accordingly.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the number of digits after the\ndecimal point defaults to the minimum number of digits necessary to represent the value\nexactly.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = 45.6\ny = new BigNumber(x)\nx.toExponential()               // '4.56e+1'\ny.toExponential()               // '4.56e+1'\nx.toExponential(0)              // '5e+1'\ny.toExponential(0)              // '5e+1'\nx.toExponential(1)              // '4.6e+1'\ny.toExponential(1)              // '4.6e+1'\ny.toExponential(1, 1)           // '4.5e+1'  (ROUND_DOWN)\nx.toExponential(3)              // '4.560e+1'\ny.toExponential(3)              // '4.560e+1'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"toExponential",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}},toFixed:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in normal (fixed-point) notation\nrounded to `decimalPlaces` decimal places using rounding mode `roundingMode`.\n\nIf the value of this BigNumber in normal notation has fewer than `decimalPlaces` fraction\ndigits, the return value will be appended with zeros accordingly.\n\nUnlike `Number.prototype.toFixed`, which returns exponential notation if a number is greater or\nequal to 10**21, this method will always return normal notation.\n\nIf `decimalPlaces` is omitted or is `null` or `undefined`, the return value will be unrounded\nand in normal notation. This is also unlike `Number.prototype.toFixed`, which returns the value\nto zero decimal places. It is useful when normal notation is required and the current\n`EXPONENTIAL_AT` setting causes `toString` to return exponential notation.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = 3.456\ny = new BigNumber(x)\nx.toFixed()                     // '3'\ny.toFixed()                     // '3.456'\ny.toFixed(0)                    // '3'\nx.toFixed(2)                    // '3.46'\ny.toFixed(2)                    // '3.46'\ny.toFixed(2, 1)                 // '3.45'  (ROUND_DOWN)\nx.toFixed(5)                    // '3.45600'\ny.toFixed(5)                    // '3.45600'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"toFixed",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}},toFormat:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in normal (fixed-point) notation\nrounded to `decimalPlaces` decimal places using rounding mode `roundingMode`, and formatted\naccording to the properties of the `format` or `FORMAT` object.\n\nThe formatting object may contain some or all of the properties shown in the examples below.\n\nIf `decimalPlaces` is omitted or is `null` or `undefined`, then the return value is not\nrounded to a fixed number of decimal places.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nIf `format` is omitted or is `null` or `undefined`, `FORMAT` is used.\n\nThrows if `decimalPlaces`, `roundingMode`, or `format` is invalid.\n\n```ts\nfmt = {\n  decimalSeparator: '.',\n  groupSeparator: ',',\n  groupSize: 3,\n  secondaryGroupSize: 0,\n  fractionGroupSeparator: ' ',\n  fractionGroupSize: 0\n}\n\nx = new BigNumber('123456789.123456789')\n\n// Set the global formatting options\nBigNumber.config({ FORMAT: fmt })\n\nx.toFormat()                              // '123,456,789.123456789'\nx.toFormat(3)                             // '123,456,789.123'\n\n// If a reference to the object assigned to FORMAT has been retained,\n// the format properties can be changed directly\nfmt.groupSeparator = ' '\nfmt.fractionGroupSize = 5\nx.toFormat()                              // '123 456 789.12345 6789'\n\n// Alternatively, pass the formatting options as an argument\nfmt = {\n  decimalSeparator: ',',\n  groupSeparator: '.',\n  groupSize: 3,\n  secondaryGroupSize: 2\n}\n\nx.toFormat()                              // '123 456 789.12345 6789'\nx.toFormat(fmt)                           // '12.34.56.789,123456789'\nx.toFormat(2, fmt)                        // '12.34.56.789,12'\nx.toFormat(3, BigNumber.ROUND_UP, fmt)    // '12.34.56.789,124'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.\n@param format Formatting options object. See `BigNumber.Format`.",name:"toFormat",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode: RoundingMode, format?: Format | undefined): string; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (decimalPlaces?: number | undefined): string; (decimalPlaces: number, format: Format): string; (format: Format): string; }"}},toFraction:{defaultValue:null,description:"Returns an array of two BigNumbers representing the value of this BigNumber as a simple\nfraction with an integer numerator and an integer denominator.\nThe denominator will be a positive non-zero value less than or equal to `max_denominator`.\nIf a maximum denominator, `max_denominator`, is not specified, or is `null` or `undefined`, the\ndenominator will be the lowest value necessary to represent the number exactly.\n\nThrows if `max_denominator` is invalid.\n\n```ts\nx = new BigNumber(1.75)\nx.toFraction()                  // '7, 4'\n\npi = new BigNumber('3.14159265358')\npi.toFraction()                 // '157079632679,50000000000'\npi.toFraction(100000)           // '312689, 99532'\npi.toFraction(10000)            // '355, 113'\npi.toFraction(100)              // '311, 99'\npi.toFraction(10)               // '22, 7'\npi.toFraction(1)                // '3, 1'\n```\n@param max_denominator The maximum denominator, integer > 0, or Infinity.",name:"toFraction",required:!0,type:{name:"(max_denominator?: Value | undefined) => [BigNumber, BigNumber]"}},toJSON:{defaultValue:null,description:"As `valueOf`.",name:"toJSON",required:!0,type:{name:"() => string"}},toNumber:{defaultValue:null,description:"Returns the value of this BigNumber as a JavaScript primitive number.\n\nUsing the unary plus operator gives the same result.\n\n```ts\nx = new BigNumber(456.789)\nx.toNumber()                    // 456.789\n+x                              // 456.789\n\ny = new BigNumber('45987349857634085409857349856430985')\ny.toNumber()                    // 4.598734985763409e+34\n\nz = new BigNumber(-0)\n1 / z.toNumber()                // -Infinity\n1 / +z                          // -Infinity\n```",name:"toNumber",required:!0,type:{name:"() => number"}},toPrecision:{defaultValue:null,description:"Returns a string representing the value of this BigNumber rounded to `significantDigits`\nsignificant digits using rounding mode `roundingMode`.\n\nIf `significantDigits` is less than the number of digits necessary to represent the integer\npart of the value in normal (fixed-point) notation, then exponential notation is used.\n\nIf `significantDigits` is omitted, or is `null` or `undefined`, then the return value is the\nsame as `n.toString()`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = 45.6\ny = new BigNumber(x)\nx.toPrecision()                 // '45.6'\ny.toPrecision()                 // '45.6'\nx.toPrecision(1)                // '5e+1'\ny.toPrecision(1)                // '5e+1'\ny.toPrecision(2, 0)             // '4.6e+1'  (ROUND_UP)\ny.toPrecision(2, 1)             // '4.5e+1'  (ROUND_DOWN)\nx.toPrecision(5)                // '45.600'\ny.toPrecision(5)                // '45.600'\n```\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer 0 to 8.",name:"toPrecision",required:!0,type:{name:"{ (significantDigits: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/hooks/math/useToPrecision.tsx#useToPrecision18"]={docgenInfo:useToPrecision18.__docgenInfo,name:"useToPrecision18",path:"src/hooks/math/useToPrecision.tsx#useToPrecision18"})}catch(__react_docgen_typescript_loader_error){}},"./src/index.scss":function(module,exports,__webpack_require__){},"./src/misc/Colors.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Colors",(function(){return Colors}));var _Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),_colors_module_scss__WEBPACK_IMPORTED_MODULE_2__=(__webpack_require__("./src/misc/shared.scss"),__webpack_require__("./src/misc/colors.module.scss")),_colors_module_scss__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_colors_module_scss__WEBPACK_IMPORTED_MODULE_2__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js"),Color=function Color(_ref){var color=_ref.color;return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{className:"row justify-content-center text-center",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{style:{width:"150px",height:"150px",marginTop:"24px",marginBottom:"8px"},className:"bg-".concat(color)}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("p",{children:color})]})},ColorGrid=function ColorGrid(){var colors=_colors_module_scss__WEBPACK_IMPORTED_MODULE_2___default.a.colors.replace("[","").replace("]","").split(" ");return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"container",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"row",children:colors.map((function(color,i){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"col-2 justify-content-center align-content-center",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(Color,{color:color})},i)}))})})};__webpack_exports__.default={component:ColorGrid,title:"Shared/Colors"};var Colors=function Colors(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(ColorGrid,{})};Colors.parameters=Object(_Users_runner_work_basilisk_ui_basilisk_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)({storySource:{source:"() => <ColorGrid/>"}},Colors.parameters)},"./src/misc/StorybookWrapper.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return StorybookWrapper_StorybookWrapper}));var Locale,provider=__webpack_require__("./node_modules/react-intl/lib/src/components/provider.js");!function(Locale){Locale.EN="en"}(Locale||(Locale={}));__webpack_require__("./src/index.scss"),__webpack_require__("./src/misc/shared.scss"),__webpack_require__("./node_modules/typeface-roboto/index.css");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),StorybookWrapper_StorybookWrapper=function StorybookWrapper(_ref){var children=_ref.children;return Object(jsx_runtime.jsx)(provider.a,{messages:{},locale:Locale.EN,defaultLocale:"en",children:children})};try{StorybookWrapper_StorybookWrapper.displayName="StorybookWrapper",StorybookWrapper_StorybookWrapper.__docgenInfo={description:"",displayName:"StorybookWrapper",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/misc/StorybookWrapper.tsx#StorybookWrapper"]={docgenInfo:StorybookWrapper_StorybookWrapper.__docgenInfo,name:"StorybookWrapper",path:"src/misc/StorybookWrapper.tsx#StorybookWrapper"})}catch(__react_docgen_typescript_loader_error){}},"./src/misc/colors.module.scss":function(module,exports,__webpack_require__){module.exports={colors:"[gray-1 gray-2 gray-3 gray-4 green-1 orange-1 white-1 pink-1 red-1]",gray2Opacity0:"rgba(33,31,36,0)",red1:"#fa4b4b",red1Opacity70:"rgba(250,75,75,.7)",green1:"#4fffb0",green1Opacity70:"rgba(79,255,176,.7)",green1Opacity33:"rgba(79,255,176,.33)",orange1:"#ff931e",orange1Opacity70:"rgba(255,147,30,.7)",gray1:"#424250",gray2:"#211f24","text-gray-1":"colors_text-gray-1__3TTbl","bg-gray-1":"colors_bg-gray-1__3B41E","text-gray-2":"colors_text-gray-2__1G_IG","bg-gray-2":"colors_bg-gray-2__263nl","text-gray-3":"colors_text-gray-3__2jCKs","bg-gray-3":"colors_bg-gray-3__1WAlP","text-gray-4":"colors_text-gray-4__1eu3P","bg-gray-4":"colors_bg-gray-4__1_1jM","text-green-1":"colors_text-green-1__7R05J","bg-green-1":"colors_bg-green-1__1zpiW","text-orange-1":"colors_text-orange-1__h8GD4","bg-orange-1":"colors_bg-orange-1__3oWkA","text-white-1":"colors_text-white-1__2Ym0e","bg-white-1":"colors_bg-white-1__391eO","text-pink-1":"colors_text-pink-1__qlAYy","bg-pink-1":"colors_bg-pink-1__1Kdyk","text-red-1":"colors_text-red-1__2ABfo","bg-red-1":"colors_bg-red-1__d2Vg9"}},"./src/misc/icons/assets/ETH.svg":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_exports__.a=__webpack_require__.p+"static/media/ETH.9270fc02.svg"},"./src/misc/shared.scss":function(module,exports,__webpack_require__){},"./src/pages/TradePage_old.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));var objectSpread2=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),StorybookWrapper=__webpack_require__("./src/misc/StorybookWrapper.tsx"),slicedToArray=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),lodash=__webpack_require__("./node_modules/lodash/lodash.js"),react=__webpack_require__("./node_modules/react/index.js"),shared=__webpack_require__("./src/components/Chart/shared.tsx"),TradeChart=__webpack_require__("./src/components/Chart/TradeChart/TradeChart.tsx"),TradeForm_old=__webpack_require__("./src/components/Trade/TradeForm_old.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),TradePage_old_TradePage=function TradePage(_ref){var assetPair=_ref.assetPair,_useState=Object(react.useState)(assetPair),_useState2=Object(slicedToArray.a)(_useState,2),_assetPair=_useState2[0],setAssetPair=_useState2[1];Object(react.useEffect)((function(){setAssetPair(assetPair)}),[assetPair]);var poolType=shared.c.XYK,chartType=shared.b.PRICE,granularity=shared.a.H1,now=Date.now(),primaryDataset=Object(react.useMemo)((function(){return Object(lodash.times)(60).map((function(i){return{x:now+1e5*i,y:Object(lodash.random)(3e3,3100)/("BSX"===assetPair.assetA.symbol?2:1)}}))}),[assetPair]);return Object(jsx_runtime.jsx)("div",{className:"container",children:Object(jsx_runtime.jsxs)("div",{className:"row g-0",children:[Object(jsx_runtime.jsx)("div",{className:"col-8",children:Object(jsx_runtime.jsx)(TradeChart.a,{assetPair:_assetPair,poolType:poolType,granularity:granularity,chartType:chartType,primaryDataset:primaryDataset,onChartTypeChange:function onChartTypeChange(){},onGranularityChange:function onGranularityChange(){}})}),Object(jsx_runtime.jsx)("div",{className:"col-4",children:Object(jsx_runtime.jsx)(TradeForm_old.a,{assetPair:_assetPair,onAssetPairSwitch:function handleAssetPairSwitch(){setAssetPair({assetA:_assetPair.assetB,assetB:_assetPair.assetA})},spotPrice:.5})})]})})};try{TradePage_old_TradePage.displayName="TradePage",TradePage_old_TradePage.__docgenInfo={description:"",displayName:"TradePage",props:{assetPair:{defaultValue:null,description:"",name:"assetPair",required:!0,type:{name:"AssetPair"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/pages/TradePage_old.tsx#TradePage"]={docgenInfo:TradePage_old_TradePage.__docgenInfo,name:"TradePage",path:"src/pages/TradePage_old.tsx#TradePage"})}catch(__react_docgen_typescript_loader_error){}var ETH=__webpack_require__("./src/misc/icons/assets/ETH.svg"),KSM=__webpack_require__.p+"static/media/KSM.533a90cd.svg",Default=(__webpack_exports__.default={title:"Pages/Trade/TradePage",component:TradePage_old_TradePage,args:{assetPair:{assetA:{symbol:"BSX",fullName:"Basilisk",icon:ETH.a},assetB:{symbol:"KSM",fullName:"Kusama",icon:KSM}}},parameters:{layout:"fullscreen"}},function Template(args){return Object(jsx_runtime.jsx)(StorybookWrapper.a,{children:Object(jsx_runtime.jsx)("div",{style:{background:"linear-gradient(90deg, rgba(66,66,80,1) 61%, rgba(55,55,65,1) 100%)",paddingTop:"64px",paddingBottom:"64px",height:"100vh"},children:Object(jsx_runtime.jsx)(TradePage_old_TradePage,Object(objectSpread2.a)({},args))})})}.bind({}));Default.parameters=Object(objectSpread2.a)({storySource:{source:"(args: any) => {\n    return <StorybookWrapper>\n        <div style={{\n            background: 'linear-gradient(90deg, rgba(66,66,80,1) 61%, rgba(55,55,65,1) 100%)',\n            paddingTop: '64px',\n            paddingBottom: '64px',\n            height: '100vh'\n        }}>\n            <TradePage {...args}/>\n        </div>\n    </StorybookWrapper>\n}"}},Default.parameters);try{Default.displayName="Default",Default.__docgenInfo={description:"",displayName:"Default",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/pages/TradePage_old.stories.tsx#Default"]={docgenInfo:Default.__docgenInfo,name:"Default",path:"src/pages/TradePage_old.stories.tsx#Default"})}catch(__react_docgen_typescript_loader_error){}},"./storybook-init-framework-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js")},0:function(module,exports,__webpack_require__){__webpack_require__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_require__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_require__("./storybook-init-framework-entry.js"),__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/common/config.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/react/config.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/react/dist/esm/client/preview/config-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-links/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/preset/addArgs.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-backgrounds/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-backgrounds/dist/esm/preset/addParameter.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-measure/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-outline/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./.storybook/preview.js-generated-config-entry.js"),module.exports=__webpack_require__("./generated-stories-entry.js")},1:function(module,exports){}},[[0,5,6]]]);