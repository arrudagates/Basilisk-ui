(this["webpackJsonpbasilisk-ui"]=this["webpackJsonpbasilisk-ui"]||[]).push([[0],{152:function(e,n){},196:function(e,n,t){},210:function(e,n){},214:function(e,n){},218:function(e,n,t){},219:function(e,n,t){},220:function(e,n,t){},237:function(e,n){},248:function(e,n,t){},249:function(e,n,t){},250:function(e,n,t){},251:function(e,n,t){"use strict";t.r(n);var i=t(1),a=t(75),s=t.n(a),l=(t(196),t(288)),d=t(292),o=t(253),c=t(9),r=t.n(c),u=t(76);const m={id:void 0},v=Object(u.a)("basilisk-active-account"),p=()=>v(m),k=()=>{const e=(()=>{const[,e]=p();return Object(i.useCallback)((async(n,t)=>(e({id:t}),await new Promise((e=>setTimeout(e,0))),!0)),[e])})();return b(Object(i.useCallback)((async(n,t,i)=>{let{client:a}=i;return e(a,t.id)}),[e]),"setActiveAccount")},b=(e,n)=>{const t=Object(i.useRef)(e);return Object(i.useEffect)((()=>{t.current=e}),[e]),function(){return r.a.debug("Running resolver",n),t.current.apply(void 0,arguments)}};var y=t(15),g=t(293),N=t(291),f=t(42),j={tokens:{AccountData:"OrmlAccountData"}},O=[{AssetPair:{asset_in:"AssetId",asset_out:"AssetId"},Amount:"i128",AmountOf:"Amount",Address:"AccountId",OrmlAccountData:{free:"Balance",frozen:"Balance",reserved:"Balance"},Fee:{numerator:"u32",denominator:"u32"},BalanceInfo:{amount:"Balance",assetId:"AssetId"},Chain:{genesisHash:"Vec<u8>",lastBlockHash:"Vec<u8>"},Currency:"AssetId",CurrencyId:"AssetId",CurrencyIdOf:"AssetId",Intention:{who:"AccountId",asset_sell:"AssetId",asset_buy:"AssetId",amount:"Balance",discount:"bool",sell_or_buy:"IntentionType"},IntentionId:"Hash",IntentionType:{_enum:["SELL","BUY"]},LookupSource:"AccountId",Price:"Balance",ClassId:"u64",TokenId:"u64",ClassData:{is_pool:"bool"},TokenData:{locked:"bool"},ClassInfo:{metadata:"Vec<u8>",total_issuance:"TokenId",owner:"AccountId",data:"ClassData"},TokenInfo:{metadata:"Vec<u8>",owner:"AccountId",data:"TokenData"},ClassInfoOf:"ClassInfo",TokenInfoOf:"TokenInfo",ClassIdOf:"ClassId",TokenIdOf:"TokenId",OrderedSet:"Vec<AssetId>",VestingSchedule:{start:"BlockNumber",period:"BlockNumber",period_count:"u32",per_period:"Compact<Balance>"},VestingScheduleOf:"VestingSchedule",LBPWeight:"u32",WeightCurveType:{_enum:["Linear"]},PoolId:"AccountId",BalanceOf:"Balance",AssetType:{_enum:{Token:"Null",PoolShare:"(AssetId,AssetId)"}},Pool:{owner:"AccountId",start:"BlockNumber",end:"BlockNumber",assets:"AssetPair",initial_weight:"LBPWeight",final_weight:"LBPWeight",weight_curve:"WeightCurveType",fee:"Fee",fee_collector:"AccountId"},AssetDetails:{name:"Vec<u8>",asset_type:"AssetType",existential_deposit:"Balance",locked:"bool"},AssetDetailsT:"AssetDetails",AssetMetadata:{symbol:"Vec<u8>",decimals:"u8"},AssetInstance:"AssetInstanceV1",MultiLocation:"MultiLocationV1",AssetNativeLocation:"MultiLocation",MultiAsset:"MultiAssetV1",Xcm:"XcmV1",XcmOrder:"XcmOrderV1"}];const h={nodeUrl:"ws://localhost:9988",processorUrl:"/graphql",appName:"Basilisk UI"},I=Object(u.a)("basilisk-config"),S=()=>I(h);var A=t(97);const x={description:"Get pool account id by asset IDs",params:[{name:"assetInId",type:"u32"},{name:"assetOutId",type:"u32"}],type:"AccountId"},T={xyk:{getPoolAccount:x},lbp:{getPoolAccount:x}},[w,B]=Object(f.a)((()=>{const[{nodeUrl:e}]=S(),[n,t]=Object(i.useState)(void 0),a=Object(i.useMemo)((()=>!n),[n]),s=Object(i.useMemo)((()=>new g.a(e)),[e]),l=Object(i.useMemo)((()=>({...O[0],...A.types})),[]),d=Object(i.useMemo)((()=>({...j,...A.typesAlias})),[]);return Object(i.useEffect)((()=>((async()=>{t(void 0);const e=await N.a.create({provider:s,types:l,typesAlias:d,rpc:T});await e.isReady,t(e)})(),()=>{null===n||void 0===n||n.disconnect()})),[s,n,l,d]),{apiInstance:n,loading:a}})),C=()=>{const{apiInstance:e,loading:n}=B();return Object(i.useCallback)((async(n,t)=>{if(e&&n)return await(async(e,n,t)=>{var i;const a=[];if(!t||Object(y.includes)(t,"0")){const t=await e.query.system.account(n);a.push({assetId:"0",balance:null===t||void 0===t?void 0:t.data.free.toString()})}const s=(t=t?t.filter((e=>"0"!==e)):t)?(await e.query.tokens.accounts.multi(null===(i=t)||void 0===i?void 0:i.map((e=>[n,e])))).map(((e,n)=>({assetId:t[n],balance:e}))):(await e.query.tokens.accounts.entries(n)).map((e=>{let[n,t]=e;return{assetId:n.toHuman()[1],balance:t}}));return null===s||void 0===s||s.forEach((n=>{const t=null===e||void 0===e?void 0:e.createType("AccountData",n.balance).free.toString();a.push({assetId:n.assetId,balance:t})})),a})(e,n,t)}),[e,n])},F=()=>{const e=C();return{balances:b(Object(i.useCallback)((async(n,t)=>{var i;let a;return"LBPPool"!==n.__typename&&"XYKPool"!==n.__typename||(a=[(n=n).assetInId,n.assetOutId]),null===(i=await e(n.id,a))||void 0===i?void 0:i.map((e=>({...e,__typename:"Balance",id:"".concat(n.id,"-").concat(e.assetId)})))}),[e]),"balances")}};var P=t(19),D=t(281),_=t(160);const E=()=>{const e=Object(i.useCallback)((async()=>(await Object(P.web3Enable)("basilisk-ui"),(await Object(P.web3Accounts)()).map((e=>({id:Object(D.a)(Object(_.a)(e.address),10041),name:e.meta.name,balances:[]}))))),[]);return{accounts:b(Object(i.useCallback)((async n=>{const t=await e();return t?t.map((e=>({...e,__typename:"Account"}))):null}),[e]),"accounts")}};var V=t(283);const L={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GetAccounts"},variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"lastBlock"},arguments:[],directives:[{kind:"Directive",name:{kind:"Name",value:"client"},arguments:[]}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"parachainBlockNumber"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"relaychainBlockNumber"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"accounts"},arguments:[],directives:[{kind:"Directive",name:{kind:"Name",value:"client"},arguments:[]}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"balances"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"assetId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"balance"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:190,source:{body:"query GetAccounts {\n  lastBlock @client {\n    parachainBlockNumber\n    relaychainBlockNumber\n  }\n\n  accounts @client {\n    id\n    name\n    balances {\n      assetId\n      balance\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}}}},q=()=>Object(V.a)(L,{notifyOnNetworkStatusChange:!0}),M="Vec<BalanceLock>",W=async(e,n,t)=>{const i=Object(y.find)(e.createType(M,await e.query.balances.locks(n)),(e=>e.id.eq(t))),a=(await e.query.tokens.locks.entries(n)).map((e=>{var n;let[t,i]=e;const a=i.toJSON()[0];return{id:null===a||void 0===a?void 0:a.id,amount:null===a||void 0===a||null===(n=a.amount)||void 0===n?void 0:n.toString()}})),s=Object(y.find)(a,(e=>(null===e||void 0===e?void 0:e.id)===t));return i||s},Q=()=>{const e=(()=>{const{apiInstance:e,loading:n}=B();return Object(i.useCallback)((async n=>{var t;if(!e||!n)return;const i=Object(y.first)(e.createType("Vec<VestingScheduleOf>",await e.query.vesting.vestingSchedules(n))),a=await W(e,n,"ormlvest");return{remainingVestingAmount:null===a||void 0===a||null===(t=a.amount)||void 0===t?void 0:t.toString(),start:null===i||void 0===i?void 0:i.start.toString(),period:null===i||void 0===i?void 0:i.period.toString(),periodCount:null===i||void 0===i?void 0:i.periodCount.toString(),perPeriod:null===i||void 0===i?void 0:i.perPeriod.toString()}}),[e,n])})();return{vestingSchedule:b(Object(i.useCallback)((async n=>await e(n.id)),[e]),"vestingSchedule")}},R=()=>({Query:{...E(),...(()=>{const[e]=p();return{selectedAccount:b(Object(i.useCallback)((async(n,t,i)=>{let{client:a}=i;if(null===e||void 0===e?void 0:e.id){const{data:n}=await a.query({query:L,notifyOnNetworkStatusChange:!0});return s=Object(y.find)(null===n||void 0===n?void 0:n.accounts,{id:null===e||void 0===e?void 0:e.id}),{__typename:"Account",...s}}return null;var s}),[e]),"useSelectedAccountQueryResolver")}})()},Accounts:{...F()},SelectedAccount:{...F(),...Q()}});var G=t(132);const H={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GetLastBlock"},variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"lastBlock"},arguments:[],directives:[{kind:"Directive",name:{kind:"Name",value:"client"},arguments:[]}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"parachainBlockNumber"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"relaychainBlockNumber"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:112,source:{body:"query GetLastBlock {\n    lastBlock @client {\n        parachainBlockNumber,\n        relaychainBlockNumber\n    }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}}}},[X,K]=Object(f.a)((()=>{const{apiInstance:e,loading:n}=B(),[t,a]=Object(i.useState)(void 0),s=Object(i.useCallback)((()=>{e&&e.derive.chain.subscribeNewBlocks((async n=>{const t=await e.query.parachainSystem.validationData(),i=e.createType("Option<PolkadotPrimitivesV1PersistedValidationData>",t);if(i.isSome){i.toJSON();a({parachainBlockNumber:n.block.header.number.toString(),relaychainBlockNumber:"821"})}}))}),[e]);return Object(i.useEffect)((()=>{n||s()}),[n,s]),t})),Y="LastBlock",$=Y,U=(e,n)=>e.writeQuery({query:H,data:{lastBlock:n}});var z=t(85);const Z={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GetActiveAccount"},variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"lastBlock"},arguments:[],directives:[{kind:"Directive",name:{kind:"Name",value:"client"},arguments:[]}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"parachainBlockNumber"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"relaychainBlockNumber"},arguments:[],directives:[]}]}},{kind:"Field",alias:{kind:"Name",value:"account"},name:{kind:"Name",value:"accounts"},arguments:[{kind:"Argument",name:{kind:"Name",value:"isActive"},value:{kind:"BooleanValue",value:!0}}],directives:[{kind:"Directive",name:{kind:"Name",value:"client"},arguments:[]}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"balances"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"assetId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"balance"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"vestingSchedule"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"remainingVestingAmount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"start"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"period"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"periodCount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"perPeriod"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:480,source:{body:"# TODO: fetch only balances for the active fee payment asset\nquery GetActiveAccount {\n  lastBlock @client {\n    parachainBlockNumber\n    relaychainBlockNumber\n  }\n\n  account: accounts(isActive: true) @client {\n    id\n    name\n    balances {\n      assetId\n      balance\n    }\n    vestingSchedule {\n      # figure out why this fragment doesnt work\n      # ...VestingScheduleFields,\n      remainingVestingAmount\n      start\n      period\n      periodCount\n      perPeriod\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}}}},[J,ee]=Object(f.a)((()=>{var e,n;const t=Object(z.a)(),a=Object(G.a)(Z,{notifyOnNetworkStatusChange:!0});return Object(i.useEffect)((()=>{t.refetchQueries({})}),[null===(e=a.data)||void 0===e||null===(n=e.account)||void 0===n?void 0:n.id,t]),a})),ne=async(e,n)=>new Promise((async(t,i)=>{try{t(await e(t,i))}catch(a){console.log("graceful error",a),(a=n.reduce(((e,n)=>n(e)),a))?i(a):t(null)}})),te=e=>{if("Cancelled"!==(null===e||void 0===e?void 0:e.message))return e;r.a.error("Operation presumably cancelled by the user in the Polkadot.js extension")},ie=(e,n,t)=>i=>{let{status:a,events:s=[],dispatchError:l}=i;var d;return a.isFinalized&&r.a.info("operation finalized"),s.forEach((e=>{let{event:{data:n,method:t,section:i},phase:a}=e;console.log("event handler",a.toString(),": ".concat(i,".").concat(t),n.toString())})),a.isInBlock?(console.log("is in block",null===(d=a.createdAtHash)||void 0===d?void 0:d.toString()),(null===l||void 0===l?void 0:l.isModule)?r.a.info("operation unsuccessful",t?t.registry.findMetaError(l.asModule):l):r.a.info("operation successful")):a.isBroadcast?(r.a.info("transaction has been broadcast",a.hash.toHuman()),e()):l?(r.a.error("There was a dispatch error",l),n("Dispatch error")):void 0},ae="Polkadot.js is not ready yet",se=()=>{const{apiInstance:e,loading:n}=B();return{claimVestedAmount:b(Object(i.useCallback)((async(t,i,a)=>{var s,l;let{cache:d}=a;const o=(null===i||void 0===i?void 0:i.address)?i.address:null===(s=d.readQuery({query:Z}))||void 0===s||null===(l=s.account)||void 0===l?void 0:l.id;if(!o)throw new Error("No Account selected");if(n||!e)throw new Error(ae);return await ne((async(n,t)=>{const{signer:i}=await Object(P.web3FromAddress)(o);await e.tx.vesting.claim().signAndSend(o,{signer:i},ie(n,t))}),[te])}),[n,e]),"claimVestedAmount")}},le=e=>e.tx.currencies.transfer,de=()=>{const{apiInstance:e,loading:n}=B(),t=b(Object(i.useCallback)((async(t,i)=>{let{from:a,to:s,currencyId:l,amount:d}=i;if(!a||!s||!l||!d)throw new Error("Invalid transfer parameters provided");if(n||!e)throw new Error(ae);return ne((async(n,t)=>{const{signer:i}=await Object(P.web3FromAddress)(a);await le(e).apply(e,[s,l,d]).signAndSend(a,{signer:i},((e,n,t)=>i=>{let{status:a,dispatchError:s}=i;return a.isFinalized&&r.a.info("operation finalized"),a.isInBlock?(null===s||void 0===s?void 0:s.isModule)?r.a.error("transfer unsuccessful",e.registry.findMetaError(s.asModule)):r.a.info("transfer successful"):a.isBroadcast?(r.a.info("transaction has been broadcast"),n()):s?(r.a.error("There was a dispatch error",e.registry.findMetaError(s.asModule)),t()):void 0})(e,n,t))}),[te])}),[e,n]));return{transferBalance:t}},oe="Config",ce=()=>{const[e]=S(),{apiInstance:n,loading:t}=B();return{config:b(Object(i.useCallback)((async(i,a,s)=>{var l,d,o;let{cache:c}=s;if(!n||t)return;const r=null===(l=c.readQuery({query:Z}))||void 0===l||null===(d=l.account)||void 0===d?void 0:d.id;let u=r?null===(o=n.createType("Option<u32>",await n.query.multiTransactionPayment.accountCurrencyMap(r)))||void 0===o?void 0:o.toHuman():null;return u=u||"0",{__typename:oe,id:"Config",...e,feePaymentAsset:u}}),[n,t]))}},re=()=>{const{apiInstance:e,loading:n}=B(),[t,a]=S();return{setConfig:b(Object(i.useCallback)((async(t,i,s)=>{let{cache:l}=s;if(!e||n)return;await ne((async(n,t)=>{var a,s,d;const o=null===(a=l.readQuery({query:Z}))||void 0===a||null===(s=a.account)||void 0===s?void 0:s.id;if(!o)return n();const{signer:c}=await Object(P.web3FromAddress)(o);await e.tx.multiTransactionPayment.setCurrency((null===(d=i.config)||void 0===d?void 0:d.feePaymentAsset)||"0").signAndSend(o,{signer:c},((e,n)=>ie(e,n))(n,t))}),[te]);const d=i.config;null===d||void 0===d||delete d.feePaymentAsset,a((()=>d||h))}),[e,n]))}},ue=()=>{const{apiInstance:e,loading:n}=B();return{feePaymentAssets:b(Object(i.useCallback)((async()=>{if(!e||n)return;return(await e.query.multiTransactionPayment.acceptedCurrencies.entries()).map((e=>{const n=e[0].toHuman()[0];return{__typename:"FeePaymentAsset",id:n,assetId:n,fallbackPrice:e[1].toString()}}))}),[e,n]))}},me=async()=>({xyk:await t.e(4).then(t.bind(null,301)),lbp:await t.e(3).then(t.bind(null,302))}),[ve,pe]=Object(f.a)((()=>{const[e,n]=Object(i.useState)({instance:void 0,loading:!0});return Object(i.useEffect)((()=>{(async()=>{n({instance:await me(),loading:!1})})()}),[n]),{math:null===e||void 0===e?void 0:e.instance,loading:null===e||void 0===e?void 0:e.loading}})),ke=e=>{let[n,t]=e;return[n.toHuman()[0],t]};var be=t(10),ye=t.n(be);const ge=new ye.a("100").multipliedBy(new ye.a("10").pow("6")),Ne=e=>new ye.a(ge).minus(new ye.a(e)).toFixed(0),fe=(e,n,t,i)=>e.lbp.calculate_linear_weights(n.startBlock,n.endBlock,t.initial,t.final,i),je=e=>e.cache.readQuery({query:H}),Oe={numerator:"2",denominator:"10"},he=(e,n,t)=>async i=>{var a,s,l;let[d,o]=i;const c=o.toJSON(),r=je(n),u=null===r||void 0===r||null===(a=r.lastBlock)||void 0===a?void 0:a.relaychainBlockNumber;if(!c||!u)return;const m=c.feeCollector.toString(),v=t.createType("BalanceOf",c.repayTarget.toString()).toString(),p={id:d,assetInId:c.assets[0].toString(),assetOutId:c.assets[1].toString(),startBlock:c.start.toString(),endBlock:c.end.toString()},k={initial:c.initialWeight.toString(),final:c.finalWeight.toString()},b={...k,current:fe(e,p,k,u)},y={initial:Ne(b.initial),final:Ne(b.final),current:Ne(b.current)},g=null===(s=await W(t,m,"0x6c6270636c6c6374"))||void 0===s||null===(l=s.amount)||void 0===l?void 0:l.toString(),N=!(!v||!g)&&new ye.a(g).gt(new ye.a(v)),f={numerator:c.fee.numerator.toString(),denominator:c.fee.denominator.toString()};return{...p,assetAWeights:b,assetBWeights:y,repayTargetReached:N,fee:N?f:Oe}},Ie=()=>{const{apiInstance:e,loading:n}=B(),{math:t}=pe();return Object(i.useCallback)((async i=>e&&!n&&t?(async(e,n,t)=>await Promise.all((await e.query.lbp.poolData.entries()).map(ke).map(he(n,t,e)))||[])(e,t,i):[]),[e,n,t])},Se=()=>{const{apiInstance:e}=B(),{math:n}=pe();return Object(i.useCallback)((async(t,i)=>{if(r.a.debug("useGetLbpPool",e,i,n),e&&i&&n)return(async(e,n,t,i)=>await he(e,n,t)([i,await t.query.lbp.poolData(i)]))(n,t,e,i)}),[e,n])},Ae=()=>{const{apiInstance:e,loading:n}=B(),t=Ie(),a=(()=>{const{apiInstance:e,loading:n}=B();return Object(i.useCallback)((async(t,i)=>!e||n?[]:t?[await e.query.xyk.poolAssets(t)].map((e=>[t,e])).map((e=>{let[n,t]=e;const i=t.toHuman();if(i)return{id:n,assetInId:i[0],assetOutId:i[1]}})):(await e.query.xyk.poolAssets.entries()).map(ke).map((e=>{let[n,t]=e;const i=t.toHuman();if(i)return{id:n,assetInId:i[0],assetOutId:i[1]}}))||[]),[e,n])})(),s=(()=>{const{apiInstance:e,loading:n}=B();return Object(i.useCallback)((async t=>{if(e&&!n&&t)return(e=>{let[n,t]=e;const i=t.toHuman();if(i)return{id:n,assetInId:i[0],assetOutId:i[1]}})([t,await e.query.xyk.poolAssets(t)])}),[e,n])})(),l=Se();return b(Object(i.useCallback)((async(i,d,o)=>{if(!e||n||!(null===o||void 0===o?void 0:o.client))return;r.a.debug("useGetPoolsQueryResolver","fetching pools",d);let c=null===d||void 0===d?void 0:d.poolId,u={lbpPoolId:c,xykPoolId:c};if((null===d||void 0===d?void 0:d.assetIds)&&(u=await(async(e,n)=>({lbpPoolId:(await e.rpc.lbp.getPoolAccount(n[0],n[1])).toHuman(),xykPoolId:(await e.rpc.xyk.getPoolAccount(n[0],n[1])).toHuman()}))(e,d.assetIds),r.a.debug("useGetPoolsQueryResolver","found poolIDs",u,e)),u.xykPoolId||u.lbpPoolId){var m,v,p,k;let e=await l(o.client,u.lbpPoolId),n=await s(u.xykPoolId);r.a.debug("useGetPoolsQueryResolver","found pools by poolIDs",e,n),(null===(m=n)||void 0===m?void 0:m.assetInId)===(null===(v=n)||void 0===v?void 0:v.assetOutId)&&(n=void 0),(null===(p=e)||void 0===p?void 0:p.assetInId)===(null===(k=e)||void 0===k?void 0:k.assetOutId)&&(e=void 0),r.a.debug("useGetPoolsQueryResolver","eliminated default value pools",e,n);const t=n||e;return r.a.debug("useGetPoolsQueryResolver","returning a single pool",t),t&&{...t,__typename:n?"XYKPool":e?"LBPPool":void 0}}const[b,y]=await Promise.all([t(o.client),a()]);return r.a.debug("useGetPoolsQueryResolver","returning multiple pools",[b,y]),[].concat(null===b||void 0===b?void 0:b.map((e=>({...e,__typename:"LBPPool"})))).concat(null===y||void 0===y?void 0:y.map((e=>({...e,__typename:"XYKPool"}))))}),[t]),"pools")},xe=()=>{const{apiInstance:e,loading:n}=B(),t=(()=>{const{apiInstance:e,loading:n}=B();return Object(i.useCallback)((async()=>{if(e&&!n)return(await(null===e||void 0===e?void 0:e.query.assetRegistry.assetIds.entries())).map((e=>n=>{let[t,i]=n;return{id:e.createType("Option<u32>",i).toHuman()}})(e))||[]}),[e,n])})();return b(Object(i.useCallback)((async()=>{var e;return null===(e=await t())||void 0===e?void 0:e.map((e=>({...e,__typename:"Asset"})))}),[e,n]))};let Te,we,Be,Ce;!function(e){e.D30="D30",e.D7="D7",e.H24="H24",e.H1="H1"}(Te||(Te={})),function(e){e.PRICE="PRICE",e.VOLUME="VOLUME",e.WEIGHTS="WEIGHTS"}(we||(we={})),function(e){e.LBP="LBP",e.XYK="XYK"}(Be||(Be={})),function(e){e.Buy="Buy",e.Sell="Sell"}(Ce||(Ce={}));const Fe=e=>{var n;return null===(n=e.readQuery({query:Z,returnPartialData:!0}))||void 0===n?void 0:n.account},Pe=async(e,n,t,i,a,s)=>{await ne((async(l,d)=>{const o=Fe(e),c=null===o||void 0===o?void 0:o.id;if(!c)return d(new Error("No active account found"));const{signer:r}=await Object(P.web3FromAddress)(c);await n.tx.lbp.buy(t,i,a,s).signAndSend(c,{signer:r},((e,n,t)=>ie(e,n,t))(l,d,n))}),[te])},De=async(e,n,t,i,a,s)=>{await ne((async(l,d)=>{const o=Fe(e),c=null===o||void 0===o?void 0:o.id;if(!c)return d(new Error("No active account found"));const{signer:r}=await Object(P.web3FromAddress)(c);await n.tx.lbp.sell(t,i,a,s).signAndSend(c,{signer:r},((e,n,t)=>ie(e,n,t))(l,d,n))}),[te])},_e=async(e,n,t,i,a,s)=>{await ne((async(l,d)=>{const o=Fe(e),c=null===o||void 0===o?void 0:o.id;if(!c)return d(new Error("No active account found!"));const{signer:r}=await Object(P.web3FromAddress)(c);await n.tx.xyk.buy(t,i,a,s,false).signAndSend(c,{signer:r},((e,n,t)=>ie(e,n,t))(l,d,n))}),[te])},Ee=async(e,n,t,i,a,s)=>{await ne((async(l,d)=>{const o=Fe(e),c=null===o||void 0===o?void 0:o.id;if(!c)return d(new Error("No active account found!"));const{signer:r}=await Object(P.web3FromAddress)(c);await n.tx.xyk.sell(t,i,a,s,false).signAndSend(c,{signer:r},((e,n,t)=>ie(e,n,t))(l,d,n))}),[te])},Ve=()=>({submitTrade:(()=>{const{apiInstance:e}=B();return b(Object(i.useCallback)((async(n,t,i)=>{let{cache:a}=i;if(t&&e){if((null===t||void 0===t?void 0:t.poolType)===Be.XYK&&(null===t||void 0===t?void 0:t.tradeType)===Ce.Buy)return await _e(a,e,t.assetOutId,t.assetInId,t.assetOutAmount,t.amountWithSlippage);if((null===t||void 0===t?void 0:t.poolType)===Be.XYK&&(null===t||void 0===t?void 0:t.tradeType)===Ce.Sell)return await Ee(a,e,t.assetInId,t.assetOutId,t.assetInAmount,t.amountWithSlippage);if((null===t||void 0===t?void 0:t.poolType)===Be.LBP&&(null===t||void 0===t?void 0:t.tradeType)===Ce.Buy)return await Pe(a,e,t.assetOutId,t.assetInId,t.assetOutAmount,t.amountWithSlippage);if((null===t||void 0===t?void 0:t.poolType)===Be.LBP&&(null===t||void 0===t?void 0:t.tradeType)===Ce.Sell)return await De(a,e,t.assetOutId,t.assetInId,t.assetOutAmount,t.amountWithSlippage);throw new Error("We dont support this trade type yet")}}),[_e,Ee,e]))})()}),Le=()=>{return e=(()=>{const{isWeb3Injected:e}=t(19);return{id:"0",isAvailable:e}})(),{__typename:"Extension",...e};var e},qe=()=>{const{Query:e,Accounts:n,SelectedAccount:t}=R(),{Query:a,XYKPool:s,LBPPool:l}=(()=>{const e=Ae(),n={...F()};return{Query:{pools:e},XYKPool:n,LBPPool:n}})(),{Query:d}={Query:{extension:b(Object(i.useCallback)(Le,[Le]))}};return{Query:{...e,...d,...ce(),...ue(),...F(),...a,assets:xe()},Mutation:{setActiveAccount:k(),...se(),...de(),...re(),...Ve()},Accounts:n,SelectedAccount:t,XYKPool:s,LBPPool:l}},Me={kind:"Document",definitions:[{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"Balance"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"assetId"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"balance"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"VestingSchedule"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"remainingVestingAmount"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"start"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"period"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"periodCount"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"perPeriod"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"Account"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"name"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"balances"},arguments:[],type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Balance"}}}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"vestingSchedule"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"VestingSchedule"}}},directives:[]}]},{kind:"ObjectTypeExtension",name:{kind:"Name",value:"Query"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"accounts"},arguments:[],type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Account"}}}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"selectedAccount"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Account"}}},directives:[]}]},{kind:"ObjectTypeExtension",name:{kind:"Name",value:"Mutation"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"setActiveAccount"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"Account"}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"LastBlock"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"parachainBlockNumber"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"relaychainBlockNumber"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}]},{kind:"ObjectTypeExtension",name:{kind:"Name",value:"Query"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"lastBlock"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"LastBlock"}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"Config"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"nodeUrl"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"processorUrl"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"appName"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"feePaymentAsset"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}]},{kind:"ObjectTypeExtension",name:{kind:"Name",value:"Query"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"config"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Config"}}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"Extension"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"isAvailable"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}}},directives:[]}]},{kind:"ObjectTypeExtension",name:{kind:"Name",value:"Query"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"extension"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Extension"}}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"FeePaymentAsset"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"assetId"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"fallbackPrice"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}]},{kind:"ObjectTypeExtension",name:{kind:"Name",value:"Query"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"feePaymentAssets"},arguments:[],type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"FeePaymentAsset"}}}},directives:[]}]},{kind:"EnumTypeDefinition",name:{kind:"Name",value:"PoolType"},directives:[],values:[{kind:"EnumValueDefinition",name:{kind:"Name",value:"LBP"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"XYK"},directives:[]}]},{kind:"EnumTypeDefinition",name:{kind:"Name",value:"TradeType"},directives:[],values:[{kind:"EnumValueDefinition",name:{kind:"Name",value:"Buy"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"Sell"},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"LBPAssetWeights"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"initial"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"final"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"current"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"Fee"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"numerator"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"denominator"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"LBPPool"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"assetInId"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"assetOutId"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"balances"},arguments:[],type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Balance"}}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"fee"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Fee"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"repayTargetReached"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"assetAWeights"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"LBPAssetWeights"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"assetBWeights"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"LBPAssetWeights"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"startBlock"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"endBlock"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"XYKPool"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"assetInId"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"assetOutId"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"balances"},arguments:[],type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Balance"}}}},directives:[]}]},{kind:"UnionTypeDefinition",name:{kind:"Name",value:"Pool"},directives:[],types:[{kind:"NamedType",name:{kind:"Name",value:"LBPPool"}},{kind:"NamedType",name:{kind:"Name",value:"XYKPool"}}]},{kind:"ObjectTypeExtension",name:{kind:"Name",value:"Query"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"pools"},arguments:[],type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Pool"}}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"_tradeType"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"TradeType"}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"Asset"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}]},{kind:"ObjectTypeExtension",name:{kind:"Name",value:"Query"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"assets"},arguments:[],type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Asset"}}}},directives:[]}]},{kind:"DirectiveDefinition",name:{kind:"Name",value:"client"},arguments:[],repeatable:!1,locations:[{kind:"Name",value:"FIELD"}]},{kind:"ObjectTypeExtension",name:{kind:"Name",value:"Query"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"_empty"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}]}],loc:{start:0,end:3613,source:{body:"type Balance {\n    assetId: String!,\n    balance: String!\n}# https://github.com/open-web3-stack/open-runtime-module-library/blob/master/vesting/src/lib.rs#L11\ntype VestingSchedule {\n    # total locked amoount left to eventually be claimed\n    remainingVestingAmount: String,\n    # since this block\n    start: String,\n    # every `period` blocks\n    period: String,\n    # for number of periods\n    periodCount: String,\n    # claimable amount per period\n    perPeriod: String\n}#import \"./../../balances/graphql/Balance.graphql\"\n#import './../../vesting/graphql/VestingSchedule.graphql'\n\ntype Account {\n  id: String!\n  name: String\n  balances: [Balance!]!\n  vestingSchedule: VestingSchedule!\n}\n\nextend type Query {\n  accounts: [Account!]!\n  selectedAccount: Account!\n}\n\nextend type Mutation {\n  setActiveAccount: Account\n}\ntype LastBlock {\n    id: String!\n    # yes, this is correct\n    parachainBlockNumber: String,\n    relaychainBlockNumber: String,\n}\n\nextend type Query {\n    lastBlock: LastBlock\n}type Config {\n    nodeUrl: String!,\n    processorUrl: String!,\n    appName: String!,\n    feePaymentAsset: String\n}\n\nextend type Query {\n    config: Config!\n}# Extension entity that lives in the normalized cache\n# We also use this to generate an Extension type to be used within the implementation\ntype Extension {\n  id: String!\n  isAvailable: Boolean!\n}\n\n# Specify what entity is returned under the `extension` field when queried\n# This is again useful for strict typing down the line\nextend type Query {\n  extension: Extension!\n}\ntype FeePaymentAsset {\n    assetId: String,\n    # This price has 18 digit precision, instead of the usual 12\n    fallbackPrice: String\n}\n\n\nextend type Query {\n    feePaymentAssets: [FeePaymentAsset!]\n}#import './../../balances/graphql/Balance.graphql'\n\nenum PoolType {\n    LBP\n    XYK\n}\n\nenum TradeType {\n    Buy,\n    Sell\n}\n\n# figure out how to create a union between two types\n# that extend an interface, apparently this isnt possible as of now\n# \n# interface Pool {\n#     poolType: PoolType!,\n#     assetInId: String!,\n#     assetOutId: String!,\n#     assetABalance: String!,\n#     assetBBalance: String!,\n# }\n\ntype LBPAssetWeights {\n    initial: String!,\n    final: String!,\n    current: String!,\n}\n\ntype Fee {\n    numerator: String!,\n    denominator: String!,\n}\n\n# TODO: figure out which fields are populated at creation and at update\ntype LBPPool {\n    id: String!,\n    assetInId: String!,\n    assetOutId: String!,\n    balances: [Balance!]\n    fee: Fee!,\n    repayTargetReached: Boolean!,\n    assetAWeights: LBPAssetWeights!,\n    assetBWeights: LBPAssetWeights!,\n    startBlock: String!,\n    endBlock: String!\n}\n\ntype XYKPool {\n    id: String!,\n    assetInId: String!,\n    assetOutId: String!,\n    balances: [Balance!]\n}\n\nunion Pool = LBPPool | XYKPool\n\nextend type Query {\n    pools: [Pool!]\n    # Just to make sure TradeType makes it through the codegen\n    # otherwise it'd be ignored\n    _tradeType: TradeType\n}type Asset {\n    id: String!\n}\n\nextend type Query {\n    assets: [Asset!]\n}#import './hooks/accounts/graphql/Accounts.graphql'\n#import './hooks/lastBlock/graphql/LastBlock.graphql'\n#import './hooks/config/graphql/Config.graphql'\n#import './hooks/vesting/graphql/VestingSchedule.graphql'\n#import './hooks/extension/graphql/Extension.graphql'\n#import './hooks/feePaymentAssets/graphql/FeePaymentAssets.graphql'\n#import './hooks/pools/graphql/Pool.graphql'\n#import './hooks/assets/graphql/Asset.graphql'\n\ndirective @client on FIELD\n\nextend type Query {\n  # just a placeholder to make the codegen not complain about\n  # root query not being defined\n  _empty: String\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}}}},We=()=>{const e=qe(),n=Object(i.useMemo)((()=>new d.a),[]),[{processorUrl:t}]=S(),a=Object(i.useMemo)((()=>new o.a({uri:t,cache:n,connectToDevTools:!0,queryDeduplication:!0,resolvers:e,typeDefs:Me})),[t,n,e]);return(e=>{const n=K();Object(i.useEffect)((()=>{U(e.cache,{__typename:Y,id:$,...n})}),[]),Object(i.useEffect)((()=>{var t;if(!n)return;const i=e.cache.readQuery({query:H});(null===i||void 0===i||null===(t=i.lastBlock)||void 0===t?void 0:t.parachainBlockNumber)?e.refetchQueries({updateCache(e){U(e,{__typename:Y,id:$,...n})}}):U(e.cache,{__typename:Y,id:$,...n})}),[n])})(a),a};var Qe=t(2);const Re=e=>{let{children:n}=e;const t=We();return Object(Qe.jsx)(l.a,{client:t,children:n})},Ge=e=>{let{children:n}=e;return Object(Qe.jsx)(Qe.Fragment,{children:n})},He=e=>{let{children:n}=e;return Object(Qe.jsx)(w,{children:Object(Qe.jsx)(ve,{children:Object(Qe.jsx)(X,{children:Object(Qe.jsx)(Re,{children:Object(Qe.jsx)(Ge,{children:n})})})})})};var Xe=t(96),Ke=t(11);const Ye={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GetPoolByAssets"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"assetInId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"assetOutId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"lastBlock"},arguments:[],directives:[{kind:"Directive",name:{kind:"Name",value:"client"},arguments:[]}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"parachainBlockNumber"},arguments:[],directives:[]}]}},{kind:"Field",alias:{kind:"Name",value:"pool"},name:{kind:"Name",value:"pools"},arguments:[{kind:"Argument",name:{kind:"Name",value:"assetIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"assetInId"}},{kind:"Variable",name:{kind:"Name",value:"assetOutId"}}]}}],directives:[{kind:"Directive",name:{kind:"Name",value:"client"},arguments:[]}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"assetInId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"assetOutId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"balances"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"assetId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"balance"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"repayTarget"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"assetAWeights"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"assetBWeights"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"startBlock"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"endBlock"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"fee"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"numerator"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"denominator"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:612,source:{body:"query GetPoolByAssets($assetInId: String!, $assetOutId: String!) {\n    lastBlock @client {\n        parachainBlockNumber\n    }\n    \n    pool: pools(assetIds: [$assetInId, $assetOutId]) @client {\n        id,\n        assetInId,\n        assetOutId,\n        balances {\n            assetId,\n            balance\n        },\n\n        # TODO: investigate how caching works when these fields are missing for XYK pools\n        # lbp fields,\n        repayTarget,\n        assetAWeights,\n        assetBWeights,\n        startBlock,\n        endBlock,\n        fee {\n            numerator,\n            denominator\n        }\n    }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}}}},$e=e=>{let{assetIdInputProps:n,assetAmountInputProps:t,disabled:i}=e;return Object(Qe.jsxs)("div",{children:[Object(Qe.jsxs)("div",{children:[Object(Qe.jsx)("b",{children:"AssetId:"})," ",Object(Qe.jsx)("br",{}),Object(Qe.jsx)("input",{disabled:i,type:"text",...n})]}),Object(Qe.jsxs)("div",{children:[Object(Qe.jsx)("b",{children:"Asset amount:"})," ",Object(Qe.jsx)("br",{}),Object(Qe.jsx)("input",{disabled:i,type:"text",...t})]})]})},Ue=new ye.a(10).pow(12),ze=(new ye.a(10).pow(18),e=>e&&new ye.a(e).dividedBy(Ue).toFixed(12)),Ze=new ye.a(10).pow(12),Je=(new ye.a(10).pow(18),e=>e&&new ye.a(e).multipliedBy(Ze).toFixed(0));var en=t(134);const nn=(e,n)=>{var t,a;const[s,l]=Object(i.useState)(!1),d=null===(t=e.control._fields[n])||void 0===t||null===(a=t._f)||void 0===a?void 0:a.ref;return Object(i.useEffect)((()=>{if(!d)return;const e=null===d||void 0===d?void 0:d.addEventListener("input",(()=>l((e=>!e))));return()=>null===d||void 0===d?void 0:d.removeEventListener("input",e)}),[d]),s};var tn=t(289);const an={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"SubmitTrade"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"assetInId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"assetOutId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"assetInAmount"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"assetOutAmount"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"amountWithSlippage"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"poolType"}},type:{kind:"NamedType",name:{kind:"Name",value:"PoolType"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"tradeType"}},type:{kind:"NamedType",name:{kind:"Name",value:"TradeType"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"submitTrade"},arguments:[{kind:"Argument",name:{kind:"Name",value:"assetInId"},value:{kind:"Variable",name:{kind:"Name",value:"assetInId"}}},{kind:"Argument",name:{kind:"Name",value:"assetOutId"},value:{kind:"Variable",name:{kind:"Name",value:"assetOutId"}}},{kind:"Argument",name:{kind:"Name",value:"tradeType"},value:{kind:"Variable",name:{kind:"Name",value:"tradeType"}}},{kind:"Argument",name:{kind:"Name",value:"poolType"},value:{kind:"Variable",name:{kind:"Name",value:"poolType"}}},{kind:"Argument",name:{kind:"Name",value:"assetInAmount"},value:{kind:"Variable",name:{kind:"Name",value:"assetInAmount"}}},{kind:"Argument",name:{kind:"Name",value:"assetOutAmount"},value:{kind:"Variable",name:{kind:"Name",value:"assetOutAmount"}}},{kind:"Argument",name:{kind:"Name",value:"amountWithSlippage"},value:{kind:"Variable",name:{kind:"Name",value:"amountWithSlippage"}}}],directives:[{kind:"Directive",name:{kind:"Name",value:"client"},arguments:[]}]}]}}],loc:{start:0,end:505,source:{body:"mutation SubmitTrade(\n    $assetInId: String!, \n    $assetOutId: String!,\n    $assetInAmount: String!,\n    $assetOutAmount: String!,\n    $amountWithSlippage: String!,\n    $poolType: PoolType,\n    $tradeType: TradeType\n) {\n    submitTrade(\n        assetInId: $assetInId\n        assetOutId: $assetOutId,\n        tradeType: $tradeType,\n        poolType: $poolType,\n        assetInAmount: $assetInAmount,\n        assetOutAmount: $assetOutAmount,\n        amountWithSlippage: $amountWithSlippage\n    ) @client\n}",name:"GraphQL request",locationOffset:{line:1,column:1}}}},sn=(e,n,t,a)=>{const[s]=Object(tn.a)(an,{notifyOnNetworkStatusChange:!0});return Object(i.useCallback)((i=>{let{assetInId:l,assetOutId:d,assetInAmount:o,assetOutAmount:c}=i;if(!a)throw new Error("Can't submit a trade mutation without a pool");if(o=Je(o),c=Je(c),!l||!d||!o||!c||!(null===t||void 0===t?void 0:t.spotPriceAmount))throw new Error("Can't submit a trade mutation without all the required arguments");const u=((e,n,t)=>{let i=new ye.a(e).multipliedBy(new ye.a(n).dividedBy(100));const a=new ye.a(e);return(t===Ce.Buy?a.plus(i):a.minus(i)).toFixed(0)})(null===t||void 0===t?void 0:t.spotPriceAmount,n,e);r.a.debug("TradeForm.useHandleSubmit","amountWithSlippage",{spotPriceAmount:t.spotPriceAmount,amountWithSlippage:u,tradeType:e});const m="LBPPool"===a.__typename?Be.LBP:Be.XYK;s({variables:{tradeType:e,assetInId:l,assetInAmount:o,assetOutId:d,assetOutAmount:c,amountWithSlippage:u,poolType:m}})}),[s,a,e,t])},ln=(e,n,t,i,a)=>{var s,l;const d=null===(s=Object(y.find)(n.balances,{assetId:t}))||void 0===s?void 0:s.balance,o=null===(l=Object(y.find)(n.balances,{assetId:i}))||void 0===l?void 0:l.balance;if(!d||!o)throw new Error("Can't find the required balances in the pool");return((e,n,t,i)=>e.xyk.calculate_out_given_in(n,t,i))(e,d,o,a)},dn=(e,n,t)=>{var i,a;return{assetABalance:null===(i=Object(y.find)(e.balances,{assetId:n}))||void 0===i?void 0:i.balance,assetBBalance:null===(a=Object(y.find)(e.balances,{assetId:t}))||void 0===a?void 0:a.balance}},on=(e,n,t)=>({assetInWeight:n===e.assetInId?e.assetAWeights.current:e.assetBWeights.current,assetOutWeight:t===e.assetOutId?e.assetBWeights.current:e.assetAWeights.current}),cn=(e,n,t,i,a)=>{const{assetABalance:s,assetBBalance:l}=dn(n,t,i);if(!s||!l)throw new Error("Can't find the required balances in the pool");const{assetInWeight:d,assetOutWeight:o}=on(n,t,i);return((e,n,t,i,a,s)=>e.lbp.calculate_in_given_out(n,t,i,a,s))(e,s,l,d,o,a)},rn=(e,n,t,i,a)=>{const{assetABalance:s,assetBBalance:l}=dn(n,t,i);if(!s||!l)throw new Error("Can't find the required balances in the pool");const{assetInWeight:d,assetOutWeight:o}=on(n,t,i);return((e,n,t,i,a,s)=>e.lbp.calculate_out_given_in(n,t,i,a,s))(e,s,l,d,o,a)},un=(e,n,t,i,a)=>{const{assetABalance:s,assetBBalance:l}=dn(n,t,i);if(!s||!l)throw new Error("Can't find the required balances in the pool");return((e,n,t,i)=>e.xyk.calculate_in_given_out(n,t,i))(e,s,l,a)},mn=(e,n,t)=>{const i=[e.assetInId,e.assetOutId];return i.includes(n)&&i.includes(t)},vn=(e,n)=>{if(!e||!n)return;const t=new ye.a(e);return new ye.a(n).minus(t).dividedBy(t)},pn=(e,n,t)=>{const i=new ye.a(e).multipliedBy(ze(t)).toFixed(0),a=vn(i,n);if(!a||a.isNaN())return;ye.a.config({ROUNDING_MODE:ye.a.ROUND_UP});return{percentualSlippage:new ye.a(a).multipliedBy(100).abs().toFixed(10),spotPriceAmount:i}},kn=(e,n,t,i)=>{if((null===n||void 0===n?void 0:n.aToB)&&(null===n||void 0===n?void 0:n.bToA)&&t&&i)return pn.apply(null,e===Ce.Buy?[n.bToA,t,i]:[n.aToB,i,t])};var bn=t(296);var yn={appName:"basilisk-ui",xykFee:{numerator:"2",denominator:"1000"}};const gn=e=>new ye.a(e.numerator).dividedBy(e.denominator).multipliedBy("100").toFixed(2),Nn=e=>e?"XYKPool"===e.__typename?yn.xykFee:e.fee:void 0,fn="5",jn="5",On=(e,n)=>{const t=e.watch("autoSlippage"),a=Object(i.useMemo)((()=>e.getValues("autoSlippage")),[t]);return Object(i.useEffect)((()=>{if(!a)return;const t=n?"XYKPool"===(null===n||void 0===n?void 0:n.__typename)?fn:jn:fn,i=(s=t,(l=Nn(n))?new ye.a(s).plus(gn(l)).toFixed(2):s);var s,l;r.a.debug("TradeForm.useCalculateAllowedSlippage","allowedSlippageWithFee",i),e.setValue("allowedSlippage",i)}),[n,a]),{allowedSlippageInputDisabled:a}},hn=e=>{let{pool:n,loading:t,onAssetIdsChange:a,assetIds:s,spotPrice:l}=e;const d=(e=>{let{assetInId:n,assetOutId:t}=e;return Object(en.a)({defaultValues:{assetInId:n,assetOutId:t,assetInAmount:"0",assetOutAmount:"0",allowedSlippage:"5",autoSlippage:!0}})})(s),o=(e=>{const n=Nn(e);if(n)return gn(n)})(n),c=(e=>{const[n,t]=Object(i.useState)(Ce.Sell),a=nn(e,"assetInAmount"),s=nn(e,"assetInId"),l=nn(e,"assetOutAmount"),d=nn(e,"assetOutId");return Object(i.useEffect)((()=>{r.a.debug("TradeForm.setTradeType",Ce.Sell),t(Ce.Sell)}),[a,s]),Object(i.useEffect)((()=>{r.a.debug("TradeForm.setTradeType",Ce.Buy),t(Ce.Buy)}),[l,d]),n})(d);((e,n)=>{const[t,a]=e.watch(["assetInId","assetOutId"]);Object(i.useEffect)((()=>{r.a.debug("TradeForm.useHandleAssetIdsChange",t,a),n(t,a)}),[t,a])})(d,a),((e,n,t)=>{const{math:a}=pe();let[s,l]=e.watch(["assetInId","assetInAmount"]),[d,o]=e.watch(["assetOutId","assetOutAmount"]);l=Je(l),o=Je(o);const c=Object(i.useMemo)((()=>"XYKPool"===(null===t||void 0===t?void 0:t.__typename)?ln:rn),[t]),u=Object(i.useMemo)((()=>"XYKPool"===(null===t||void 0===t?void 0:t.__typename)?un:cn),[t]);Object(i.useEffect)((()=>{if(!t||!a||!d||!l)return;if(!mn(t,s,d))return;if(n!==Ce.Sell)return;const i=c(a,t,s,d,l);r.a.debug("TradeForm.useCalculateInAndOut","outAmount",i),e.setValue("assetOutAmount",ze(i))}),[l,s,d,n,t]),Object(i.useEffect)((()=>{if(!t||!a||!d||!o)return;if(!mn(t,s,d))return;if(n!==Ce.Buy)return;const i=u(a,t,s,d,o);r.a.debug("TradeForm.useCalculateInAndOut","inAmount",ze(i)),e.setValue("assetInAmount",ze(i))}),[o,s,d,n,t])})(d,c,n),((e,n)=>{const t=Object(bn.a)(null===n||void 0===n?void 0:n.id);Object(i.useEffect)((()=>{Object(y.isEqual)(t,null===n||void 0===n?void 0:n.id)||(e.resetField("assetInAmount"),e.resetField("assetOutAmount"))}),[t,null===n||void 0===n?void 0:n.id])})(d,n);const u=kn(c,l,Je(d.getValues("assetInAmount")),Je(d.getValues("assetOutAmount"))),m=sn(c,d.getValues("allowedSlippage"),u,n),{allowedSlippageInputDisabled:v}=On(d,n);return Object(Qe.jsx)("div",{children:Object(Qe.jsxs)("form",{onSubmit:d.handleSubmit(m),children:[Object(Qe.jsx)("p",{children:c}),Object(Qe.jsx)($e,{assetIdInputProps:d.register("assetInId"),assetAmountInputProps:d.register("assetInAmount")}),Object(Qe.jsx)("br",{}),Object(Qe.jsx)($e,{assetIdInputProps:d.register("assetOutId"),assetAmountInputProps:d.register("assetOutAmount")}),Object(Qe.jsxs)("div",{children:[Object(Qe.jsx)("b",{children:"Allowed slippage"}),Object(Qe.jsx)("br",{}),Object(Qe.jsx)("input",{type:"text",disabled:v,...d.register("allowedSlippage")}),Object(Qe.jsx)("br",{}),Object(Qe.jsx)("b",{children:"Auto slippage"}),Object(Qe.jsx)("input",{type:"checkbox",...d.register("autoSlippage")})]}),Object(Qe.jsx)("br",{}),Object(Qe.jsxs)("p",{children:[Object(Qe.jsx)("b",{children:"Slippage:"})," ",null===u||void 0===u?void 0:u.percentualSlippage," / ",ze(null===u||void 0===u?void 0:u.spotPriceAmount)]}),Object(Qe.jsxs)("p",{children:[Object(Qe.jsx)("b",{children:"Fee:"})," ",o,"%"]}),Object(Qe.jsx)("button",{disabled:t,type:"submit",children:"Trade"})]})})},In=e=>{let{spotPrice:n,poolLiquidity:t}=e;return Object(Qe.jsxs)("div",{children:[Object(Qe.jsx)("p",{children:"TradeChart"}),Object(Qe.jsxs)("div",{children:[Object(Qe.jsx)("b",{children:"Spot price"}),Object(Qe.jsx)("br",{}),Object(Qe.jsxs)("span",{children:["1 A = ",ze(null===n||void 0===n?void 0:n.aToB),"B"]}),Object(Qe.jsx)("br",{}),Object(Qe.jsxs)("span",{children:["1 B = ",ze(null===n||void 0===n?void 0:n.bToA),"A"]}),Object(Qe.jsx)("br",{}),Object(Qe.jsx)("br",{}),Object(Qe.jsx)("b",{children:"Pool liquidity"}),Object(Qe.jsx)("br",{}),Object(Qe.jsxs)("span",{children:["A = ",ze(t.assetABalance)]}),Object(Qe.jsx)("br",{}),Object(Qe.jsxs)("span",{children:["B = ",ze(t.assetBBalance)]}),Object(Qe.jsx)("br",{}),Object(Qe.jsx)("br",{})]})]})},Sn="1000000000000",An=(e,n,t,i)=>{var a,s;const l=null===(a=Object(y.find)(n.balances,{assetId:t}))||void 0===a?void 0:a.balance,d=null===(s=Object(y.find)(n.balances,{assetId:i}))||void 0===s?void 0:s.balance;if(!l||!d)throw new Error("Can't find the required balances in the pool");return function(e,n,t,i,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:Sn;return e.lbp.get_spot_price(n,t,i,a,s)}(e,l,d,t===n.assetInId?n.assetAWeights.current:n.assetBWeights.current,i===n.assetOutId?n.assetBWeights.current:n.assetAWeights.current)},xn=(e,n,t,i)=>{var a,s;const l=null===(a=Object(y.find)(n.balances,{assetId:t}))||void 0===a?void 0:a.balance,d=null===(s=Object(y.find)(n.balances,{assetId:i}))||void 0===s?void 0:s.balance;if(l&&d)return((e,n,t)=>e.xyk.get_spot_price(n,t,Sn))(e,l,d)},Tn=()=>{const[e,n]=Object(i.useState)({assetInId:"0",assetOutId:"2"}),{data:t,loading:a,error:s}=(l=e,Object(G.a)(Ye,{variables:l,notifyOnNetworkStatusChange:!0}));var l;r.a.debug("TradePage.useGetPoolByAssetsQuery",e);const d=Object(i.useMemo)((()=>null===t||void 0===t?void 0:t.pool),[null===t||void 0===t?void 0:t.pool]);s&&r.a.error(s);const o=Object(i.useMemo)((()=>{const e=a;return r.a.debug("TradePage.loading",e),e}),[a]);r.a.debug("TradePage.poolData.pool",null===t||void 0===t?void 0:t.pool);const c=((e,n)=>{let{assetInId:t,assetOutId:a}=e;const s=Object(z.a)(),l=je(s),{math:d}=pe();return Object(i.useMemo)((()=>{if(!d||!n||!t||!a||!l)return;const e="XYKPool"===(null===n||void 0===n?void 0:n.__typename)?xn:An,i={aToB:e(d,n,t,a),bToA:e(d,n,a,t)};return r.a.debug("TradePage.useSpotPrice",i),i}),[l,t,a,n])})(e,null===t||void 0===t?void 0:t.pool),u=Object(i.useMemo)((()=>{var n,t;return{assetABalance:null===(n=Object(y.find)(null===d||void 0===d?void 0:d.balances,{assetId:e.assetInId}))||void 0===n?void 0:n.balance,assetBBalance:null===(t=Object(y.find)(null===d||void 0===d?void 0:d.balances,{assetId:e.assetOutId}))||void 0===t?void 0:t.balance}}),[d]);return Object(Qe.jsxs)("div",{children:[Object(Qe.jsx)("h1",{children:"Trade"}),Object(Qe.jsx)("br",{}),Object(Qe.jsx)("br",{}),Object(Qe.jsx)(In,{poolLiquidity:u,spotPrice:c}),Object(Qe.jsx)(hn,{onAssetIdsChange:(t,i)=>{const a={assetInId:t,assetOutId:i};r.a.debug("TradePage.handleAssetIdsChange",Object(y.isEqual)(e,a),a),Object(y.isEqual)(e,a)||n(a)},assetIds:e,loading:o,pool:d,spotPrice:c})]})},wn={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GetSelectedAccount"},variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"lastBlock"},arguments:[],directives:[{kind:"Directive",name:{kind:"Name",value:"client"},arguments:[]}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"parachainBlockNumber"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"relaychainBlockNumber"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"selectedAccount"},arguments:[],directives:[{kind:"Directive",name:{kind:"Name",value:"client"},arguments:[]}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"balances"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"assetId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"balance"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"vestingSchedule"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"remainingVestingAmount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"start"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"period"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"periodCount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"perPeriod"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:454,source:{body:"# Query that triggers the local extension resolver\nquery GetSelectedAccount {\n  lastBlock @client {\n    parachainBlockNumber\n    relaychainBlockNumber\n  }\n\n  selectedAccount @client {\n    id\n    name\n    balances {\n      assetId\n      balance\n    }\n    vestingSchedule {\n      # figure out why this fragment doesnt work\n      # ...VestingScheduleFields,\n      remainingVestingAmount\n      start\n      period\n      periodCount\n      perPeriod\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}}}},Bn={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"SetActiveAccount"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"setActiveAccount"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[{kind:"Directive",name:{kind:"Name",value:"client"},arguments:[]}]}]}}],loc:{start:0,end:80,source:{body:"mutation SetActiveAccount($id: String) {\n    setActiveAccount(id: $id) @client\n}",name:"GraphQL request",locationOffset:{line:1,column:1}}}},Cn=e=>Object(tn.a)(Bn,{...e,refetchQueries:[{query:wn}]}),Fn=e=>{let{account:n}=e;const[t]=Cn(),[i]=p();return Object(Qe.jsxs)("div",{style:{marginBottom:"24px",padding:"12px",paddingLeft:0},children:[Object(Qe.jsxs)("h3",{children:[null===n||void 0===n?void 0:n.name,(null===n||void 0===n?void 0:n.id)===(null===i||void 0===i?void 0:i.id)?" [active]":Object(Qe.jsx)(Qe.Fragment,{})]}),Object(Qe.jsxs)("p",{children:[Object(Qe.jsx)("b",{children:"Address:"}),null===n||void 0===n?void 0:n.id]}),Object(Qe.jsxs)("div",{children:[Object(Qe.jsx)("b",{children:"Balances:"}),null===n||void 0===n?void 0:n.balances.map(((e,n)=>Object(Qe.jsxs)("p",{children:[e.assetId,":",Object(Qe.jsxs)("i",{children:[" ",e.balance]})]},n)))]}),Object(Qe.jsx)("button",{onClick:e=>(null===n||void 0===n?void 0:n.id)===(null===i||void 0===i?void 0:i.id)?t({variables:{id:void 0}}):t({variables:{id:null===n||void 0===n?void 0:n.id}}),children:(null===n||void 0===n?void 0:n.id)===(null===i||void 0===i?void 0:i.id)?"Unset active":"Set active"})]})},Pn=()=>{var e;const[n,{data:t,loading:a}]=q(),s=Object(i.useMemo)((()=>a),[a]);return Object(i.useEffect)((()=>{n()}),[n]),Object(Qe.jsxs)("div",{style:{textAlign:"left"},children:[Object(Qe.jsx)("h1",{children:"Accounts"}),s?Object(Qe.jsx)("i",{children:"[WalletPage] Loading accounts..."}):Object(Qe.jsx)("i",{children:"[WalletPage] Everything is up to date"}),Object(Qe.jsx)("br",{}),Object(Qe.jsx)("br",{}),Object(Qe.jsx)("div",{children:null===t||void 0===t||null===(e=t.accounts)||void 0===e?void 0:e.map(((e,n)=>Object(Qe.jsx)(Fn,{account:e},n)))})]})},Dn=()=>Object(Qe.jsxs)(Ke.d,{children:[Object(Qe.jsx)(Ke.b,{path:"/",element:Object(Qe.jsx)(Pn,{})}),Object(Qe.jsx)(Ke.b,{path:"wallet",element:Object(Qe.jsx)(Pn,{})}),Object(Qe.jsx)(Ke.b,{path:"trade",element:Object(Qe.jsx)(Tn,{})}),Object(Qe.jsx)(Ke.b,{path:"*",element:Object(Qe.jsx)(Ke.a,{to:"/"})})]});t(218);var _n=t(87);let En,Vn;!function(e){e.LONG="LONG",e.SHORT="SHORT"}(En||(En={})),function(e){e.T="T",e.G="G",e.M="M",e.k="k",e.NONE="",e.m="m",e["\xb5"]="\xb5",e.n="n",e.p="p"}(Vn||(Vn={}));const Ln={T:"tera",G:"giga",M:"mega",k:"kilo","":"unit",m:"mili","\xb5":"micro",n:"nano",p:"pico"},qn=(_n.a.reduce(((e,n)=>({...e,[n.metricPrefix]:n.base10})),{}),{0:{symbol:"BSX",fullName:"Basilisk"}}),Mn=e=>{let{balance:n,precision:t=3,unitStyle:a=En.LONG}=e;const s=Object(i.useMemo)((()=>{var e;return null===(e=qn[n.assetId])||void 0===e?void 0:e.symbol}),[n.assetId]),l=((e,n,t)=>{const a=Object(i.useMemo)((()=>{const n=ze(t);if(!n)return;let i=Object(_n.b)(n,"",e);const a=Ln[i.unit];return{...i,unitName:a}}),[t,e]),s=Object(i.useMemo)((()=>{var e,n;return null===a||void 0===a||null===(e=a.value)||void 0===e||null===(n=e.split(".")[1])||void 0===n?void 0:n.length}),[a]),l=Object(i.useMemo)((()=>{if(!a)return;const e=a.unit,t=""===e?"":a.unitName,i=n===En.LONG&&t||e;return" ".concat(i)}),[a,n]);return{...a,numberOfDecimalPlaces:s,suffix:l}})(t,a,n.balance);return r.a.debug("FormattedBalance",null===l||void 0===l?void 0:l.value,null===l||void 0===l?void 0:l.unit,null===l||void 0===l?void 0:l.numberOfDecimalPlaces),Object(Qe.jsxs)("div",{className:"formatted-balance flex-container",children:[Object(Qe.jsx)("div",{className:"formatted-balance__value",children:l.value}),Object(Qe.jsx)("div",{className:"formatted-balance__suffix ".concat(a.toLowerCase()),children:l.suffix}),Object(Qe.jsx)("div",{className:"formatted-balance__symbol",children:s})]})};var Wn;function Qn(){return Qn=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},Qn.apply(this,arguments)}function Rn(e,n){let{title:t,titleId:a,...s}=e;return i.createElement("svg",Qn({width:28,height:28,viewBox:"0 0 28 28",fill:"none",xmlns:"http://www.w3.org/2000/svg",ref:n,"aria-labelledby":a},s),t?i.createElement("title",{id:a},t):null,Wn||(Wn=i.createElement("path",{d:"M14 0.4375C6.51016 0.4375 0.4375 6.51235 0.4375 14C0.4375 21.492 6.51016 27.5625 14 27.5625C21.4898 27.5625 27.5625 21.492 27.5625 14C27.5625 6.51235 21.4898 0.4375 14 0.4375ZM14 24.9375C7.95528 24.9375 3.0625 20.0467 3.0625 14C3.0625 7.9573 7.9555 3.0625 14 3.0625C20.0425 3.0625 24.9375 7.95545 24.9375 14C24.9375 20.0446 20.0467 24.9375 14 24.9375ZM19.8649 10.9812C19.8649 14.6482 15.9044 14.7046 15.9044 16.0597V16.4062C15.9044 16.7687 15.6105 17.0625 15.2481 17.0625H12.7518C12.3894 17.0625 12.0956 16.7687 12.0956 16.4062V15.9327C12.0956 13.9779 13.5776 13.1965 14.6975 12.5686C15.6579 12.0302 16.2465 11.664 16.2465 10.951C16.2465 10.0078 15.0434 9.3818 14.0708 9.3818C12.8027 9.3818 12.2172 9.98211 11.3943 11.0207C11.1724 11.3007 10.7676 11.3527 10.4829 11.1369L8.96126 9.98309C8.68197 9.77134 8.61941 9.37792 8.81666 9.08824C10.1088 7.19091 11.7545 6.125 14.3169 6.125C17.0004 6.125 19.8649 8.21975 19.8649 10.9812ZM16.2969 20.125C16.2969 21.3915 15.2665 22.4219 14 22.4219C12.7335 22.4219 11.7031 21.3915 11.7031 20.125C11.7031 18.8585 12.7335 17.8281 14 17.8281C15.2665 17.8281 16.2969 18.8585 16.2969 20.125Z",fill:"#BDCCD4"})))}const Gn=i.forwardRef(Rn);var Hn,Xn;t.p;function Kn(){return Kn=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},Kn.apply(this,arguments)}function Yn(e,n){let{title:t,titleId:a,...s}=e;return i.createElement("svg",Kn({width:32,height:32,viewBox:"0 0 32 32",fill:"none",xmlns:"http://www.w3.org/2000/svg",ref:n,"aria-labelledby":a},s),t?i.createElement("title",{id:a},t):null,Hn||(Hn=i.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M20.427 26C20.427 27.8937 18.8922 29.4286 17 29.4286C15.1079 29.4286 13.5731 27.8937 13.5731 26H20.427ZM28.3362 21.1939C28.4067 21.2681 28.4745 21.3393 28.5388 21.4084C28.8602 21.7534 29.0027 22.167 29 22.5714C28.9947 23.45 28.3047 24.2857 27.2804 24.2857H6.71968C5.69539 24.2857 5.00593 23.45 5.00004 22.5714C4.99736 22.167 5.13986 21.7539 5.46129 21.4084C5.52557 21.3393 5.59334 21.2681 5.6639 21.1939C6.72939 20.0737 8.43289 18.2828 8.43289 13.1429C8.43289 8.98036 11.3515 5.64821 15.2868 4.83071V3.71429C15.2868 2.76768 16.054 2 17 2C17.9461 2 18.7133 2.76768 18.7133 3.71429V4.83071C19.9854 5.09499 21.1513 5.62204 22.1468 6.35498C20.3032 7.09144 19.0007 8.89361 19.0007 11C19.0007 13.7614 21.2393 16 24.0007 16C24.6088 16 25.1915 15.8914 25.7306 15.6927C26.182 18.9292 27.4699 20.2832 28.3362 21.1939Z",fill:"#BDCCD4"})),Xn||(Xn=i.createElement("circle",{cx:24,cy:11,r:3,fill:"#4FFFB0"})))}const $n=i.forwardRef(Yn);var Un;t.p;function zn(){return zn=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},zn.apply(this,arguments)}function Zn(e,n){let{title:t,titleId:a,...s}=e;return i.createElement("svg",zn({width:24,height:28,viewBox:"0 0 24 28",fill:"none",xmlns:"http://www.w3.org/2000/svg",ref:n,"aria-labelledby":a},s),t?i.createElement("title",{id:a},t):null,Un||(Un=i.createElement("path",{d:"M12 27.4286C13.8922 27.4286 15.427 25.8937 15.427 24H8.57307C8.57307 25.8937 10.1079 27.4286 12 27.4286ZM23.5388 19.4084C22.5038 18.2963 20.5672 16.6232 20.5672 11.1429C20.5672 6.98036 17.6486 3.64821 13.7133 2.83071V1.71429C13.7133 0.767679 12.9461 0 12 0C11.054 0 10.2868 0.767679 10.2868 1.71429V2.83071C6.35147 3.64821 3.43289 6.98036 3.43289 11.1429C3.43289 16.6232 1.49629 18.2963 0.461287 19.4084C0.139858 19.7539 -0.00264153 20.167 3.70387e-05 20.5714C0.0059299 21.45 0.695394 22.2857 1.71968 22.2857H22.2804C23.3047 22.2857 23.9947 21.45 24 20.5714C24.0027 20.167 23.8602 19.7534 23.5388 19.4084Z",fill:"#BDCCD4"})))}const Jn=i.forwardRef(Zn);var et;t.p;function nt(){return nt=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},nt.apply(this,arguments)}function tt(e,n){let{title:t,titleId:a,...s}=e;return i.createElement("svg",nt({width:10,height:8,viewBox:"0 0 10 8",fill:"none",xmlns:"http://www.w3.org/2000/svg",ref:n,"aria-labelledby":a},s),t?i.createElement("title",{id:a},t):null,et||(et=i.createElement("path",{d:"M4.46879 7.00939L0.218787 2.75938C-0.0749634 2.46563 -0.0749634 1.99063 0.218787 1.7L0.925036 0.99375C1.21879 0.7 1.69379 0.7 1.98441 0.99375L4.99691 4.00626L8.00941 0.99375C8.30316 0.7 8.77816 0.7 9.06879 0.99375L9.77503 1.7C10.0688 1.99375 10.0688 2.46875 9.77503 2.75938L5.52504 7.00939C5.23754 7.30314 4.76254 7.30314 4.46879 7.00939Z",fill:"#BDCCD4"})))}const it=i.forwardRef(tt);t.p;let at;!function(e){e.HELP="HELP",e.NOTIFICATION_ACTIVE="NOTIFICATION_ACTIVE",e.NOTIFICATION_INACTIVE="NOTIFICATION_INACTIVE",e.DROPDOWN_ARROW="DROPDOWN_ARROW"}(at||(at={}));const st=e=>{let{type:n}=e;switch(n){case at.HELP:return Object(Qe.jsx)(Gn,{});case at.NOTIFICATION_ACTIVE:return Object(Qe.jsx)($n,{});case at.NOTIFICATION_INACTIVE:return Object(Qe.jsx)(Jn,{});case at.DROPDOWN_ARROW:return Object(Qe.jsx)(it,{})}};var lt=t(72),dt=(t(219),t(153)),ot=t(294);var ct=t(71),rt=t.n(ct);t(220);const ut=e=>{let{account:n,onClick:t,active:i,setActiveAccount:a}=e;return Object(Qe.jsxs)("div",{className:"account-item "+rt()({"account-item--active":i}),onClick:()=>{a({variables:{id:n.id}}).then(t)},children:[Object(Qe.jsxs)("div",{className:"d-flex flex-align-space",children:[Object(Qe.jsx)("div",{className:"account-item__heading",children:n.name}),Object(Qe.jsx)("div",{children:null===n||void 0===n?void 0:n.balances.map(((e,n)=>Object(Qe.jsx)(Mn,{balance:e,unitStyle:En.SHORT,precision:1})))})]}),Object(Qe.jsxs)("div",{className:"d-flex flex-column",children:[Object(Qe.jsxs)("div",{className:"d-flex gap-2 my-1",children:[Object(Qe.jsx)(lt.a,{value:null===n||void 0===n?void 0:n.id,size:32}),Object(Qe.jsxs)("div",{className:"d-flex flex-column",children:[Object(Qe.jsx)("div",{className:"account-item__chain-name",children:"Basilisk"}),Object(Qe.jsx)("div",{className:"account-item__chain-address",children:null===n||void 0===n?void 0:n.id})]})]}),Object(Qe.jsxs)("div",{className:"d-flex gap-2 my-1",children:[Object(Qe.jsx)(lt.a,{value:null===n||void 0===n?void 0:n.id,size:32,theme:"polkadot"}),Object(Qe.jsxs)("div",{className:"d-flex flex-column",children:[Object(Qe.jsx)("div",{className:"account-item__chain-name",children:"Kusama"}),Object(Qe.jsx)("div",{className:"account-item__chain-address",children:null===n||void 0===n?void 0:n.id})]})]})]})]})};t(248);let mt;!function(e){e.Primary="Primary",e.Secondary="Secondary"}(mt||(mt={}));const vt=e=>{let{kind:n=mt.Primary,children:t,onClick:i}=e;return Object(Qe.jsx)("button",{onClick:i,className:"button "+rt()({"button--primary":n===mt.Primary})+rt()({"button--secondary":n===mt.Secondary}),children:t})};t(249);const pt=e=>{let{accounts:n,onAccountSelected:t,account:a,innerRef:s,closeModal:l,setActiveAccount:d,isExtensionAvailable:o}=e;const c=Object(i.useMemo)((()=>a),[a]);return Object(Qe.jsx)("div",{className:"account-selector",ref:s,children:Object(Qe.jsxs)("div",{className:"account-selector__content-wrapper",children:[Object(Qe.jsxs)("div",{className:"d-flex flex-align-space mx-3 my-3 account-selector__heading",children:[Object(Qe.jsx)("div",{children:o?"Select an account":"Install extension"}),Object(Qe.jsx)("div",{className:"account-selector__close-modal-btn",onClick:()=>l(),children:"x"})]}),o?Object(Qe.jsxs)(Qe.Fragment,{children:[(null===n||void 0===n?void 0:n.length)?Object(Qe.jsx)("div",{className:"account-selector__accounts-list",children:null===n||void 0===n?void 0:n.map(((e,n)=>Object(Qe.jsx)(ut,{onClick:()=>t(e),active:e.id===(null===c||void 0===c?void 0:c.id),account:e,setActiveAccount:d},n)))}):Object(Qe.jsxs)("div",{className:"mx-3 my-5 text-center",children:[Object(Qe.jsx)("h4",{children:"No accounts available"}),Object(Qe.jsxs)("a",{href:"/#",className:"account-selector__create-account-link",children:["Need help creating an account? ",Object(Qe.jsx)("br",{}),"Click here"]})]}),a&&Object(Qe.jsx)("div",{className:"d-flex mx-3",children:Object(Qe.jsx)(vt,{kind:mt.Secondary,onClick:()=>d({variables:{id:void 0}}).then((()=>t(a))),children:"Clear account"})})]}):Object(Qe.jsx)("div",{className:"mx-3 my-5 text-center",children:Object(Qe.jsxs)("p",{children:[" ","To connect your account, please"," ",Object(Qe.jsx)("a",{href:"https://polkadot.js.org/extension/",title:"",className:"account-selector__create-account-link",children:"install or enable the polkadot.js extension"})]})})]})})},kt=e=>{let{modalContainerRef:n,accounts:t,account:s,onAccountSelected:l,extensionLoading:d,isExtensionAvailable:o,setActiveAccount:c,setAccountSelectorOpen:r}=e;const u=(e=>{let{accounts:n,onAccountSelected:t,account:a,setActiveAccount:s,isExtensionAvailable:l}=e;const d=Object(i.useCallback)((e=>n=>{e(),t(n)}),[t]);return Object(i.useCallback)((e=>{let{closeModal:t,elementRef:i,isModalOpen:o}=e;return o?Object(Qe.jsx)(pt,{innerRef:i,accounts:n,account:a,onAccountSelected:d(t),closeModal:t,setActiveAccount:s,isExtensionAvailable:l}):Object(Qe.jsx)(Qe.Fragment,{})}),[n,a,d,s,l])})({accounts:t,onAccountSelected:l,account:s,setActiveAccount:c,isExtensionAvailable:o}),{isModalOpen:m,toggleModal:v,modalPortal:p,toggleId:k}=function(e,n){let t=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const[s,l]=Object(i.useState)(),[d,o]=Object(i.useState)(!1),c=Object(i.useCallback)((()=>o((e=>!e))),[o]),r=Object(i.useCallback)((()=>o(!0)),[o]),u=Object(i.useCallback)((()=>o(!1)),[o]),m=Object(i.useRef)(null),v=Object(i.useMemo)((()=>Object(ot.a)()),[]),p=Object(i.useMemo)((()=>e({toggleModal:c,openModal:r,closeModal:u,elementRef:m,isModalOpen:d})),[e,c,r,u,d,m]);return Object(i.useEffect)((()=>{n.current&&p&&l(Object(a.createPortal)(p,n.current))}),[n.current,p]),Object(dt.c)(m,(e=>{const n=!e.target.closest('[data-modal-portal-toggle="'.concat(v,'"]'));t&&n&&u()})),{toggleModal:c,openModal:r,closeModal:u,isModalOpen:d,toggleId:v,modalPortal:s}}(u,n,!1),b=Object(i.useCallback)((()=>v()),[v]);return Object(i.useEffect)((()=>{r(m)}),[m,r]),Object(Qe.jsxs)("div",{className:"wallet d-flex justify-content-between",children:[p,Object(Qe.jsxs)("div",{className:"wallet__icons-wrapper",children:[Object(Qe.jsx)("span",{className:"wallet__icon",children:Object(Qe.jsx)(st,{type:at.HELP})}),Object(Qe.jsx)("span",{className:"wallet__icon",children:Object(Qe.jsx)(st,{type:at.NOTIFICATION_INACTIVE})})]}),Object(Qe.jsxs)("div",{className:"d-flex wallet__info-wrapper",onClick:e=>b(),"data-modal-portal-toggle":k,children:[d?Object(Qe.jsx)("div",{className:"wallet__info",children:"Loading..."}):o?Object(Qe.jsx)(Qe.Fragment,{children:s?Object(Qe.jsxs)(Qe.Fragment,{children:[Object(Qe.jsxs)("div",{className:"d-flex flex-column align-items-end",children:[(null===s||void 0===s?void 0:s.balances)?null===s||void 0===s?void 0:s.balances.map(((e,n)=>Object(Qe.jsx)(Mn,{balance:e,unitStyle:En.SHORT,precision:1}))):Object(Qe.jsx)("div",{children:"\u2015"}),Object(Qe.jsxs)("div",{className:"wallet__fiat-balance",children:["~$ ","\u2015"]})]}),Object(Qe.jsx)(lt.a,{value:null===s||void 0===s?void 0:s.id,size:32}),Object(Qe.jsx)("div",{className:"wallet__account-name",children:null===s||void 0===s?void 0:s.name})]}):Object(Qe.jsxs)(Qe.Fragment,{children:[Object(Qe.jsx)("div",{className:"wallet__select-account-icon"}),Object(Qe.jsx)("div",{className:"wallet__info",children:"Connect account"})]})}):Object(Qe.jsx)("div",{className:"wallet__info",children:"Install extension"}),Object(Qe.jsx)("div",{children:Object(Qe.jsx)(st,{type:at.DROPDOWN_ARROW})})]})]})},bt={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GetExtension"},variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"extension"},arguments:[],directives:[{kind:"Directive",name:{kind:"Name",value:"client"},arguments:[]}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"isAvailable"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:116,source:{body:"# Query that triggers the local extension resolver\nquery GetExtension {\n  extension @client {\n    isAvailable\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}}}},yt=()=>{const{data:e,loading:n}=Object(G.a)(bt,{notifyOnNetworkStatusChange:!0}),[t]=Cn(),{data:a}=Object(G.a)(wn,{notifyOnNetworkStatusChange:!0}),[s,{data:l}]=q(),[d,o]=Object(i.useState)(!1);Object(i.useEffect)((()=>{(null===e||void 0===e?void 0:e.extension.isAvailable)&&d&&s()}),[e,d,s]);const c=Object(i.useRef)(null);return Object(Qe.jsxs)(Qe.Fragment,{children:[Object(Qe.jsx)("div",{ref:c}),Object(Qe.jsx)(kt,{isExtensionAvailable:!!(null===e||void 0===e?void 0:e.extension.isAvailable),extensionLoading:n,accounts:null===l||void 0===l?void 0:l.accounts,account:null===a||void 0===a?void 0:a.selectedAccount,onAccountSelected:e=>console.log(e),modalContainerRef:c,setActiveAccount:t,setAccountSelectorOpen:o})]})},gt=e=>{let{children:n}=e;return Object(Qe.jsxs)("div",{className:"container",children:[Object(Qe.jsxs)("div",{className:"row my-5",children:[Object(Qe.jsx)("div",{className:"col-8",children:Object(Qe.jsx)("h1",{children:"Basilisk"})}),Object(Qe.jsx)("div",{className:"col",children:Object(Qe.jsx)(yt,{})})]}),Object(Qe.jsx)("div",{className:"row",children:n})]})};r.a.setLevel("debug");const Nt="feat/add-active-account-selection";Nt.length&&"/basilisk-ui/".concat(Nt,"/app");var ft=()=>Object(Qe.jsx)(He,{children:Object(Qe.jsx)(Xe.a,{children:Object(Qe.jsx)(gt,{children:Object(Qe.jsx)(Dn,{})})})});var jt=e=>{e&&e instanceof Function&&t.e(5).then(t.bind(null,303)).then((n=>{let{getCLS:t,getFID:i,getFCP:a,getLCP:s,getTTFB:l}=n;t(e),i(e),a(e),s(e),l(e)}))};t(250);s.a.render(Object(Qe.jsx)(ft,{}),document.getElementById("root")),jt()},73:function(e,n){}},[[251,1,2]]]);
//# sourceMappingURL=main.b5029f08.chunk.js.map