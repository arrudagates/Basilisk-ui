(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"./.storybook/preview.js-generated-config-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,"parameters",(function(){return parameters}));var ClientApi=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),esm=__webpack_require__("./node_modules/@storybook/client-logger/dist/esm/index.js");const parameters={actions:{argTypesRegex:"^on[A-Z].*"},backgrounds:{default:"full-page",values:[{name:"full-page",value:"linear-gradient(107.54deg, #373741 47.92%, #424250 100%);"}]},controls:{matchers:{color:/(background|color)$/i,date:/Date$/}}};function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":case"argTypes":return esm.a.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify(value));case"decorators":return value.forEach((function(decorator){return Object(ClientApi.d)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return Object(ClientApi.e)(loader,!1)}));case"parameters":return Object(ClientApi.f)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return Object(ClientApi.b)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return Object(ClientApi.c)(enhancer)}));case"render":return Object(ClientApi.g)(value);case"globals":case"globalTypes":var v={};return v[key]=value,Object(ClientApi.f)(v,!1);case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./generated-stories-entry.js":function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js").configure)([__webpack_require__("./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.mdx)$"),__webpack_require__("./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx))$")],module,!1)}).call(this,__webpack_require__("./node_modules/@storybook/builder-webpack4/node_modules/webpack/buildin/module.js")(module))},"./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx))$":function(module,exports,__webpack_require__){var map={"./components/Balance/AssetBalanceInput/AssetBalanceInput.stories.tsx":"./src/components/Balance/AssetBalanceInput/AssetBalanceInput.stories.tsx","./components/Balance/BalanceInput/BalanceInput.stories.tsx":"./src/components/Balance/BalanceInput/BalanceInput.stories.tsx","./components/Balance/FormattedBalance/FormattedBalance.stories.tsx":"./src/components/Balance/FormattedBalance/FormattedBalance.stories.tsx","./components/Button/Button.stories.tsx":"./src/components/Button/Button.stories.tsx","./components/Chart/ChartHeader/ChartHeader.stories.tsx":"./src/components/Chart/ChartHeader/ChartHeader.stories.tsx","./components/Chart/ChartTicks/ChartTicks.stories.tsx":"./src/components/Chart/ChartTicks/ChartTicks.stories.tsx","./components/Chart/LineChart/LineChart.stories.tsx":"./src/components/Chart/LineChart/LineChart.stories.tsx","./components/Chart/TradeChart/TradeChart.stories.tsx":"./src/components/Chart/TradeChart/TradeChart.stories.tsx","./components/Navigation/ActionBar.stories.tsx":"./src/components/Navigation/ActionBar.stories.tsx","./components/Navigation/Navigation.stories.tsx":"./src/components/Navigation/Navigation.stories.tsx","./components/Wallet/Wallet.stories.tsx":"./src/components/Wallet/Wallet.stories.tsx","./misc/Colors.stories.tsx":"./src/misc/Colors.stories.tsx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx))$"},"./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.mdx)$":function(module,exports){function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=function(){return[]},webpackEmptyContext.resolve=webpackEmptyContext,module.exports=webpackEmptyContext,webpackEmptyContext.id="./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.mdx)$"},"./src/components/Balance/AssetBalanceInput/AssetBalanceInput.scss":function(module,exports,__webpack_require__){},"./src/components/Balance/AssetBalanceInput/AssetBalanceInput.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));var react=__webpack_require__("./node_modules/react/index.js"),index_esm=__webpack_require__("./node_modules/react-hook-form/dist/index.esm.js"),metricUnit=__webpack_require__("./src/components/Balance/metricUnit.tsx"),BalanceInput=__webpack_require__("./src/components/Balance/BalanceInput/BalanceInput.tsx"),useModalPortal=__webpack_require__("./src/components/Balance/AssetBalanceInput/hooks/useModalPortal.tsx"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const AssetItem=_ref=>{let{asset:asset,onClick:onClick,active:active}=_ref;return Object(jsx_runtime.jsx)("div",{className:"asset-selector__asset-item "+classnames_default()({active:active}),onClick:onClick,children:asset.id})};try{AssetItem.displayName="AssetItem",AssetItem.__docgenInfo={description:"",displayName:"AssetItem",props:{asset:{defaultValue:null,description:"",name:"asset",required:!0,type:{name:"Asset"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!0,type:{name:"() => void"}},active:{defaultValue:null,description:"",name:"active",required:!0,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Balance/AssetBalanceInput/AssetSelector/AssetItem/AssetItem.tsx#AssetItem"]={docgenInfo:AssetItem.__docgenInfo,name:"AssetItem",path:"src/components/Balance/AssetBalanceInput/AssetSelector/AssetItem/AssetItem.tsx#AssetItem"})}catch(__react_docgen_typescript_loader_error){}__webpack_require__("./src/components/Balance/AssetBalanceInput/AssetSelector/AssetSelector.scss");const AssetSelector_AssetSelector=_ref=>{let{assets:assets,onAssetSelected:onAssetSelected,asset:asset,innerRef:innerRef}=_ref;const activeAsset=Object(react.useMemo)((()=>asset),[asset]);return Object(jsx_runtime.jsxs)("div",{className:"asset-selector",ref:innerRef,children:[Object(jsx_runtime.jsx)("div",{className:"asset-selector__heading",children:"Select an asset"}),null==assets?void 0:assets.map(((asset,i)=>Object(jsx_runtime.jsx)(AssetItem,{onClick:()=>onAssetSelected(asset),active:asset.id===(null==activeAsset?void 0:activeAsset.id),asset:asset},i)))]})};try{AssetSelector_AssetSelector.displayName="AssetSelector",AssetSelector_AssetSelector.__docgenInfo={description:"Renders a list of assets that the user can select an asset from",displayName:"AssetSelector",props:{assets:{defaultValue:null,description:"",name:"assets",required:!1,type:{name:"Asset[]"}},asset:{defaultValue:null,description:"",name:"asset",required:!1,type:{name:"Asset"}},onAssetSelected:{defaultValue:null,description:"",name:"onAssetSelected",required:!0,type:{name:"(asset: Asset) => void"}},innerRef:{defaultValue:null,description:"",name:"innerRef",required:!0,type:{name:"MutableRefObject<HTMLDivElement | null>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Balance/AssetBalanceInput/AssetSelector/AssetSelector.tsx#AssetSelector"]={docgenInfo:AssetSelector_AssetSelector.__docgenInfo,name:"AssetSelector",path:"src/components/Balance/AssetBalanceInput/AssetSelector/AssetSelector.tsx#AssetSelector"})}catch(__react_docgen_typescript_loader_error){}const useModalPortalElement=_ref=>{let{assets:assets,onAssetSelected:onAssetSelected,asset:asset}=_ref;const handleAssetSelected=Object(react.useCallback)((closeModal=>asset=>{closeModal(),onAssetSelected(asset)}),[onAssetSelected]);return Object(react.useCallback)((_ref2=>{let{closeModal:closeModal,elementRef:elementRef,isModalOpen:isModalOpen}=_ref2;return isModalOpen?Object(jsx_runtime.jsx)(AssetSelector_AssetSelector,{innerRef:elementRef,assets:assets,asset:asset,onAssetSelected:handleAssetSelected(closeModal)}):Object(jsx_runtime.jsx)(jsx_runtime.Fragment,{})}),[assets,asset,handleAssetSelected])};try{useModalPortalElement.displayName="useModalPortalElement",useModalPortalElement.__docgenInfo={description:"",displayName:"useModalPortalElement",props:{asset:{defaultValue:null,description:"",name:"asset",required:!1,type:{name:"Asset"}},assets:{defaultValue:null,description:"",name:"assets",required:!1,type:{name:"Asset[]"}},onAssetSelected:{defaultValue:null,description:"",name:"onAssetSelected",required:!0,type:{name:"(asset: Asset) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Balance/AssetBalanceInput/hooks/useModalPortalElement.tsx#useModalPortalElement"]={docgenInfo:useModalPortalElement.__docgenInfo,name:"useModalPortalElement",path:"src/components/Balance/AssetBalanceInput/hooks/useModalPortalElement.tsx#useModalPortalElement"})}catch(__react_docgen_typescript_loader_error){}__webpack_require__("./src/components/Balance/AssetBalanceInput/AssetBalanceInput.scss");var MetricUnitSelector=__webpack_require__("./src/components/Balance/BalanceInput/MetricUnitSelector/MetricUnitSelector.tsx"),useDefaultUnit=__webpack_require__("./src/components/Balance/BalanceInput/hooks/useDefaultUnit.tsx");const AssetBalanceInput_AssetBalanceInput=_ref=>{let{modalContainerRef:modalContainerRef,name:name,defaultUnit:defaultUnit=metricUnit.a.NONE,asset:asset,assets:assets,isAssetSelectable:isAssetSelectable=!0,onAssetSelected:onAssetSelected}=_ref;const modalPortalElement=useModalPortalElement({assets:assets,onAssetSelected:onAssetSelected,asset:asset}),{toggleModal:toggleModal,modalPortal:modalPortal,toggleId:toggleId}=Object(useModalPortal.a)(modalPortalElement,modalContainerRef,!1),{unit:unit,setUnit:setUnit}=Object(useDefaultUnit.a)(defaultUnit),handleAssetSelectorClick=Object(react.useCallback)((()=>isAssetSelectable&&toggleModal()),[isAssetSelectable,toggleModal]);return Object(jsx_runtime.jsxs)("div",{className:"asset-balance-input flex-container",children:[modalPortal,Object(jsx_runtime.jsx)("div",{className:"asset-balance-input__asset-icon",onClick:_=>handleAssetSelectorClick(),"data-modal-portal-toggle":toggleId,children:Object(jsx_runtime.jsx)("div",{children:null==asset?void 0:asset.id})}),Object(jsx_runtime.jsx)("div",{className:"asset-balance-input__input-wrapper",children:Object(jsx_runtime.jsx)(BalanceInput.a,{name:name,defaultUnit:unit,showMetricUnitSelector:!1})}),Object(jsx_runtime.jsxs)("div",{className:"asset-balance-input__info flex-container column",children:[Object(jsx_runtime.jsx)(MetricUnitSelector.a,{unit:unit,onUnitSelected:setUnit}),Object(jsx_runtime.jsx)("div",{className:"asset-balance-input__asset-suffix",children:Object(jsx_runtime.jsx)("div",{children:null==asset?void 0:asset.id})})]})]})};try{AssetBalanceInput_AssetBalanceInput.displayName="AssetBalanceInput",AssetBalanceInput_AssetBalanceInput.__docgenInfo={description:"",displayName:"AssetBalanceInput",props:{modalContainerRef:{defaultValue:null,description:"",name:"modalContainerRef",required:!0,type:{name:"MutableRefObject<HTMLDivElement | null>"}},name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},defaultUnit:{defaultValue:{value:"MetricUnit.NONE"},description:"",name:"defaultUnit",required:!1,type:{name:"enum",value:[{value:'"T"'},{value:'"G"'},{value:'"M"'},{value:'"k"'},{value:'""'},{value:'"m"'},{value:'"µ"'},{value:'"n"'},{value:'"p"'}]}},asset:{defaultValue:null,description:"",name:"asset",required:!1,type:{name:"Asset"}},assets:{defaultValue:null,description:"",name:"assets",required:!1,type:{name:"Asset[]"}},isAssetSelectable:{defaultValue:{value:"true"},description:"",name:"isAssetSelectable",required:!1,type:{name:"boolean"}},onAssetSelected:{defaultValue:null,description:"",name:"onAssetSelected",required:!0,type:{name:"(asset: Asset) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Balance/AssetBalanceInput/AssetBalanceInput.tsx#AssetBalanceInput"]={docgenInfo:AssetBalanceInput_AssetBalanceInput.__docgenInfo,name:"AssetBalanceInput",path:"src/components/Balance/AssetBalanceInput/AssetBalanceInput.tsx#AssetBalanceInput"})}catch(__react_docgen_typescript_loader_error){}var colors_module=__webpack_require__("./src/misc/colors.module.scss"),colors_module_default=__webpack_require__.n(colors_module),StorybookWrapper=__webpack_require__("./src/misc/StorybookWrapper.tsx");__webpack_require__("./src/components/Balance/AssetBalanceInput/AssetBalanceInput2.scss"),__webpack_exports__.default={title:"components/Balance/AssetBalanceInput",component:AssetBalanceInput_AssetBalanceInput,args:{asset:{id:"BSX"},assets:[{id:"BSX"},{id:"kUSD"}],defaultUnit:metricUnit.a.k,name:"test-input"}};const Default=(args=>{const modalContainerRef=Object(react.useRef)(null),methods=Object(index_esm.c)();return Object(jsx_runtime.jsx)(StorybookWrapper.a,{children:Object(jsx_runtime.jsxs)("div",{style:{margin:"-1rem",padding:"1rem",backgroundColor:colors_module_default.a.gray2},children:[Object(jsx_runtime.jsx)("div",{ref:modalContainerRef}),Object(jsx_runtime.jsx)(index_esm.b,{...methods,children:Object(jsx_runtime.jsxs)("form",{onSubmit:methods.handleSubmit((()=>{})),children:[Object(jsx_runtime.jsx)(AssetBalanceInput_AssetBalanceInput,{...args,modalContainerRef:modalContainerRef}),Object(jsx_runtime.jsx)("br",{}),Object(jsx_runtime.jsx)("div",{className:"style2",children:Object(jsx_runtime.jsx)(AssetBalanceInput_AssetBalanceInput,{...args,modalContainerRef:modalContainerRef})}),Object(jsx_runtime.jsx)("br",{}),Object(jsx_runtime.jsxs)("div",{style:{width:"325px"},children:[Object(jsx_runtime.jsx)(AssetBalanceInput_AssetBalanceInput,{...args,modalContainerRef:modalContainerRef}),Object(jsx_runtime.jsx)("br",{}),Object(jsx_runtime.jsx)("div",{className:"style2",children:Object(jsx_runtime.jsx)(AssetBalanceInput_AssetBalanceInput,{...args,modalContainerRef:modalContainerRef})})]})]})})]})})}).bind({})},"./src/components/Balance/AssetBalanceInput/AssetBalanceInput2.scss":function(module,exports,__webpack_require__){},"./src/components/Balance/AssetBalanceInput/AssetSelector/AssetSelector.scss":function(module,exports,__webpack_require__){},"./src/components/Balance/AssetBalanceInput/hooks/useModalPortal.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return useModalPortal}));var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_dom__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-dom/index.js"),use_hooks__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/use-hooks/dist/es2015/index.js"),uuid__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js");const useModalPortal=function(elementFactory,container){let closeOnClickOutside=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const[modalPortal,setModalPortal]=Object(react__WEBPACK_IMPORTED_MODULE_0__.useState)(),[isModalOpen,setIsModalOpen]=Object(react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),toggleModal=Object(react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((()=>setIsModalOpen((isModalOpen=>!isModalOpen))),[setIsModalOpen]),openModal=Object(react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((()=>setIsModalOpen(!0)),[setIsModalOpen]),closeModal=Object(react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((()=>setIsModalOpen(!1)),[setIsModalOpen]),elementRef=Object(react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),toggleId=Object(react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>Object(uuid__WEBPACK_IMPORTED_MODULE_3__.a)()),[]),element=Object(react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>elementFactory({toggleModal:toggleModal,openModal:openModal,closeModal:closeModal,elementRef:elementRef,isModalOpen:isModalOpen})),[elementFactory,toggleModal,openModal,closeModal,isModalOpen,elementRef]);return Object(react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{container.current&&element&&setModalPortal(Object(react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal)(element,container.current))}),[container.current,element]),Object(use_hooks__WEBPACK_IMPORTED_MODULE_2__.c)(elementRef,(event=>{const didClickOutsideToggle=!event.target.closest('[data-modal-portal-toggle="'.concat(toggleId,'"]'));closeOnClickOutside&&didClickOutsideToggle&&closeModal()})),{toggleModal:toggleModal,openModal:openModal,closeModal:closeModal,isModalOpen:isModalOpen,toggleId:toggleId,modalPortal:modalPortal}}},"./src/components/Balance/BalanceInput/BalanceInput.scss":function(module,exports,__webpack_require__){},"./src/components/Balance/BalanceInput/BalanceInput.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_hook_form__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-hook-form/dist/index.esm.js"),_hooks_math_useFromPrecision__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/hooks/math/useFromPrecision.tsx"),_metricUnit__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Balance/metricUnit.tsx"),_BalanceInput__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/Balance/BalanceInput/BalanceInput.tsx"),_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/misc/colors.module.scss"),_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_5__),_misc_StorybookWrapper__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/misc/StorybookWrapper.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/react/jsx-runtime.js");const args={props:[{defaultUnit:_metricUnit__WEBPACK_IMPORTED_MODULE_3__.a.k,name:"balanceInputExample_k"},{defaultUnit:_metricUnit__WEBPACK_IMPORTED_MODULE_3__.a.NONE,name:"balanceInputExample_NONE"},{defaultUnit:_metricUnit__WEBPACK_IMPORTED_MODULE_3__.a.m,name:"balanceInputExample_m"},{defaultUnit:_metricUnit__WEBPACK_IMPORTED_MODULE_3__.a.p,name:"balanceInputExample_p"},{showMetricUnitSelector:!1,name:"balanceInputExample_NO_SELECTOR"}]};__webpack_exports__.default={title:"components/Balance/BalanceInput",component:_BalanceInput__WEBPACK_IMPORTED_MODULE_4__.a,args:args};const Default=(args=>{const methods=Object(react_hook_form__WEBPACK_IMPORTED_MODULE_1__.c)({}),onSubmit=Object(react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((data=>{Object.keys(data).forEach((key=>{console.log(Object(_hooks_math_useFromPrecision__WEBPACK_IMPORTED_MODULE_2__.a)(data[key]))}))}),[]);return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_misc_StorybookWrapper__WEBPACK_IMPORTED_MODULE_6__.a,{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(react_hook_form__WEBPACK_IMPORTED_MODULE_1__.b,{...methods,children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("form",{style:{margin:"-1rem",padding:"1rem",backgroundColor:_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_5___default.a.gray2},onSubmit:methods.handleSubmit(onSubmit),children:[args.props.map(((args,i)=>Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.Fragment,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_BalanceInput__WEBPACK_IMPORTED_MODULE_4__.a,{...args},i),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("br",{})]}))),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("br",{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("input",{type:"submit"})]})})})}).bind({});try{Default.displayName="Default",Default.__docgenInfo={description:"",displayName:"Default",props:{props:{defaultValue:null,description:"",name:"props",required:!0,type:{name:"BalanceInputProps[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Balance/BalanceInput/BalanceInput.stories.tsx#Default"]={docgenInfo:Default.__docgenInfo,name:"Default",path:"src/components/Balance/BalanceInput/BalanceInput.stories.tsx#Default"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Balance/BalanceInput/BalanceInput.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return thousandsSeparatorSymbol})),__webpack_require__.d(__webpack_exports__,"a",(function(){return BalanceInput_BalanceInput}));var loglevel=__webpack_require__("./node_modules/loglevel/lib/loglevel.js"),loglevel_default=__webpack_require__.n(loglevel),react=__webpack_require__("./node_modules/react/index.js"),reactTextMask=__webpack_require__("./node_modules/react-text-mask/dist/reactTextMask.js"),reactTextMask_default=__webpack_require__.n(reactTextMask),createNumberMask=__webpack_require__("./node_modules/text-mask-addons/dist/createNumberMask.js"),createNumberMask_default=__webpack_require__.n(createNumberMask),index_esm=__webpack_require__("./node_modules/react-hook-form/dist/index.esm.js"),metricUnit=__webpack_require__("./src/components/Balance/metricUnit.tsx"),MetricUnitSelector=__webpack_require__("./src/components/Balance/BalanceInput/MetricUnitSelector/MetricUnitSelector.tsx"),useDefaultUnit=__webpack_require__("./src/components/Balance/BalanceInput/hooks/useDefaultUnit.tsx");const useHandleOnChange=_ref=>{let{setValue:setValue,name:name,unit:unit}=_ref;const[rawValue,setRawValue]=Object(react.useState)(),setValueAs=Object(react.useCallback)((value=>{var _value;value=null===(_value=value)||void 0===_value?void 0:_value.replaceAll(thousandsSeparatorSymbol,"");const formattedValue=Object(metricUnit.c)(value,unit);return loglevel_default.a.debug("BalanceInput","setValueAs",value,formattedValue,unit),formattedValue}),[metricUnit.c,unit]),handleOnChange=Object(react.useCallback)(((field,e)=>{const value=e.target.value;field.onChange(setValueAs(value)),setRawValue(value)}),[setValueAs,setRawValue]);return Object(react.useEffect)((()=>{loglevel_default.a.debug("BalanceInput","unit changed",rawValue,unit),setValue(name,setValueAs(rawValue))}),[unit]),handleOnChange};try{useHandleOnChange.displayName="useHandleOnChange",useHandleOnChange.__docgenInfo={description:"",displayName:"useHandleOnChange",props:{setValue:{defaultValue:null,description:"",name:"setValue",required:!0,type:{name:"UseFormSetValue<any>"}},name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},unit:{defaultValue:null,description:"",name:"unit",required:!0,type:{name:"enum",value:[{value:'"T"'},{value:'"G"'},{value:'"M"'},{value:'"k"'},{value:'""'},{value:'"m"'},{value:'"µ"'},{value:'"n"'},{value:'"p"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Balance/BalanceInput/hooks/useHandleOnChange.tsx#useHandleOnChange"]={docgenInfo:useHandleOnChange.__docgenInfo,name:"useHandleOnChange",path:"src/components/Balance/BalanceInput/hooks/useHandleOnChange.tsx#useHandleOnChange"})}catch(__react_docgen_typescript_loader_error){}var classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),jsx_runtime=(__webpack_require__("./src/components/Balance/BalanceInput/BalanceInput.scss"),__webpack_require__("./node_modules/react/jsx-runtime.js"));loglevel_default.a.setDefaultLevel("debug");const thousandsSeparatorSymbol=" ",currencyMaskOptions={prefix:"",suffix:"",includeThousandsSeparator:!0,thousandsSeparatorSymbol:thousandsSeparatorSymbol,allowDecimal:!0,decimalSymbol:".",decimalLimit:12,allowNegative:!1,allowLeadingZeroes:!1},BalanceInput_BalanceInput=_ref=>{let{name:name,defaultUnit:defaultUnit=metricUnit.a.NONE,showMetricUnitSelector:showMetricUnitSelector=!0}=_ref;const{control:control,setValue:setValue,getValues:getValues}=Object(index_esm.d)(),[rawValue,setRawValue]=Object(react.useState)(),{unit:unit,setUnit:setUnit}=Object(useDefaultUnit.a)(defaultUnit),currencyMask=Object(react.useMemo)((()=>createNumberMask_default()({...currencyMaskOptions})),[unit]),handleOnChange=useHandleOnChange({setValue:setValue,unit:unit,name:name});return Object(jsx_runtime.jsxs)("div",{className:"balance-input flex-container "+classnames_default()({"no-selector":!showMetricUnitSelector}),children:[Object(jsx_runtime.jsx)("div",{className:"balance-input__input-wrapper",children:Object(jsx_runtime.jsx)(index_esm.a,{control:control,name:name,render:_ref2=>{let{field:field}=_ref2;return Object(jsx_runtime.jsx)(reactTextMask_default.a,{mask:currencyMask,ref:field.ref,onChange:e=>handleOnChange(field,e)})}})}),showMetricUnitSelector?Object(jsx_runtime.jsx)("div",{className:"balance-input__info flex-container column",children:Object(jsx_runtime.jsx)(MetricUnitSelector.a,{unit:unit,onUnitSelected:setUnit})}):Object(jsx_runtime.jsx)(jsx_runtime.Fragment,{})]})};try{BalanceInput_BalanceInput.displayName="BalanceInput",BalanceInput_BalanceInput.__docgenInfo={description:"",displayName:"BalanceInput",props:{defaultUnit:{defaultValue:{value:"MetricUnit.NONE"},description:"",name:"defaultUnit",required:!1,type:{name:"enum",value:[{value:'"T"'},{value:'"G"'},{value:'"M"'},{value:'"k"'},{value:'""'},{value:'"m"'},{value:'"µ"'},{value:'"n"'},{value:'"p"'}]}},name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},showMetricUnitSelector:{defaultValue:{value:"true"},description:"",name:"showMetricUnitSelector",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Balance/BalanceInput/BalanceInput.tsx#BalanceInput"]={docgenInfo:BalanceInput_BalanceInput.__docgenInfo,name:"BalanceInput",path:"src/components/Balance/BalanceInput/BalanceInput.tsx#BalanceInput"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Balance/BalanceInput/MetricUnitSelector/MetricUnitSelector.scss":function(module,exports,__webpack_require__){},"./src/components/Balance/BalanceInput/MetricUnitSelector/MetricUnitSelector.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return MetricUnitSelector_MetricUnitSelector}));var react=__webpack_require__("./node_modules/react/index.js"),useModalPortal=__webpack_require__("./src/components/Balance/AssetBalanceInput/hooks/useModalPortal.tsx"),Balance_metricUnit=__webpack_require__("./src/components/Balance/metricUnit.tsx"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const MetricUnitItem=_ref=>{let{metricUnit:metricUnit,onClick:onClick,active:active}=_ref;return Object(jsx_runtime.jsx)("div",{className:"metric-unit-list-item "+classnames_default()({active:active}),onClick:_=>onClick(),children:Balance_metricUnit.d[metricUnit]})};try{MetricUnitItem.displayName="MetricUnitItem",MetricUnitItem.__docgenInfo={description:"",displayName:"MetricUnitItem",props:{metricUnit:{defaultValue:null,description:"",name:"metricUnit",required:!0,type:{name:"enum",value:[{value:'"T"'},{value:'"G"'},{value:'"M"'},{value:'"k"'},{value:'""'},{value:'"m"'},{value:'"µ"'},{value:'"n"'},{value:'"p"'}]}},onClick:{defaultValue:null,description:"",name:"onClick",required:!0,type:{name:"() => void"}},active:{defaultValue:null,description:"",name:"active",required:!0,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Balance/BalanceInput/MetricUnitSelector/MetricUnitItem/MetricUnitItem.tsx#MetricUnitItem"]={docgenInfo:MetricUnitItem.__docgenInfo,name:"MetricUnitItem",path:"src/components/Balance/BalanceInput/MetricUnitSelector/MetricUnitItem/MetricUnitItem.tsx#MetricUnitItem"})}catch(__react_docgen_typescript_loader_error){}const useModalPortalElement=_ref=>{let{units:units,onUnitSelected:onUnitSelected,unit:unit}=_ref;const handleUnitSelected=Object(react.useCallback)((closeModal=>unit=>{closeModal(),onUnitSelected(unit)}),[onUnitSelected]),activeUnit=Object(react.useMemo)((()=>unit),[unit]);return Object(react.useCallback)((_ref2=>{let{closeModal:closeModal,elementRef:elementRef,isModalOpen:isModalOpen}=_ref2;return Object(jsx_runtime.jsx)("div",{className:"metric-unit-selector__unit-list flex-container column",ref:elementRef,children:isModalOpen?Object(jsx_runtime.jsx)(jsx_runtime.Fragment,{children:null==units?void 0:units.map(((unit,i)=>Object(jsx_runtime.jsx)(MetricUnitItem,{metricUnit:unit,active:unit===activeUnit,onClick:()=>handleUnitSelected(closeModal)(unit)},i)))}):Object(jsx_runtime.jsx)(jsx_runtime.Fragment,{})})}),[handleUnitSelected,activeUnit,unit])};try{useModalPortalElement.displayName="useModalPortalElement",useModalPortalElement.__docgenInfo={description:"",displayName:"useModalPortalElement",props:{unit:{defaultValue:null,description:"",name:"unit",required:!0,type:{name:"enum",value:[{value:'"T"'},{value:'"G"'},{value:'"M"'},{value:'"k"'},{value:'""'},{value:'"m"'},{value:'"µ"'},{value:'"n"'},{value:'"p"'}]}},units:{defaultValue:null,description:"",name:"units",required:!1,type:{name:"MetricUnit[]"}},onUnitSelected:{defaultValue:null,description:"",name:"onUnitSelected",required:!0,type:{name:"(unit: MetricUnit) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Balance/BalanceInput/MetricUnitSelector/hooks/useModalPortalElement.tsx#useModalPortalElement"]={docgenInfo:useModalPortalElement.__docgenInfo,name:"useModalPortalElement",path:"src/components/Balance/BalanceInput/MetricUnitSelector/hooks/useModalPortalElement.tsx#useModalPortalElement"})}catch(__react_docgen_typescript_loader_error){}__webpack_require__("./src/components/Balance/BalanceInput/MetricUnitSelector/MetricUnitSelector.scss");const MetricUnitSelector_MetricUnitSelector=_ref=>{let{unit:unit,units:units=Object.values(Balance_metricUnit.a),onUnitSelected:onUnitSelected}=_ref;const selectorContainerRef=Object(react.useRef)(null),modalPortalElement=useModalPortalElement({units:units,onUnitSelected:onUnitSelected,unit:unit}),{modalPortal:modalPortal,openModal:openModal,toggleId:toggleId}=Object(useModalPortal.a)(modalPortalElement,selectorContainerRef,!0),handleUnitClick=Object(react.useCallback)(openModal,[openModal]);return Object(jsx_runtime.jsxs)("div",{className:"metric-unit-selector",children:[Object(jsx_runtime.jsxs)("div",{className:"metric-unit-selector__select flex-container",onClick:handleUnitClick,"data-modal-portal-toggle":toggleId,children:[Object(jsx_runtime.jsx)("div",{className:"metric-unit-selector__unit",children:Balance_metricUnit.d[unit]}),Object(jsx_runtime.jsx)("div",{className:"metric-unit-selector__icon",children:"v"})]}),Object(jsx_runtime.jsx)("div",{ref:selectorContainerRef}),modalPortal]})};try{MetricUnitSelector_MetricUnitSelector.displayName="MetricUnitSelector",MetricUnitSelector_MetricUnitSelector.__docgenInfo={description:"",displayName:"MetricUnitSelector",props:{unit:{defaultValue:null,description:"",name:"unit",required:!0,type:{name:"enum",value:[{value:'"T"'},{value:'"G"'},{value:'"M"'},{value:'"k"'},{value:'""'},{value:'"m"'},{value:'"µ"'},{value:'"n"'},{value:'"p"'}]}},units:{defaultValue:{value:"Object.values(MetricUnit)"},description:"",name:"units",required:!1,type:{name:"MetricUnit[]"}},onUnitSelected:{defaultValue:null,description:"",name:"onUnitSelected",required:!0,type:{name:"(unit: MetricUnit) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Balance/BalanceInput/MetricUnitSelector/MetricUnitSelector.tsx#MetricUnitSelector"]={docgenInfo:MetricUnitSelector_MetricUnitSelector.__docgenInfo,name:"MetricUnitSelector",path:"src/components/Balance/BalanceInput/MetricUnitSelector/MetricUnitSelector.tsx#MetricUnitSelector"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Balance/BalanceInput/hooks/useDefaultUnit.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return useDefaultUnit}));var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const useDefaultUnit=defaultUnit=>{const[unit,setUnit]=Object(react__WEBPACK_IMPORTED_MODULE_0__.useState)(defaultUnit);return Object(react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{setUnit(defaultUnit)}),[defaultUnit,setUnit]),{unit:unit,setUnit:setUnit}};try{useDefaultUnit.displayName="useDefaultUnit",useDefaultUnit.__docgenInfo={description:"",displayName:"useDefaultUnit",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Balance/BalanceInput/hooks/useDefaultUnit.tsx#useDefaultUnit"]={docgenInfo:useDefaultUnit.__docgenInfo,name:"useDefaultUnit",path:"src/components/Balance/BalanceInput/hooks/useDefaultUnit.tsx#useDefaultUnit"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Balance/FormattedBalance/FormattedBalance.scss":function(module,exports,__webpack_require__){},"./src/components/Balance/FormattedBalance/FormattedBalance.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default})),__webpack_require__.d(__webpack_exports__,"ShortSuffix",(function(){return ShortSuffix}));var _FormattedBalance__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/Balance/FormattedBalance/FormattedBalance.tsx"),_hooks_math_useToPrecision__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/hooks/math/useToPrecision.tsx"),_metricUnit__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Balance/metricUnit.tsx"),_misc_StorybookWrapper__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/misc/StorybookWrapper.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/react/jsx-runtime.js");const args={balance:{assetId:"0",balance:Object(_hooks_math_useToPrecision__WEBPACK_IMPORTED_MODULE_1__.a)("1123456")},precision:2,unitStyle:_metricUnit__WEBPACK_IMPORTED_MODULE_2__.b.LONG};__webpack_exports__.default={title:"components/Balance/FormattedBalance",component:_FormattedBalance__WEBPACK_IMPORTED_MODULE_0__.a,args:args};const Template=args=>Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div",{className:"flex-container column",style:{textAlign:"end",width:"fit-content"},children:["0.000000001","0.000000012","0.00000012","0.0000012","0.000012","0.00012","0.0012","0.012","0.01","0.1","1","11","112","1123","11231","112312","1123123","11231231","112312312","1123123123","11231231231","112312312312","12560.5"].map((balance=>Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_misc_StorybookWrapper__WEBPACK_IMPORTED_MODULE_3__.a,{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_FormattedBalance__WEBPACK_IMPORTED_MODULE_0__.a,{...args,balance:{...args.balance,balance:Object(_hooks_math_useToPrecision__WEBPACK_IMPORTED_MODULE_1__.a)(balance)}})})))}),Default=Template.bind({}),ShortSuffix=Template.bind({});ShortSuffix.args={unitStyle:_metricUnit__WEBPACK_IMPORTED_MODULE_2__.b.SHORT}},"./src/components/Balance/FormattedBalance/FormattedBalance.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return FormattedBalance_FormattedBalance}));var react=__webpack_require__("./node_modules/react/index.js"),loglevel=__webpack_require__("./node_modules/loglevel/lib/loglevel.js"),loglevel_default=__webpack_require__.n(loglevel),metricUnit=(__webpack_require__("./src/components/Balance/FormattedBalance/FormattedBalance.scss"),__webpack_require__("./src/components/Balance/metricUnit.tsx")),index_es=__webpack_require__("./node_modules/@gapit/format-si/dist/index.es.js"),useFromPrecision=__webpack_require__("./src/hooks/math/useFromPrecision.tsx");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const assetIdNameMap={0:{symbol:"BSX",fullName:"Basilisk"}},FormattedBalance_FormattedBalance=_ref=>{let{balance:balance,precision:precision=3,unitStyle:unitStyle=metricUnit.b.LONG}=_ref;const assetSymbol=Object(react.useMemo)((()=>{var _assetIdNameMap$balan;return null===(_assetIdNameMap$balan=assetIdNameMap[balance.assetId])||void 0===_assetIdNameMap$balan?void 0:_assetIdNameMap$balan.symbol}),[balance.assetId]),formattedBalance=((precision,unitStyle,number)=>{const formattedBalance=Object(react.useMemo)((()=>{const balanceWithPrecision12=Object(useFromPrecision.a)(number);if(!balanceWithPrecision12)return;let siFormat=Object(index_es.b)(balanceWithPrecision12,"",precision);const unitName=metricUnit.d[siFormat.unit];return{...siFormat,unitName:unitName}}),[number,precision]),numberOfDecimalPlaces=Object(react.useMemo)((()=>{var _formattedBalance$val,_formattedBalance$val2;return null==formattedBalance||null===(_formattedBalance$val=formattedBalance.value)||void 0===_formattedBalance$val||null===(_formattedBalance$val2=_formattedBalance$val.split(".")[1])||void 0===_formattedBalance$val2?void 0:_formattedBalance$val2.length}),[formattedBalance]),suffix=Object(react.useMemo)((()=>{if(!formattedBalance)return;const unit=formattedBalance.unit,unitName=""===unit?"":formattedBalance.unitName,displayUnit=unitStyle===metricUnit.b.LONG&&unitName||unit;return" ".concat(displayUnit)}),[formattedBalance,unitStyle]);return{...formattedBalance,numberOfDecimalPlaces:numberOfDecimalPlaces,suffix:suffix}})(precision,unitStyle,balance.balance);return loglevel_default.a.debug("FormattedBalance",null==formattedBalance?void 0:formattedBalance.value,null==formattedBalance?void 0:formattedBalance.unit,null==formattedBalance?void 0:formattedBalance.numberOfDecimalPlaces),Object(jsx_runtime.jsxs)("div",{className:"formatted-balance flex-container",children:[Object(jsx_runtime.jsx)("div",{className:"formatted-balance__value",children:formattedBalance.value}),Object(jsx_runtime.jsx)("div",{className:"formatted-balance__suffix ".concat(unitStyle.toLowerCase()),children:formattedBalance.suffix}),Object(jsx_runtime.jsx)("div",{className:"formatted-balance__symbol",children:assetSymbol})]})};try{FormattedBalance_FormattedBalance.displayName="FormattedBalance",FormattedBalance_FormattedBalance.__docgenInfo={description:"",displayName:"FormattedBalance",props:{balance:{defaultValue:null,description:"",name:"balance",required:!0,type:{name:"Balance"}},precision:{defaultValue:{value:"3"},description:"",name:"precision",required:!1,type:{name:"number"}},unitStyle:{defaultValue:{value:"UnitStyle.LONG"},description:"",name:"unitStyle",required:!1,type:{name:"enum",value:[{value:'"LONG"'},{value:'"SHORT"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Balance/FormattedBalance/FormattedBalance.tsx#FormattedBalance"]={docgenInfo:FormattedBalance_FormattedBalance.__docgenInfo,name:"FormattedBalance",path:"src/components/Balance/FormattedBalance/FormattedBalance.tsx#FormattedBalance"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Balance/metricUnit.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return UnitStyle})),__webpack_require__.d(__webpack_exports__,"a",(function(){return MetricUnit})),__webpack_require__.d(__webpack_exports__,"d",(function(){return unitMap})),__webpack_require__.d(__webpack_exports__,"c",(function(){return formatFromSIWithPrecision12}));var _gapit_format_si__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@gapit/format-si/dist/index.es.js"),bignumber_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/bignumber.js/bignumber.js"),bignumber_js__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(bignumber_js__WEBPACK_IMPORTED_MODULE_1__),loglevel__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/loglevel/lib/loglevel.js"),loglevel__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(loglevel__WEBPACK_IMPORTED_MODULE_2__),_hooks_math_useToPrecision__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/hooks/math/useToPrecision.tsx");let UnitStyle,MetricUnit;!function(UnitStyle){UnitStyle.LONG="LONG",UnitStyle.SHORT="SHORT"}(UnitStyle||(UnitStyle={})),function(MetricUnit){MetricUnit.T="T",MetricUnit.G="G",MetricUnit.M="M",MetricUnit.k="k",MetricUnit.NONE="",MetricUnit.m="m",MetricUnit["µ"]="µ",MetricUnit.n="n",MetricUnit.p="p"}(MetricUnit||(MetricUnit={}));const unitMap={T:"tera",G:"giga",M:"mega",k:"kilo","":"unit",m:"mili","µ":"micro",n:"nano",p:"pico"},prefixMap=_gapit_format_si__WEBPACK_IMPORTED_MODULE_0__.a.reduce(((prefixes,prefix)=>({...prefixes,[prefix.metricPrefix]:prefix.base10})),{}),formatFromSIWithPrecision12=(number,metricPrefix)=>{const base10=prefixMap[metricPrefix];if(loglevel__WEBPACK_IMPORTED_MODULE_2___default.a.debug("formatFromSIWithPrecision12","base10",base10,metricPrefix),!base10)return;const formattedResult=new bignumber_js__WEBPACK_IMPORTED_MODULE_1___default.a(number).multipliedBy(base10);return formattedResult.isNaN()?void 0:Object(_hooks_math_useToPrecision__WEBPACK_IMPORTED_MODULE_3__.a)(formattedResult)}},"./src/components/Button/Button.scss":function(module,exports,__webpack_require__){},"./src/components/Button/Button.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));var StorybookWrapper=__webpack_require__("./src/misc/StorybookWrapper.tsx"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),jsx_runtime=(__webpack_require__("./src/components/Button/Button.scss"),__webpack_require__("./node_modules/react/jsx-runtime.js"));let ButtonKind;!function(ButtonKind){ButtonKind.Primary="Primary"}(ButtonKind||(ButtonKind={}));const Button_Button=_ref=>{let{kind:kind=ButtonKind.Primary,children:children}=_ref;return Object(jsx_runtime.jsx)("button",{className:"button "+classnames_default()({"button--primary":kind===ButtonKind.Primary}),children:children})};try{Button_Button.displayName="Button",Button_Button.__docgenInfo={description:"",displayName:"Button",props:{kind:{defaultValue:{value:"ButtonKind.Primary"},description:"",name:"kind",required:!1,type:{name:"enum",value:[{value:'"Primary"'}]}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"(() => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Button/Button.tsx#Button"]={docgenInfo:Button_Button.__docgenInfo,name:"Button",path:"src/components/Button/Button.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}__webpack_exports__.default={title:"components/Button/Button",component:Button_Button};const Default=(()=>Object(jsx_runtime.jsx)(StorybookWrapper.a,{children:Object(jsx_runtime.jsx)("div",{style:{width:"380px"},children:Object(jsx_runtime.jsx)(Button_Button,{kind:ButtonKind.Primary,children:"click here"})})})).bind({})},"./src/components/Chart/ChartHeader/ChartHeader.scss":function(module,exports,__webpack_require__){},"./src/components/Chart/ChartHeader/ChartHeader.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));var _misc_StorybookWrapper__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/misc/StorybookWrapper.tsx"),_shared__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/Chart/shared.tsx"),_ChartHeader__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Chart/ChartHeader/ChartHeader.tsx"),_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/misc/colors.module.scss"),_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_3__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.default={title:"Components/Chart/ChartHeader",component:_ChartHeader__WEBPACK_IMPORTED_MODULE_2__.a,args:{assetPair:{assetA:{symbol:"BSX",fullName:"Basilisk"},assetB:{symbol:"kUSD",fullName:"Karura US Dollar"}},poolType:_shared__WEBPACK_IMPORTED_MODULE_1__.c.LBP,chartType:_shared__WEBPACK_IMPORTED_MODULE_1__.b.PRICE,granularity:_shared__WEBPACK_IMPORTED_MODULE_1__.a.H1,displayData:{balance:400,usdBalance:400,asset:{symbol:"kUSD",fullName:"Karura US Dollar"}},referenceData:{balance:200,usdBalance:200,asset:{symbol:"kUSD",fullName:"Karura US Dollar"}},availableChartTypes:[_shared__WEBPACK_IMPORTED_MODULE_1__.b.PRICE,_shared__WEBPACK_IMPORTED_MODULE_1__.b.VOLUME,_shared__WEBPACK_IMPORTED_MODULE_1__.b.WEIGHTS],availableGranularity:[_shared__WEBPACK_IMPORTED_MODULE_1__.a.D30,_shared__WEBPACK_IMPORTED_MODULE_1__.a.D7,_shared__WEBPACK_IMPORTED_MODULE_1__.a.H24,_shared__WEBPACK_IMPORTED_MODULE_1__.a.H1]}};const Default=(args=>Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_misc_StorybookWrapper__WEBPACK_IMPORTED_MODULE_0__.a,{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div",{style:{backgroundColor:_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_3___default.a.gray2},children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_ChartHeader__WEBPACK_IMPORTED_MODULE_2__.a,{...args})})})).bind({});try{Default.displayName="Default",Default.__docgenInfo={description:"",displayName:"Default",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chart/ChartHeader/ChartHeader.stories.tsx#Default"]={docgenInfo:Default.__docgenInfo,name:"Default",path:"src/components/Chart/ChartHeader/ChartHeader.stories.tsx#Default"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Chart/ChartHeader/ChartHeader.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return ChartHeader}));var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_intl__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-intl/lib/src/components/message.js"),react_intl__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react-intl/lib/index.js"),_LineChart_LineChart__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Chart/LineChart/LineChart.tsx"),_shared__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/Chart/shared.tsx"),percent_change__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/percent-change/index.js"),percent_change__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(percent_change__WEBPACK_IMPORTED_MODULE_5__),classnames__WEBPACK_IMPORTED_MODULE_7__=(__webpack_require__("./src/components/Chart/ChartHeader/ChartHeader.scss"),__webpack_require__("./node_modules/classnames/index.js")),classnames__WEBPACK_IMPORTED_MODULE_7___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_7__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/react/jsx-runtime.js");const formatGranularity=granularity=>Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(react_intl__WEBPACK_IMPORTED_MODULE_1__.a,{id:"ChartHeader.granularity",defaultMessage:"{granularity, select, ALL {ALL} D30 {30D} D7 {7D} D3 {3D} H24 {24H} H12 {12H} H1 {1H} other {".concat("―","}}"),values:{granularity:granularity}}),ChartHeader=_ref=>{var _assetPair$assetB,_assetPair$assetB2;let{assetPair:assetPair,poolType:poolType,displayData:displayData,referenceData:referenceData,chartType:chartType,granularity:granularity,isUserBrowsingGraph:isUserBrowsingGraph,availableChartTypes:availableChartTypes,onChartTypeChange:onChartTypeChange,availableGranularity:availableGranularity,onGranularityChange:onGranularityChange,dataTrend:dataTrend}=_ref;const referenceDataPercentageChange=Object(react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>(null==referenceData?void 0:referenceData.balance)?percent_change__WEBPACK_IMPORTED_MODULE_5___default()(referenceData.balance,displayData.balance):0),[displayData,referenceData]);return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("div",{className:"chart-header",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("div",{className:"flex-container flex-align-space",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("div",{className:"flex-container column",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("div",{className:"flex-container",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("div",{className:"chart-header__pair-symbols",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("div",{children:["".concat(assetPair.assetA.symbol),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("span",{children:" / "}),(null===(_assetPair$assetB=assetPair.assetB)||void 0===_assetPair$assetB?void 0:_assetPair$assetB.symbol)?"".concat(assetPair.assetB.symbol):"―"]})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("div",{className:"chart-header__type-label",children:poolType?Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.Fragment,{children:["[",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(react_intl__WEBPACK_IMPORTED_MODULE_1__.a,{id:"ChartHeader.poolType.label",defaultMessage:"{poolType, select, XYK {XYK} LBP {LBP} other {-}}",values:{poolType:poolType}}),"]"]}):null})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("div",{className:"flex-container",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("div",{className:"text-gray-4 chart-header__pair-full-names",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("div",{children:["".concat(assetPair.assetA.fullName," / "),(null===(_assetPair$assetB2=assetPair.assetB)||void 0===_assetPair$assetB2?void 0:_assetPair$assetB2.fullName)?"".concat(assetPair.assetB.fullName):"―"]})})})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("div",{className:"text-end",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("div",{className:"chart-header__data",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("div",{className:"chart-header__data__in-asset",children:[displayData.balance?Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.Fragment,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(react_intl__WEBPACK_IMPORTED_MODULE_2__.b,{value:displayData.balance,style:"decimal",minimumFractionDigits:2,maximumFractionDigits:2})," "]}):"".concat("―"," "),displayData.asset.symbol]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("div",{className:"flex-container flex-align-right flex-wrap chart-header__data__breakdown",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("div",{className:"text-gray-4",children:displayData.usdBalance?Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(react_intl__WEBPACK_IMPORTED_MODULE_2__.b,{value:displayData.usdBalance,style:"currency",currency:"USD",minimumFractionDigits:2,maximumFractionDigits:2}):"$ ".concat("―")}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("div",{className:classnames__WEBPACK_IMPORTED_MODULE_7___default()({"text-green-1":dataTrend===_LineChart_LineChart__WEBPACK_IMPORTED_MODULE_3__.b.Positive,"text-gray-1":dataTrend===_LineChart_LineChart__WEBPACK_IMPORTED_MODULE_3__.b.Neutral,"text-red-1":dataTrend===_LineChart_LineChart__WEBPACK_IMPORTED_MODULE_3__.b.Negative}),children:["(",referenceDataPercentageChange>=0?"+":"",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(react_intl__WEBPACK_IMPORTED_MODULE_2__.b,{style:"percent",minimumFractionDigits:2,maximumFractionDigits:2,value:referenceDataPercentageChange}),")"]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("div",{className:"text-gray-4 chart-header__data__breakdown__granularity "+classnames__WEBPACK_IMPORTED_MODULE_7___default()({disabled:isUserBrowsingGraph}),children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(react_intl__WEBPACK_IMPORTED_MODULE_1__.a,{id:"ChartHeader.granularity.pastIndicator",defaultMessage:"Past"})," "," "," ",formatGranularity(granularity),(()=>{if(granularity&&poolType===_shared__WEBPACK_IMPORTED_MODULE_4__.c.LBP){if(chartType!==_shared__WEBPACK_IMPORTED_MODULE_4__.b.PRICE)return;return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.Fragment,{children:[" + ",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(react_intl__WEBPACK_IMPORTED_MODULE_1__.a,{id:"ChartHeader.granularity.futureIndicator",defaultMessage:" "})," ",formatGranularity(granularity)]})}})()]})]})]})})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("div",{className:"flex-container flex-align-space chart-header__controls",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("div",{className:"chart-header__controls__graph-type text-gray-4 text-start",children:availableChartTypes.map(((chartTypeEntry,i)=>Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("span",{className:classnames__WEBPACK_IMPORTED_MODULE_7___default()({"chart-header__controls__graph-type__individual":!0,active:chartTypeEntry===chartType,disabled:chartTypeEntry!==chartType}),onClick:_=>onChartTypeChange(chartTypeEntry),children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(react_intl__WEBPACK_IMPORTED_MODULE_1__.a,{id:"ChartHeader.chartType.selector",defaultMessage:"{chartType, select, PRICE {PRICE} VOLUME {VOLUME} WEIGHTS {WEIGHT} other {-}}",values:{chartType:chartTypeEntry}})},i)))}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("div",{className:"chart-header__controls__granularity text-end text-gray-4",children:availableGranularity.map(((granularityEntry,i)=>Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("span",{className:classnames__WEBPACK_IMPORTED_MODULE_7___default()({"chart-header__controls__granularity__individual":!0,active:granularityEntry===granularity}),onClick:_=>onGranularityChange(granularityEntry),children:formatGranularity(granularityEntry)},i)))})]})]})};try{ChartHeader.displayName="ChartHeader",ChartHeader.__docgenInfo={description:"",displayName:"ChartHeader",props:{assetPair:{defaultValue:null,description:"",name:"assetPair",required:!0,type:{name:"AssetPair"}},poolType:{defaultValue:null,description:"",name:"poolType",required:!0,type:{name:"enum",value:[{value:'"LBP"'},{value:'"XYK"'}]}},displayData:{defaultValue:null,description:"",name:"displayData",required:!0,type:{name:"DisplayData"}},referenceData:{defaultValue:null,description:"",name:"referenceData",required:!0,type:{name:"DisplayData | undefined"}},dataTrend:{defaultValue:null,description:"",name:"dataTrend",required:!0,type:{name:"enum",value:[{value:'"Positive"'},{value:'"Negative"'},{value:'"Neutral"'}]}},granularity:{defaultValue:null,description:"",name:"granularity",required:!0,type:{name:"enum",value:[{value:'"D30"'},{value:'"D7"'},{value:'"H24"'},{value:'"H1"'}]}},isUserBrowsingGraph:{defaultValue:null,description:"",name:"isUserBrowsingGraph",required:!0,type:{name:"boolean | undefined"}},chartType:{defaultValue:null,description:"",name:"chartType",required:!0,type:{name:"enum",value:[{value:'"PRICE"'},{value:'"VOLUME"'},{value:'"WEIGHTS"'}]}},availableChartTypes:{defaultValue:null,description:"",name:"availableChartTypes",required:!0,type:{name:"ChartType[]"}},availableGranularity:{defaultValue:null,description:"",name:"availableGranularity",required:!0,type:{name:"ChartGranularity[]"}},onChartTypeChange:{defaultValue:null,description:"",name:"onChartTypeChange",required:!0,type:{name:"(chartType: ChartType) => void"}},onGranularityChange:{defaultValue:null,description:"",name:"onGranularityChange",required:!0,type:{name:"(granularity: ChartGranularity) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chart/ChartHeader/ChartHeader.tsx#ChartHeader"]={docgenInfo:ChartHeader.__docgenInfo,name:"ChartHeader",path:"src/components/Chart/ChartHeader/ChartHeader.tsx#ChartHeader"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Chart/ChartTicks/ChartTicks.scss":function(module,exports,__webpack_require__){},"./src/components/Chart/ChartTicks/ChartTicks.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));var date_fns_esm__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/date-fns/esm/addMinutes/index.js"),date_fns_subMinutes__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/date-fns/esm/subMinutes/index.js"),lodash__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lodash/lodash.js"),_misc_StorybookWrapper__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/misc/StorybookWrapper.tsx"),_ChartTicks__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/Chart/ChartTicks/ChartTicks.tsx"),_shared__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/Chart/shared.tsx"),_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/misc/colors.module.scss"),_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_6___default=__webpack_require__.n(_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_6__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/react/jsx-runtime.js");const now=Date.now(),hourAgo=Object(date_fns_subMinutes__WEBPACK_IMPORTED_MODULE_1__.a)(now,60),randomDataPoint=()=>Object(lodash__WEBPACK_IMPORTED_MODULE_2__.random)(1,5),datasets={primaryDataset:Object(lodash__WEBPACK_IMPORTED_MODULE_2__.times)(60).map((i=>({x:Object(date_fns_esm__WEBPACK_IMPORTED_MODULE_0__.a)(hourAgo,10*(i+1)),y:59==i?3:randomDataPoint()}))),secondaryDataset:Object(lodash__WEBPACK_IMPORTED_MODULE_2__.times)(60).map((i=>({x:Object(date_fns_esm__WEBPACK_IMPORTED_MODULE_0__.a)(now,10*i),y:0===i?3:randomDataPoint()})))};__webpack_exports__.default={title:"Components/Chart/ChartTicks",component:_ChartTicks__WEBPACK_IMPORTED_MODULE_4__.a,args:{datasets:[datasets.primaryDataset,datasets.secondaryDataset],granularity:_shared__WEBPACK_IMPORTED_MODULE_5__.a.H1}};const Default=(args=>Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_misc_StorybookWrapper__WEBPACK_IMPORTED_MODULE_3__.a,{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("div",{style:{backgroundColor:_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_6___default.a.gray2},children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_ChartTicks__WEBPACK_IMPORTED_MODULE_4__.a,{...args})})})).bind({});try{Default.displayName="Default",Default.__docgenInfo={description:"",displayName:"Default",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chart/ChartTicks/ChartTicks.stories.tsx#Default"]={docgenInfo:Default.__docgenInfo,name:"Default",path:"src/components/Chart/ChartTicks/ChartTicks.stories.tsx#Default"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Chart/ChartTicks/ChartTicks.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return ChartTicks}));var lodash__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lodash/lodash.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),react_intl__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react-intl/lib/index.js"),_shared__WEBPACK_IMPORTED_MODULE_4__=(__webpack_require__("./src/components/Chart/ChartTicks/ChartTicks.scss"),__webpack_require__("./src/components/Chart/shared.tsx")),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/react/jsx-runtime.js");const ChartTicks=_ref=>{let{datasets:datasets,granularity:granularity}=_ref;const ticks=Object(react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{var _first,_last;let allData=datasets.reduce(((allData,dataset)=>allData.concat(dataset)),[]);allData=Object(lodash__WEBPACK_IMPORTED_MODULE_0__.orderBy)(allData,["x"],["asc"]);const firstTick=null===(_first=Object(lodash__WEBPACK_IMPORTED_MODULE_0__.first)(allData))||void 0===_first?void 0:_first.x,lastTick=null===(_last=Object(lodash__WEBPACK_IMPORTED_MODULE_0__.last)(allData))||void 0===_last?void 0:_last.x;if(!firstTick||!lastTick)return;let ticks=[firstTick];const middleTicks=((firstTick,lastTick,numberOfTicks)=>{const distance=(lastTick-firstTick)/(numberOfTicks+1);return Object(lodash__WEBPACK_IMPORTED_MODULE_0__.times)(numberOfTicks).map(((_,i)=>firstTick+distance*(i+1)))})(firstTick,lastTick,5);return ticks=ticks.concat(middleTicks),ticks.push(lastTick),ticks}),[datasets]),formattedTicks=Object(react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>null==ticks?void 0:ticks.map((tick=>((tick,granularity)=>{const tickDate=new Date(tick),asTime=Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(react_intl__WEBPACK_IMPORTED_MODULE_2__.c,{hourCycle:"h24",value:tickDate}),asDate=Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(react_intl__WEBPACK_IMPORTED_MODULE_2__.a,{value:tickDate});switch(granularity){case _shared__WEBPACK_IMPORTED_MODULE_4__.a.D30:case _shared__WEBPACK_IMPORTED_MODULE_4__.a.D7:return asDate;case _shared__WEBPACK_IMPORTED_MODULE_4__.a.H24:case _shared__WEBPACK_IMPORTED_MODULE_4__.a.H1:return asTime}})(tick,granularity)))),[ticks,granularity]);return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{className:"flex-container flex-align-space chart-ticks",children:null==formattedTicks?void 0:formattedTicks.map(((formattedTick,i)=>Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{children:formattedTick})},i)))})};try{ChartTicks.displayName="ChartTicks",ChartTicks.__docgenInfo={description:"",displayName:"ChartTicks",props:{datasets:{defaultValue:null,description:"",name:"datasets",required:!0,type:{name:"Dataset[]"}},granularity:{defaultValue:null,description:"",name:"granularity",required:!0,type:{name:"enum",value:[{value:'"D30"'},{value:'"D7"'},{value:'"H24"'},{value:'"H1"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chart/ChartTicks/ChartTicks.tsx#ChartTicks"]={docgenInfo:ChartTicks.__docgenInfo,name:"ChartTicks",path:"src/components/Chart/ChartTicks/ChartTicks.tsx#ChartTicks"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Chart/LineChart/LineChart.scss":function(module,exports,__webpack_require__){},"./src/components/Chart/LineChart/LineChart.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default})),__webpack_require__.d(__webpack_exports__,"LBP",(function(){return LBP}));var _misc_StorybookWrapper__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/misc/StorybookWrapper.tsx"),_LineChart__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/Chart/LineChart/LineChart.tsx"),_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/misc/colors.module.scss"),_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_2__),_mockDataset__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Chart/mockDataset.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/react/jsx-runtime.js");const args={primaryDataset:Object(_mockDataset__WEBPACK_IMPORTED_MODULE_3__.b)(_mockDataset__WEBPACK_IMPORTED_MODULE_3__.a,60)};__webpack_exports__.default={title:"components/Chart/LineChart",component:_LineChart__WEBPACK_IMPORTED_MODULE_1__.a,args:args,argTypes:{from:{control:{type:"date"}},to:{control:{type:"date"}}}};const Template=args=>Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_misc_StorybookWrapper__WEBPACK_IMPORTED_MODULE_0__.a,{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div",{style:{height:"20rem",backgroundColor:_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_2___default.a.gray2},children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_LineChart__WEBPACK_IMPORTED_MODULE_1__.a,{...args})})}),Default=Template.bind({}),LBP=Template.bind({}),LBPDatasets=Object(_mockDataset__WEBPACK_IMPORTED_MODULE_3__.c)(_mockDataset__WEBPACK_IMPORTED_MODULE_3__.a,60);LBP.args={primaryDataset:LBPDatasets.primaryDataset,secondaryDataset:LBPDatasets.secondaryDataset}},"./src/components/Chart/LineChart/LineChart.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return Trend})),__webpack_require__.d(__webpack_exports__,"a",(function(){return LineChart}));var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_chartjs_2__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-chartjs-2/dist/index.modern.js"),_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_3__=(__webpack_require__("./node_modules/chartjs-adapter-moment/dist/chartjs-adapter-moment.esm.js"),__webpack_require__("./src/misc/colors.module.scss")),_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_3__),lodash__WEBPACK_IMPORTED_MODULE_5__=(__webpack_require__("./src/components/Chart/LineChart/LineChart.scss"),__webpack_require__("./node_modules/lodash/lodash.js")),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/react/jsx-runtime.js");let Trend;!function(Trend){Trend.Positive="Positive",Trend.Negative="Negative",Trend.Neutral="Neutral"}(Trend||(Trend={}));const isPrimaryDataset=label=>"primary"===label,greenBackgroundGradient=chartCtx=>{var gradient=null==chartCtx?void 0:chartCtx.createLinearGradient(0,0,0,260);return null==gradient||gradient.addColorStop(0,_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_3___default.a.green1Opacity33),null==gradient||gradient.addColorStop(1,_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_3___default.a.gray2Opacity0),gradient},redBackgroundGradient=chartCtx=>{var gradient=null==chartCtx?void 0:chartCtx.createLinearGradient(0,0,0,270);return null==gradient||gradient.addColorStop(0,_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_3___default.a.red1Opacity70),null==gradient||gradient.addColorStop(1,_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_3___default.a.gray2Opacity0),gradient},backgroundGradients=chartCtx=>({redGradient:redBackgroundGradient(chartCtx),greenGradient:greenBackgroundGradient(chartCtx)}),useFormatDataset=_ref=>{let{fill:fill,trend:trend,chartCtx:chartCtx}=_ref;return Object(react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((_ref2=>{let{dataset:dataset,label:label}=_ref2;return{label:label,fill:fill,data:dataset,pointRadius:0,tension:.2,borderWidth:1,borderColor:isPrimaryDataset(label)?trend===Trend.Negative?_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_3___default.a.red1:_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_3___default.a.green1:_misc_colors_module_scss__WEBPACK_IMPORTED_MODULE_3___default.a.orange1,backgroundColor:(()=>{const{redGradient:redGradient,greenGradient:greenGradient}=backgroundGradients(chartCtx);return trend===Trend.Negative?redGradient:greenGradient})()}}),[fill,trend,chartCtx])},LineChart=_ref4=>{let{primaryDataset:primaryDataset,secondaryDataset:secondaryDataset=[],fill:fill=!1,from:from,to:to,trend:trend,onHandleTooltip:onHandleTooltip}=_ref4;const{chartContainer:chartContainer,chartCtx:chartCtx}=(()=>{const chartContainer=Object(react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),[chartCtx,setChartCtx]=Object(react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);return Object(react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{var _document$getElements,ctx=null===(_document$getElements=document.getElementsByTagName("canvas")[0])||void 0===_document$getElements?void 0:_document$getElements.getContext("2d");setChartCtx(ctx)}),[chartContainer]),{chartContainer:chartContainer,chartCtx:chartCtx}})(),[tooltipData,setTooltipData]=Object(react__WEBPACK_IMPORTED_MODULE_0__.useState)(void 0),tooltipHandler=((tooltipData,setTooltipData)=>Object(react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((_ref3=>{let{tooltip:tooltip}=_ref3;const visible=!!tooltip.opacity,{x:x,y:y}=tooltip.dataPoints[0].parsed,positionX=tooltip.caretX;x===(null==tooltipData?void 0:tooltipData.data.x)&&visible===tooltipData.visible||setTooltipData({data:{x:x,y:y},positionX:positionX,visible:visible})}),[tooltipData,setTooltipData]))(tooltipData,setTooltipData);Object(react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>onHandleTooltip(tooltipData)),[tooltipData]);const formatDataset=useFormatDataset({fill:fill,trend:trend,chartCtx:chartCtx}),formattedPrimaryDataset=formatDataset({dataset:primaryDataset,label:"primary"}),formattedSecondaryDataset=formatDataset({dataset:secondaryDataset,label:"secondary"}),chartData=Object(react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({labels:[],datasets:formattedSecondaryDataset?[formattedPrimaryDataset,formattedSecondaryDataset]:[formattedPrimaryDataset]})),[formattedPrimaryDataset,formattedSecondaryDataset]),yAxisMin=Object(react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>{var _first;let allData=[primaryDataset,secondaryDataset].reduce(((allData,dataset)=>allData.concat(dataset)),[]);allData=Object(lodash__WEBPACK_IMPORTED_MODULE_5__.orderBy)(allData,["y"],["asc"]);return null===(_first=Object(lodash__WEBPACK_IMPORTED_MODULE_5__.first)(allData))||void 0===_first?void 0:_first.y}),[primaryDataset,secondaryDataset]),chartOptions=Object(react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({responsive:!0,maintainAspectRatio:!1,scales:{xAxis:{display:!1,type:"time",min:from,to:to},yAxis:{display:!1,stacked:!1,min:yAxisMin}},animations:{colors:!1},hover:{intersect:!0},plugins:{legend:{display:!1},tooltip:{enabled:!1,mode:"index",intersect:!1,position:"nearest",external:tooltipHandler}}})),[from,to,tooltipHandler,yAxisMin]);return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)("div",{className:"line-chart",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(react_chartjs_2__WEBPACK_IMPORTED_MODULE_1__.a,{ref:chartContainer,data:chartData,options:chartOptions})})};try{isPrimaryDataset.displayName="isPrimaryDataset",isPrimaryDataset.__docgenInfo={description:"",displayName:"isPrimaryDataset",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chart/LineChart/LineChart.tsx#isPrimaryDataset"]={docgenInfo:isPrimaryDataset.__docgenInfo,name:"isPrimaryDataset",path:"src/components/Chart/LineChart/LineChart.tsx#isPrimaryDataset"})}catch(__react_docgen_typescript_loader_error){}try{greenBackgroundGradient.displayName="greenBackgroundGradient",greenBackgroundGradient.__docgenInfo={description:"",displayName:"greenBackgroundGradient",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chart/LineChart/LineChart.tsx#greenBackgroundGradient"]={docgenInfo:greenBackgroundGradient.__docgenInfo,name:"greenBackgroundGradient",path:"src/components/Chart/LineChart/LineChart.tsx#greenBackgroundGradient"})}catch(__react_docgen_typescript_loader_error){}try{redBackgroundGradient.displayName="redBackgroundGradient",redBackgroundGradient.__docgenInfo={description:"",displayName:"redBackgroundGradient",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chart/LineChart/LineChart.tsx#redBackgroundGradient"]={docgenInfo:redBackgroundGradient.__docgenInfo,name:"redBackgroundGradient",path:"src/components/Chart/LineChart/LineChart.tsx#redBackgroundGradient"})}catch(__react_docgen_typescript_loader_error){}try{backgroundGradients.displayName="backgroundGradients",backgroundGradients.__docgenInfo={description:"",displayName:"backgroundGradients",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chart/LineChart/LineChart.tsx#backgroundGradients"]={docgenInfo:backgroundGradients.__docgenInfo,name:"backgroundGradients",path:"src/components/Chart/LineChart/LineChart.tsx#backgroundGradients"})}catch(__react_docgen_typescript_loader_error){}try{useFormatDataset.displayName="useFormatDataset",useFormatDataset.__docgenInfo={description:"",displayName:"useFormatDataset",props:{fill:{defaultValue:{value:"false"},description:"",name:"fill",required:!1,type:{name:"boolean"}},trend:{defaultValue:null,description:"",name:"trend",required:!0,type:{name:"enum",value:[{value:'"Positive"'},{value:'"Negative"'},{value:'"Neutral"'}]}},chartCtx:{defaultValue:null,description:"",name:"chartCtx",required:!0,type:{name:"CanvasRenderingContext2D | null"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chart/LineChart/LineChart.tsx#useFormatDataset"]={docgenInfo:useFormatDataset.__docgenInfo,name:"useFormatDataset",path:"src/components/Chart/LineChart/LineChart.tsx#useFormatDataset"})}catch(__react_docgen_typescript_loader_error){}try{LineChart.displayName="LineChart",LineChart.__docgenInfo={description:"",displayName:"LineChart",props:{primaryDataset:{defaultValue:null,description:"",name:"primaryDataset",required:!0,type:{name:"Dataset"}},secondaryDataset:{defaultValue:{value:"[]"},description:"",name:"secondaryDataset",required:!1,type:{name:"Dataset"}},from:{defaultValue:null,description:"",name:"from",required:!1,type:{name:"number"}},to:{defaultValue:null,description:"",name:"to",required:!1,type:{name:"number"}},fill:{defaultValue:{value:"false"},description:"",name:"fill",required:!1,type:{name:"boolean"}},trend:{defaultValue:null,description:"",name:"trend",required:!0,type:{name:"enum",value:[{value:'"Positive"'},{value:'"Negative"'},{value:'"Neutral"'}]}},onHandleTooltip:{defaultValue:null,description:"",name:"onHandleTooltip",required:!0,type:{name:"OnHandleTooltip"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chart/LineChart/LineChart.tsx#LineChart"]={docgenInfo:LineChart.__docgenInfo,name:"LineChart",path:"src/components/Chart/LineChart/LineChart.tsx#LineChart"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Chart/TradeChart/TradeChart.scss":function(module,exports,__webpack_require__){},"./src/components/Chart/TradeChart/TradeChart.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default})),__webpack_require__.d(__webpack_exports__,"NoData",(function(){return NoData}));var StorybookWrapper=__webpack_require__("./src/misc/StorybookWrapper.tsx"),react=__webpack_require__("./node_modules/react/index.js"),ChartTicks=__webpack_require__("./src/components/Chart/ChartTicks/ChartTicks.tsx"),LineChart=__webpack_require__("./src/components/Chart/LineChart/LineChart.tsx"),shared=__webpack_require__("./src/components/Chart/shared.tsx"),ChartHeader=__webpack_require__("./src/components/Chart/ChartHeader/ChartHeader.tsx"),moment=(__webpack_require__("./src/components/Chart/TradeChart/TradeChart.scss"),__webpack_require__("./node_modules/moment/moment.js")),moment_default=__webpack_require__.n(moment),jsx_runtime=(__webpack_require__("./src/components/Chart/TradeChart/TradeChartError.scss"),__webpack_require__("./node_modules/react/jsx-runtime.js"));let TradeChartErrorType;!function(TradeChartErrorType){TradeChartErrorType.InvalidPair="InvalidPair",TradeChartErrorType.Unexpected="Unexpected"}(TradeChartErrorType||(TradeChartErrorType={}));const TradeChartError_TradeChartError=_ref=>{let{type:type}=_ref;return Object(jsx_runtime.jsx)("div",{className:"trade-chart-error flex-container column",children:type===TradeChartErrorType.InvalidPair?Object(jsx_runtime.jsxs)("div",{className:"row",children:[Object(jsx_runtime.jsxs)("div",{className:"large",children:["Graph unavailable, please select ",Object(jsx_runtime.jsx)("br",{})," a valid asset pair"]}),Object(jsx_runtime.jsx)("div",{className:"small",children:"You can read our FAQ to learn more about valid asset pairs."})]}):Object(jsx_runtime.jsxs)("div",{className:"row",children:[Object(jsx_runtime.jsxs)("div",{className:"large",children:["Oops, something went wrong.",Object(jsx_runtime.jsx)("br",{}),"Please try again."]}),Object(jsx_runtime.jsx)("div",{className:"small",children:"If this problem persists, please report an issue or talk to our support team."})]})})};try{TradeChartError_TradeChartError.displayName="TradeChartError",TradeChartError_TradeChartError.__docgenInfo={description:"",displayName:"TradeChartError",props:{type:{defaultValue:null,description:"",name:"type",required:!0,type:{name:"enum",value:[{value:'"InvalidPair"'},{value:'"Unexpected"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chart/TradeChart/TradeChartError.tsx#TradeChartError"]={docgenInfo:TradeChartError_TradeChartError.__docgenInfo,name:"TradeChartError",path:"src/components/Chart/TradeChart/TradeChartError.tsx#TradeChartError"})}catch(__react_docgen_typescript_loader_error){}var lodash=__webpack_require__("./node_modules/lodash/lodash.js");const _getTooltipPositionCss=tooltipPosition=>{var _document$getElements;const canvasWidth=null===(_document$getElements=document.getElementsByTagName("canvas")[0])||void 0===_document$getElements?void 0:_document$getElements.getBoundingClientRect().width;return tooltipPosition<120?{left:0}:canvasWidth&&tooltipPosition>canvasWidth-120?{right:0}:{left:tooltipPosition-120}},TradeChart_TradeChart=_ref=>{var _last,_last2,_assetPair$assetB,_assetPair$assetB2,_tooltipData$data;let{assetPair:assetPair,poolType:poolType,granularity:granularity,chartType:chartType,onChartTypeChange:onChartTypeChange,onGranularityChange:onGranularityChange,primaryDataset:primaryDataset}=_ref;const[displayData,setDisplayData]=Object(react.useState)({balance:null===(_last=Object(lodash.last)(primaryDataset))||void 0===_last?void 0:_last.y,usdBalance:null===(_last2=Object(lodash.last)(primaryDataset))||void 0===_last2?void 0:_last2.y,asset:{symbol:null===(_assetPair$assetB=assetPair.assetB)||void 0===_assetPair$assetB?void 0:_assetPair$assetB.symbol,fullName:null===(_assetPair$assetB2=assetPair.assetB)||void 0===_assetPair$assetB2?void 0:_assetPair$assetB2.fullName}}),resetDisplayData=()=>{var _last3,_last4,_assetPair$assetB3,_assetPair$assetB4;setDisplayData({balance:null===(_last3=Object(lodash.last)(primaryDataset))||void 0===_last3?void 0:_last3.y,usdBalance:null===(_last4=Object(lodash.last)(primaryDataset))||void 0===_last4?void 0:_last4.y,asset:{symbol:null===(_assetPair$assetB3=assetPair.assetB)||void 0===_assetPair$assetB3?void 0:_assetPair$assetB3.symbol,fullName:null===(_assetPair$assetB4=assetPair.assetB)||void 0===_assetPair$assetB4?void 0:_assetPair$assetB4.fullName}})};Object(react.useEffect)((()=>{resetDisplayData()}),[assetPair]);const[referenceData,setReferenceData]=Object(react.useState)(displayData),getTooltipPositionCss=Object(react.useCallback)(_getTooltipPositionCss,[]),[tooltipData,setTooltipData]=Object(react.useState)(void 0),dataTrend=(null==displayData?void 0:displayData.balance)==(null==referenceData?void 0:referenceData.balance)?LineChart.b.Neutral:(null==displayData?void 0:displayData.balance)>=(null==referenceData?void 0:referenceData.balance)?LineChart.b.Positive:LineChart.b.Negative;Object(react.useEffect)((()=>{}),[tooltipData]);const handleTooltip=Object(react.useCallback)((tooltipData=>{if(setTooltipData(tooltipData),null==tooltipData?void 0:tooltipData.visible){const allData=[primaryDataset].reduce(((allData,dataset)=>allData.concat(dataset)),[]),referenceData=Object(lodash.find)(allData,{x:null==tooltipData?void 0:tooltipData.data.x,y:null==tooltipData?void 0:tooltipData.data.y});referenceData&&setDisplayData({...displayData,balance:referenceData.y,usdBalance:referenceData.y})}else resetDisplayData()}),[setTooltipData]),availableChartTypes=Object(react.useMemo)((()=>[shared.b.PRICE,shared.b.VOLUME,shared.b.WEIGHTS]),[]),availableGranularity=Object(react.useMemo)((()=>[shared.a.D30,shared.a.D7,shared.a.H24,shared.a.H1]),[]);return Object(jsx_runtime.jsxs)("div",{className:"trade-chart flex-container column",children:[Object(jsx_runtime.jsx)(ChartHeader.a,{assetPair:assetPair,poolType:poolType,granularity:granularity,chartType:chartType,onChartTypeChange:onChartTypeChange,onGranularityChange:onGranularityChange,displayData:displayData,referenceData:referenceData,dataTrend:dataTrend,isUserBrowsingGraph:null==tooltipData?void 0:tooltipData.visible,availableChartTypes:availableChartTypes,availableGranularity:availableGranularity}),(null==primaryDataset?void 0:primaryDataset.length)?Object(jsx_runtime.jsxs)("div",{className:"trade-chart__chart-wrapper",children:[Object(jsx_runtime.jsx)("div",{className:"trade-chart__chart-wrapper__chart-jail",children:Object(jsx_runtime.jsx)(LineChart.a,{primaryDataset:primaryDataset,fill:!0,trend:dataTrend,onHandleTooltip:handleTooltip})}),(null==tooltipData?void 0:tooltipData.positionX)?Object(jsx_runtime.jsxs)("div",{children:[Object(jsx_runtime.jsx)("div",{className:"trade-chart__tooltip",style:{left:"".concat(tooltipData.positionX,"px"),opacity:tooltipData.visible?1:0}}),Object(jsx_runtime.jsx)("div",{className:"trade-chart__tooltip__label",style:{...getTooltipPositionCss(tooltipData.positionX),opacity:tooltipData.visible?1:0},children:(null===(_tooltipData$data=tooltipData.data)||void 0===_tooltipData$data?void 0:_tooltipData$data.x)?moment_default()(new Date(tooltipData.data.x)).toString():Object(jsx_runtime.jsx)(jsx_runtime.Fragment,{})})]}):Object(jsx_runtime.jsx)(jsx_runtime.Fragment,{}),Object(jsx_runtime.jsx)(ChartTicks.a,{datasets:[primaryDataset],granularity:granularity})]}):Object(jsx_runtime.jsx)(jsx_runtime.Fragment,{}),(null==primaryDataset?void 0:primaryDataset.length)?Object(jsx_runtime.jsx)(jsx_runtime.Fragment,{}):Object(jsx_runtime.jsx)("div",{className:"trade-chart__error-wrapper",children:Object(jsx_runtime.jsx)(TradeChartError_TradeChartError,{type:TradeChartErrorType.InvalidPair})})]})};try{_getTooltipPositionCss.displayName="_getTooltipPositionCss",_getTooltipPositionCss.__docgenInfo={description:"",displayName:"_getTooltipPositionCss",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chart/TradeChart/TradeChart.tsx#_getTooltipPositionCss"]={docgenInfo:_getTooltipPositionCss.__docgenInfo,name:"_getTooltipPositionCss",path:"src/components/Chart/TradeChart/TradeChart.tsx#_getTooltipPositionCss"})}catch(__react_docgen_typescript_loader_error){}try{TradeChart_TradeChart.displayName="TradeChart",TradeChart_TradeChart.__docgenInfo={description:"",displayName:"TradeChart",props:{assetPair:{defaultValue:null,description:"",name:"assetPair",required:!0,type:{name:"AssetPair"}},poolType:{defaultValue:null,description:"",name:"poolType",required:!0,type:{name:"enum",value:[{value:'"LBP"'},{value:'"XYK"'}]}},granularity:{defaultValue:null,description:"",name:"granularity",required:!0,type:{name:"enum",value:[{value:'"D30"'},{value:'"D7"'},{value:'"H24"'},{value:'"H1"'}]}},chartType:{defaultValue:null,description:"",name:"chartType",required:!0,type:{name:"enum",value:[{value:'"PRICE"'},{value:'"VOLUME"'},{value:'"WEIGHTS"'}]}},primaryDataset:{defaultValue:null,description:"",name:"primaryDataset",required:!0,type:{name:"Dataset"}},onChartTypeChange:{defaultValue:null,description:"",name:"onChartTypeChange",required:!0,type:{name:"(chartType: ChartType) => void"}},onGranularityChange:{defaultValue:null,description:"",name:"onGranularityChange",required:!0,type:{name:"(granularity: ChartGranularity) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chart/TradeChart/TradeChart.tsx#TradeChart"]={docgenInfo:TradeChart_TradeChart.__docgenInfo,name:"TradeChart",path:"src/components/Chart/TradeChart/TradeChart.tsx#TradeChart"})}catch(__react_docgen_typescript_loader_error){}var mockDataset=__webpack_require__("./src/components/Chart/mockDataset.tsx");const TradeChart_stories_primaryDataset=Object(mockDataset.b)(mockDataset.a,60);__webpack_exports__.default={title:"Components/Chart/TradeChart",component:TradeChart_TradeChart,args:{assetPair:mockDataset.a,poolType:shared.c.LBP,chartType:shared.b.PRICE,granularity:shared.a.H1,displayData:{balance:400,usdBalance:400,asset:{symbol:"kUSD",fullName:"Karura US Dollar"}},primaryDataset:TradeChart_stories_primaryDataset}};const Template=args=>Object(jsx_runtime.jsx)(StorybookWrapper.a,{children:Object(jsx_runtime.jsx)(TradeChart_TradeChart,{...args})}),Default=Template.bind({}),NoData=Template.bind({});NoData.args={primaryDataset:void 0}},"./src/components/Chart/TradeChart/TradeChartError.scss":function(module,exports,__webpack_require__){},"./src/components/Chart/mockDataset.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return assetPair})),__webpack_require__.d(__webpack_exports__,"b",(function(){return createDataset})),__webpack_require__.d(__webpack_exports__,"c",(function(){return createLBPDataset}));var lodash__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lodash/lodash.js"),date_fns__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/date-fns/esm/subMinutes/index.js"),date_fns__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/date-fns/esm/addMinutes/index.js");const assetPair={assetA:{symbol:"BSX",fullName:"Basilisk"},assetB:{symbol:"kUSD",fullName:"Karura US Dollar"}},randomDataPoint=()=>Object(lodash__WEBPACK_IMPORTED_MODULE_0__.random)(10,100),singularity=randomDataPoint(),now=Date.now(),hourAgo=Object(date_fns__WEBPACK_IMPORTED_MODULE_1__.a)(now,60),createDataset=(assetPair,entries)=>Object(lodash__WEBPACK_IMPORTED_MODULE_0__.times)(entries).map((i=>({x:now+1e5*i,y:randomDataPoint()/("BSX"===assetPair.assetA.symbol?2:1)}))),createLBPDataset=(assetPair,entries)=>({primaryDataset:Object(lodash__WEBPACK_IMPORTED_MODULE_0__.times)(entries).map((i=>({x:Object(date_fns__WEBPACK_IMPORTED_MODULE_2__.a)(hourAgo,(i+1)*(60/entries)).getTime(),y:i===entries-1?singularity:randomDataPoint()}))),secondaryDataset:Object(lodash__WEBPACK_IMPORTED_MODULE_0__.times)(entries).map((i=>({x:Object(date_fns__WEBPACK_IMPORTED_MODULE_2__.a)(now,i*(60/entries)).getTime(),y:0===i?singularity:singularity/(i+1)})))})},"./src/components/Chart/shared.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";let ChartGranularity,ChartType,PoolType;__webpack_require__.d(__webpack_exports__,"a",(function(){return ChartGranularity})),__webpack_require__.d(__webpack_exports__,"b",(function(){return ChartType})),__webpack_require__.d(__webpack_exports__,"c",(function(){return PoolType})),function(ChartGranularity){ChartGranularity.D30="D30",ChartGranularity.D7="D7",ChartGranularity.H24="H24",ChartGranularity.H1="H1"}(ChartGranularity||(ChartGranularity={})),function(ChartType){ChartType.PRICE="PRICE",ChartType.VOLUME="VOLUME",ChartType.WEIGHTS="WEIGHTS"}(ChartType||(ChartType={})),function(PoolType){PoolType.LBP="LBP",PoolType.XYK="XYK"}(PoolType||(PoolType={}))},"./src/components/Navigation/ActionBar.scss":function(module,exports,__webpack_require__){},"./src/components/Navigation/ActionBar.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));__webpack_require__("./src/components/Navigation/ActionBar.scss");var react_router_dom=__webpack_require__("./node_modules/react-router-dom/index.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const ActionBar_ActionBar=_ref=>{let{extensionLoading:extensionLoading,activeAccountLoading:activeAccountLoading,accountData:accountData,isExtensionAvailable:isExtensionAvailable}=_ref;return Object(jsx_runtime.jsxs)("div",{className:"action-bar",children:[Object(jsx_runtime.jsxs)("div",{className:"action-bar-icons action-bar-item",children:[Object(jsx_runtime.jsx)("div",{className:"action-bar-help action-bar-icon ",children:"?"}),Object(jsx_runtime.jsx)("div",{className:"action-bar-notifications action-bar-icon ",children:"!"})]}),Object(jsx_runtime.jsx)("div",{children:extensionLoading||activeAccountLoading?Object(jsx_runtime.jsx)("div",{className:"action-bar-error action-bar-item",children:"loading..."}):isExtensionAvailable?Object(jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(null==accountData?void 0:accountData.name)?Object(jsx_runtime.jsxs)("div",{className:"action-bar-account-info action-bar-item",children:[Object(jsx_runtime.jsxs)("div",{className:"action-bar-account-balance action-bar-account-item",children:[null==accountData?void 0:accountData.nativeAssetBalance," BSX"]}),Object(jsx_runtime.jsx)("div",{className:"action-bar-account-name action-bar-account-item",children:null==accountData?void 0:accountData.name})]}):Object(jsx_runtime.jsx)(react_router_dom.a,{className:"action-bar-select-account action-bar-item",to:"/wallet",children:"select an account"})}):Object(jsx_runtime.jsx)("div",{className:"action-bar-error action-bar-item",children:"Extension unavailable"})}),Object(jsx_runtime.jsx)("div",{className:"action-bar-settings action-bar-item",children:"v"})]})};try{ActionBar_ActionBar.displayName="ActionBar",ActionBar_ActionBar.__docgenInfo={description:"",displayName:"ActionBar",props:{isExtensionAvailable:{defaultValue:null,description:"",name:"isExtensionAvailable",required:!0,type:{name:"boolean"}},extensionLoading:{defaultValue:null,description:"",name:"extensionLoading",required:!0,type:{name:"boolean"}},activeAccountLoading:{defaultValue:null,description:"",name:"activeAccountLoading",required:!0,type:{name:"boolean"}},accountData:{defaultValue:null,description:"",name:"accountData",required:!1,type:{name:"{ name?: string; address?: string; nativeAssetBalance?: string | undefined; } | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Navigation/ActionBar.tsx#ActionBar"]={docgenInfo:ActionBar_ActionBar.__docgenInfo,name:"ActionBar",path:"src/components/Navigation/ActionBar.tsx#ActionBar"})}catch(__react_docgen_typescript_loader_error){}var react_router=__webpack_require__("./node_modules/react-router/index.js"),StorybookWrapper=__webpack_require__("./src/misc/StorybookWrapper.tsx");__webpack_exports__.default={title:"components/ActionBar",component:ActionBar_ActionBar,decorators:[Story=>Object(jsx_runtime.jsx)(react_router.a,{children:Object(jsx_runtime.jsx)(Story,{})})]};const Default=(props=>Object(jsx_runtime.jsxs)(StorybookWrapper.a,{children:[Object(jsx_runtime.jsx)(ActionBar_ActionBar,{isExtensionAvailable:!0,extensionLoading:!1,activeAccountLoading:!1,accountData:{nativeAssetBalance:"1000",name:"Alice",address:"sX00000000000000000000000000000000000000000000000"}}),Object(jsx_runtime.jsx)("br",{}),Object(jsx_runtime.jsx)(ActionBar_ActionBar,{isExtensionAvailable:!0,extensionLoading:!1,activeAccountLoading:!1}),Object(jsx_runtime.jsx)("br",{}),Object(jsx_runtime.jsx)(ActionBar_ActionBar,{isExtensionAvailable:!1,extensionLoading:!1,activeAccountLoading:!1,accountData:{nativeAssetBalance:"1000",name:"Alice",address:"sX00000000000000000000000000000000000000000000000"}}),Object(jsx_runtime.jsx)("br",{}),Object(jsx_runtime.jsx)(ActionBar_ActionBar,{isExtensionAvailable:!0,extensionLoading:!0,activeAccountLoading:!1,accountData:{nativeAssetBalance:"1000",name:"Alice",address:"sX00000000000000000000000000000000000000000000000"}}),Object(jsx_runtime.jsx)("br",{}),Object(jsx_runtime.jsx)(ActionBar_ActionBar,{isExtensionAvailable:!0,extensionLoading:!1,activeAccountLoading:!0,accountData:{nativeAssetBalance:"1000",name:"Alice",address:"sX00000000000000000000000000000000000000000000000"}})]})).bind({})},"./src/components/Navigation/Navigation.scss":function(module,exports,__webpack_require__){},"./src/components/Navigation/Navigation.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));var react=__webpack_require__("./node_modules/react/index.js"),react_router_dom=(__webpack_require__("./src/components/Navigation/Navigation.scss"),__webpack_require__("./node_modules/react-router-dom/index.js")),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Modal=_ref=>{let{children:children}=_ref;return Object(jsx_runtime.jsxs)("div",{children:[Object(jsx_runtime.jsx)("h1",{children:"modal"}),children,Object(jsx_runtime.jsx)("button",{children:"click me"})]})},useModal=content=>{const[show,setShow]=Object(react.useState)(!1);return{modal:show?Object(jsx_runtime.jsx)(Modal,{children:content}):Object(jsx_runtime.jsx)(jsx_runtime.Fragment,{}),toggleModal:()=>setShow((show=>!show))}},Navigation_Navigation=()=>Object(jsx_runtime.jsxs)("div",{children:[Object(jsx_runtime.jsx)(react_router_dom.a,{className:"basilisk-logo",to:"https://bsx.fi",children:"()"}),Object(jsx_runtime.jsx)(react_router_dom.a,{to:"/",children:"Trade"})," | ",Object(jsx_runtime.jsx)(react_router_dom.a,{to:"/",children:"Pools"})," | ",Object(jsx_runtime.jsx)(react_router_dom.a,{to:"/wallet",children:"Wallet"})]});try{Modal.displayName="Modal",Modal.__docgenInfo={description:"",displayName:"Modal",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Navigation/Navigation.tsx#Modal"]={docgenInfo:Modal.__docgenInfo,name:"Modal",path:"src/components/Navigation/Navigation.tsx#Modal"})}catch(__react_docgen_typescript_loader_error){}try{useModal.displayName="useModal",useModal.__docgenInfo={description:"",displayName:"useModal",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Navigation/Navigation.tsx#useModal"]={docgenInfo:useModal.__docgenInfo,name:"useModal",path:"src/components/Navigation/Navigation.tsx#useModal"})}catch(__react_docgen_typescript_loader_error){}var react_router=__webpack_require__("./node_modules/react-router/index.js"),StorybookWrapper=__webpack_require__("./src/misc/StorybookWrapper.tsx");__webpack_exports__.default={title:"components/Navigation",component:Navigation_Navigation,decorators:[Story=>Object(jsx_runtime.jsx)(react_router.a,{children:Object(jsx_runtime.jsx)(Story,{})})]};const Default=(props=>Object(jsx_runtime.jsx)(StorybookWrapper.a,{children:Object(jsx_runtime.jsx)(Navigation_Navigation,{})})).bind({})},"./src/components/Wallet/Wallet.scss":function(module,exports,__webpack_require__){},"./src/components/Wallet/Wallet.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));var react=__webpack_require__("./node_modules/react/index.js"),index_esm=__webpack_require__("./node_modules/react-hook-form/dist/index.esm.js"),colors_module=__webpack_require__("./src/misc/colors.module.scss"),colors_module_default=__webpack_require__.n(colors_module),StorybookWrapper=__webpack_require__("./src/misc/StorybookWrapper.tsx"),FormattedBalance=__webpack_require__("./src/components/Balance/FormattedBalance/FormattedBalance.tsx"),metricUnit=__webpack_require__("./src/components/Balance/metricUnit.tsx"),react_identicon=__webpack_require__("./node_modules/@polkadot/react-identicon/index.js"),jsx_runtime=(__webpack_require__("./src/components/Wallet/Wallet.scss"),__webpack_require__("./node_modules/react/jsx-runtime.js"));const Wallet_Wallet=_ref=>{let{modalContainerRef:modalContainerRef,account:account}=_ref;return Object(jsx_runtime.jsxs)("div",{className:"wallet flex-container flex-align-space",children:[Object(jsx_runtime.jsxs)("div",{className:"wallet__icons-wrapper",children:[Object(jsx_runtime.jsx)("span",{className:"wallet__icon",children:Object(jsx_runtime.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"28",height:"28",viewBox:"0 0 28 28",fill:"none",children:Object(jsx_runtime.jsx)("path",{d:"M14 0.4375C6.51016 0.4375 0.4375 6.51235 0.4375 14C0.4375 21.492 6.51016 27.5625 14 27.5625C21.4898 27.5625 27.5625 21.492 27.5625 14C27.5625 6.51235 21.4898 0.4375 14 0.4375ZM14 24.9375C7.95528 24.9375 3.0625 20.0467 3.0625 14C3.0625 7.9573 7.9555 3.0625 14 3.0625C20.0425 3.0625 24.9375 7.95545 24.9375 14C24.9375 20.0446 20.0467 24.9375 14 24.9375ZM19.8649 10.9812C19.8649 14.6482 15.9044 14.7046 15.9044 16.0597V16.4062C15.9044 16.7687 15.6105 17.0625 15.2481 17.0625H12.7518C12.3894 17.0625 12.0956 16.7687 12.0956 16.4062V15.9327C12.0956 13.9779 13.5776 13.1965 14.6975 12.5686C15.6579 12.0302 16.2465 11.664 16.2465 10.951C16.2465 10.0078 15.0434 9.3818 14.0708 9.3818C12.8027 9.3818 12.2172 9.98211 11.3943 11.0207C11.1724 11.3007 10.7676 11.3527 10.4829 11.1369L8.96126 9.98309C8.68197 9.77134 8.61941 9.37792 8.81666 9.08824C10.1088 7.19091 11.7545 6.125 14.3169 6.125C17.0004 6.125 19.8649 8.21975 19.8649 10.9812ZM16.2969 20.125C16.2969 21.3915 15.2665 22.4219 14 22.4219C12.7335 22.4219 11.7031 21.3915 11.7031 20.125C11.7031 18.8585 12.7335 17.8281 14 17.8281C15.2665 17.8281 16.2969 18.8585 16.2969 20.125Z",fill:"#BDCCD4"})})}),Object(jsx_runtime.jsx)("span",{className:"wallet__icon",children:Object(jsx_runtime.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"32",height:"32",viewBox:"0 0 32 32",fill:"none",children:[Object(jsx_runtime.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M20.427 26C20.427 27.8937 18.8922 29.4286 17 29.4286C15.1079 29.4286 13.5731 27.8937 13.5731 26H20.427ZM28.3362 21.1939C28.4067 21.2681 28.4745 21.3393 28.5388 21.4084C28.8602 21.7534 29.0027 22.167 29 22.5714C28.9947 23.45 28.3047 24.2857 27.2804 24.2857H6.71968C5.69539 24.2857 5.00593 23.45 5.00004 22.5714C4.99736 22.167 5.13986 21.7539 5.46129 21.4084C5.52557 21.3393 5.59334 21.2681 5.6639 21.1939C6.72939 20.0737 8.43289 18.2828 8.43289 13.1429C8.43289 8.98036 11.3515 5.64821 15.2868 4.83071V3.71429C15.2868 2.76768 16.054 2 17 2C17.9461 2 18.7133 2.76768 18.7133 3.71429V4.83071C19.9854 5.09499 21.1513 5.62204 22.1468 6.35498C20.3032 7.09144 19.0007 8.89361 19.0007 11C19.0007 13.7614 21.2393 16 24.0007 16C24.6088 16 25.1915 15.8914 25.7306 15.6927C26.182 18.9292 27.4699 20.2832 28.3362 21.1939Z",fill:"#BDCCD4"}),Object(jsx_runtime.jsx)("circle",{cx:"24",cy:"11",r:"3",fill:"#4FFFB0"})]})})]}),Object(jsx_runtime.jsxs)("div",{className:"flex-container wallet__info-wrapper",children:[Object(jsx_runtime.jsxs)("div",{className:"flex-container column text-end",children:[Object(jsx_runtime.jsx)(FormattedBalance.a,{balance:account.balances[0],unitStyle:metricUnit.b.SHORT,precision:1}),Object(jsx_runtime.jsxs)("div",{className:"wallet__fiat-balance",children:["~$ ","―"]})]}),Object(jsx_runtime.jsx)("div",{children:Object(jsx_runtime.jsx)(react_identicon.a,{value:"E7ncQKp4xayUoUdpraxBjT7NzLoayLJA4TuPcKKboBkJ5GH",size:32})}),Object(jsx_runtime.jsx)("div",{className:"wallet__account-name",children:account.name}),Object(jsx_runtime.jsx)("div",{children:Object(jsx_runtime.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"10",height:"8",viewBox:"0 0 10 8",fill:"none",children:Object(jsx_runtime.jsx)("path",{d:"M4.46879 7.00939L0.218787 2.75938C-0.0749634 2.46563 -0.0749634 1.99063 0.218787 1.7L0.925036 0.99375C1.21879 0.7 1.69379 0.7 1.98441 0.99375L4.99691 4.00626L8.00941 0.99375C8.30316 0.7 8.77816 0.7 9.06879 0.99375L9.77503 1.7C10.0688 1.99375 10.0688 2.46875 9.77503 2.75938L5.52504 7.00939C5.23754 7.30314 4.76254 7.30314 4.46879 7.00939Z",fill:"#BDCCD4"})})})]})]})};try{Wallet_Wallet.displayName="Wallet",Wallet_Wallet.__docgenInfo={description:"",displayName:"Wallet",props:{modalContainerRef:{defaultValue:null,description:"",name:"modalContainerRef",required:!0,type:{name:"MutableRefObject<HTMLDivElement | null>"}},account:{defaultValue:null,description:"",name:"account",required:!0,type:{name:"Account"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Wallet/Wallet.tsx#Wallet"]={docgenInfo:Wallet_Wallet.__docgenInfo,name:"Wallet",path:"src/components/Wallet/Wallet.tsx#Wallet"})}catch(__react_docgen_typescript_loader_error){}var useToPrecision=__webpack_require__("./src/hooks/math/useToPrecision.tsx");__webpack_exports__.default={title:"components/Wallet",component:Wallet_Wallet,args:{account:{name:"Alice 1",balances:[{assetId:"0",balance:Object(useToPrecision.a)("100200")}],id:"1",isActive:!0,vestingSchedule:{}}}};const Default=(args=>{const modalContainerRef=Object(react.useRef)(null),methods=Object(index_esm.c)();return Object(jsx_runtime.jsx)(StorybookWrapper.a,{children:Object(jsx_runtime.jsxs)("div",{style:{margin:"-1rem",padding:"1rem",backgroundColor:colors_module_default.a.gray2},children:[Object(jsx_runtime.jsx)("div",{ref:modalContainerRef}),Object(jsx_runtime.jsx)(index_esm.b,{...methods,children:Object(jsx_runtime.jsx)("form",{onSubmit:methods.handleSubmit((()=>{})),children:Object(jsx_runtime.jsx)("div",{style:{width:"360px"},children:Object(jsx_runtime.jsx)(Wallet_Wallet,{...args,modalContainerRef:modalContainerRef})})})})]})})}).bind({})},"./src/hooks/math/useFromPrecision.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return fromPrecision12}));var bignumber_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/bignumber.js/bignumber.js"),bignumber_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(bignumber_js__WEBPACK_IMPORTED_MODULE_0__),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js");const precision12=new bignumber_js__WEBPACK_IMPORTED_MODULE_0___default.a(10).pow(12),precision18=new bignumber_js__WEBPACK_IMPORTED_MODULE_0___default.a(10).pow(18),fromPrecision12=amount=>amount&&new bignumber_js__WEBPACK_IMPORTED_MODULE_0___default.a(amount).dividedBy(precision12).toFixed(12),useFromPrecision12=amount=>Object(react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>fromPrecision12(amount)),[amount]),useFromPrecision18=amount=>Object(react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>amount&&new bignumber_js__WEBPACK_IMPORTED_MODULE_0___default.a(amount).dividedBy(precision18).toFixed(18)),[amount]);try{fromPrecision12.displayName="fromPrecision12",fromPrecision12.__docgenInfo={description:"",displayName:"fromPrecision12",props:{c:{defaultValue:null,description:"The coefficient of the value of this BigNumber, an array of base 1e14 integer numbers, or null.",name:"c",required:!0,type:{name:"number[] | null"}},e:{defaultValue:null,description:"The exponent of the value of this BigNumber, an integer number, -1000000000 to 1000000000, or null.",name:"e",required:!0,type:{name:"number | null"}},s:{defaultValue:null,description:"The sign of the value of this BigNumber, -1, 1, or null.",name:"s",required:!0,type:{name:"number | null"}},absoluteValue:{defaultValue:null,description:"Returns a BigNumber whose value is the absolute value, i.e. the magnitude, of the value of this\nBigNumber.\n\nThe return value is always exact and unrounded.\n\n```ts\nx = new BigNumber(-0.8)\nx.absoluteValue()           // '0.8'\n```",name:"absoluteValue",required:!0,type:{name:"() => BigNumber"}},abs:{defaultValue:null,description:"Returns a BigNumber whose value is the absolute value, i.e. the magnitude, of the value of this\nBigNumber.\n\nThe return value is always exact and unrounded.\n\n```ts\nx = new BigNumber(-0.8)\nx.abs()                     // '0.8'\n```",name:"abs",required:!0,type:{name:"() => BigNumber"}},comparedTo:{defaultValue:null,description:"Returns |                                                               |\n:-------:|:--------------------------------------------------------------|\n   1    | If the value of this BigNumber is greater than the value of `n`\n  -1    | If the value of this BigNumber is less than the value of `n`\n   0    | If this BigNumber and `n` have the same value\n`null`  | If the value of either this BigNumber or `n` is `NaN`\n\n```ts\n\nx = new BigNumber(Infinity)\ny = new BigNumber(5)\nx.comparedTo(y)                 // 1\nx.comparedTo(x.minus(1))        // 0\ny.comparedTo(NaN)               // null\ny.comparedTo('110', 2)          // -1\n```\n@param n A numeric value.\n@param base The base of n.",name:"comparedTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => number"}},decimalPlaces:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded by rounding mode\n`roundingMode` to a maximum of `decimalPlaces` decimal places.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the return value is the number of\ndecimal places of the value of this BigNumber, or `null` if the value of this BigNumber is\n±`Infinity` or `NaN`.\n\nIf `roundingMode` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(1234.56)\nx.decimalPlaces()                      // 2\nx.decimalPlaces(1)                     // '1234.6'\nx.decimalPlaces(2)                     // '1234.56'\nx.decimalPlaces(10)                    // '1234.56'\nx.decimalPlaces(0, 1)                  // '1234'\nx.decimalPlaces(0, 6)                  // '1235'\nx.decimalPlaces(1, 1)                  // '1234.5'\nx.decimalPlaces(1, BigNumber.ROUND_HALF_EVEN)     // '1234.6'\nx                                      // '1234.56'\ny = new BigNumber('9.9e-101')\ny.decimalPlaces()                      // 102\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"decimalPlaces",required:!0,type:{name:"{ (): number; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},dp:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded by rounding mode\n`roundingMode` to a maximum of `decimalPlaces` decimal places.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the return value is the number of\ndecimal places of the value of this BigNumber, or `null` if the value of this BigNumber is\n±`Infinity` or `NaN`.\n\nIf `roundingMode` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(1234.56)\nx.dp()                                 // 2\nx.dp(1)                                // '1234.6'\nx.dp(2)                                // '1234.56'\nx.dp(10)                               // '1234.56'\nx.dp(0, 1)                             // '1234'\nx.dp(0, 6)                             // '1235'\nx.dp(1, 1)                             // '1234.5'\nx.dp(1, BigNumber.ROUND_HALF_EVEN)     // '1234.6'\nx                                      // '1234.56'\ny = new BigNumber('9.9e-101')\ny.dp()                                 // 102\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"dp",required:!0,type:{name:"{ (): number; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},dividedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber divided by `n`, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\n```ts\nx = new BigNumber(355)\ny = new BigNumber(113)\nx.dividedBy(y)                  // '3.14159292035398230088'\nx.dividedBy(5)                  // '71'\nx.dividedBy(47, 16)             // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"dividedBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},div:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber divided by `n`, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\n```ts\nx = new BigNumber(355)\ny = new BigNumber(113)\nx.div(y)                    // '3.14159292035398230088'\nx.div(5)                    // '71'\nx.div(47, 16)               // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"div",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},dividedToIntegerBy:{defaultValue:null,description:"Returns a BigNumber whose value is the integer part of dividing the value of this BigNumber by\n`n`.\n\n```ts\nx = new BigNumber(5)\ny = new BigNumber(3)\nx.dividedToIntegerBy(y)              // '1'\nx.dividedToIntegerBy(0.7)            // '7'\nx.dividedToIntegerBy('0.f', 16)      // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"dividedToIntegerBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},idiv:{defaultValue:null,description:"Returns a BigNumber whose value is the integer part of dividing the value of this BigNumber by\n`n`.\n\n```ts\nx = new BigNumber(5)\ny = new BigNumber(3)\nx.idiv(y)                       // '1'\nx.idiv(0.7)                     // '7'\nx.idiv('0.f', 16)               // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"idiv",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},exponentiatedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber exponentiated by `n`, i.e.\nraised to the power `n`, and optionally modulo a modulus `m`.\n\nIf `n` is negative the result is rounded according to the current `DECIMAL_PLACES` and\n`ROUNDING_MODE` settings.\n\nAs the number of digits of the result of the power operation can grow so large so quickly,\ne.g. 123.456**10000 has over 50000 digits, the number of significant digits calculated is\nlimited to the value of the `POW_PRECISION` setting (unless a modulus `m` is specified).\n\nBy default `POW_PRECISION` is set to 0. This means that an unlimited number of significant\ndigits will be calculated, and that the method's performance will decrease dramatically for\nlarger exponents.\n\nIf `m` is specified and the value of `m`, `n` and this BigNumber are integers and `n` is\npositive, then a fast modular exponentiation algorithm is used, otherwise the operation will\nbe performed as `x.exponentiatedBy(n).modulo(m)` with a `POW_PRECISION` of 0.\n\nThrows if `n` is not an integer.\n\n```ts\nMath.pow(0.7, 2)                    // 0.48999999999999994\nx = new BigNumber(0.7)\nx.exponentiatedBy(2)                // '0.49'\nBigNumber(3).exponentiatedBy(-2)    // '0.11111111111111111111'\n```\n@param n The exponent, an integer.\n@param m The modulus.",name:"exponentiatedBy",required:!0,type:{name:"{ (n: Value, m?: Value | undefined): BigNumber; (n: number, m?: Value | undefined): BigNumber; }"}},pow:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber exponentiated by `n`, i.e.\nraised to the power `n`, and optionally modulo a modulus `m`.\n\nIf `n` is negative the result is rounded according to the current `DECIMAL_PLACES` and\n`ROUNDING_MODE` settings.\n\nAs the number of digits of the result of the power operation can grow so large so quickly,\ne.g. 123.456**10000 has over 50000 digits, the number of significant digits calculated is\nlimited to the value of the `POW_PRECISION` setting (unless a modulus `m` is specified).\n\nBy default `POW_PRECISION` is set to 0. This means that an unlimited number of significant\ndigits will be calculated, and that the method's performance will decrease dramatically for\nlarger exponents.\n\nIf `m` is specified and the value of `m`, `n` and this BigNumber are integers and `n` is\npositive, then a fast modular exponentiation algorithm is used, otherwise the operation will\nbe performed as `x.pow(n).modulo(m)` with a `POW_PRECISION` of 0.\n\nThrows if `n` is not an integer.\n\n```ts\nMath.pow(0.7, 2)                   // 0.48999999999999994\nx = new BigNumber(0.7)\nx.pow(2)                           // '0.49'\nBigNumber(3).pow(-2)               // '0.11111111111111111111'\n```\n@param n The exponent, an integer.\n@param m The modulus.",name:"pow",required:!0,type:{name:"{ (n: Value, m?: Value | undefined): BigNumber; (n: number, m?: Value | undefined): BigNumber; }"}},integerValue:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded to an integer using\nrounding mode `rm`.\n\nIf `rm` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `rm` is invalid.\n\n```ts\nx = new BigNumber(123.456)\nx.integerValue()                        // '123'\nx.integerValue(BigNumber.ROUND_CEIL)    // '124'\ny = new BigNumber(-12.7)\ny.integerValue()                        // '-13'\nx.integerValue(BigNumber.ROUND_DOWN)    // '-12'\n```\n@param rm The roundng mode, an integer, 0 to 8.",name:"integerValue",required:!0,type:{name:"(rm?: RoundingMode | undefined) => BigNumber"}},isEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is equal to the value of `n`, otherwise returns\n`false`.\n\nAs with JavaScript, `NaN` does not equal `NaN`.\n\n```ts\n0 === 1e-324                           // true\nx = new BigNumber(0)\nx.isEqualTo('1e-324')                  // false\nBigNumber(-0).isEqualTo(x)             // true  ( -0 === 0 )\nBigNumber(255).isEqualTo('ff', 16)     // true\n\ny = new BigNumber(NaN)\ny.isEqualTo(NaN)                // false\n```\n@param n A numeric value.\n@param base The base of n.",name:"isEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},eq:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is equal to the value of `n`, otherwise returns\n`false`.\n\nAs with JavaScript, `NaN` does not equal `NaN`.\n\n```ts\n0 === 1e-324                    // true\nx = new BigNumber(0)\nx.eq('1e-324')                  // false\nBigNumber(-0).eq(x)             // true  ( -0 === 0 )\nBigNumber(255).eq('ff', 16)     // true\n\ny = new BigNumber(NaN)\ny.eq(NaN)                       // false\n```\n@param n A numeric value.\n@param base The base of n.",name:"eq",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isFinite:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is a finite number, otherwise returns `false`.\n\nThe only possible non-finite values of a BigNumber are `NaN`, `Infinity` and `-Infinity`.\n\n```ts\nx = new BigNumber(1)\nx.isFinite()                    // true\ny = new BigNumber(Infinity)\ny.isFinite()                    // false\n```",name:"isFinite",required:!0,type:{name:"() => boolean"}},isGreaterThan:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than the value of `n`, otherwise\nreturns `false`.\n\n```ts\n0.1 > (0.3 - 0.2)                             // true\nx = new BigNumber(0.1)\nx.isGreaterThan(BigNumber(0.3).minus(0.2))    // false\nBigNumber(0).isGreaterThan(x)                 // false\nBigNumber(11, 3).isGreaterThan(11.1, 2)       // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isGreaterThan",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},gt:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than the value of `n`, otherwise\nreturns `false`.\n\n```ts\n0.1 > (0.3 - 0                     // true\nx = new BigNumber(0.1)\nx.gt(BigNumber(0.3).minus(0.2))    // false\nBigNumber(0).gt(x)                 // false\nBigNumber(11, 3).gt(11.1, 2)       // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"gt",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isGreaterThanOrEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n(0.3 - 0.2) >= 0.1                                  // false\nx = new BigNumber(0.3).minus(0.2)\nx.isGreaterThanOrEqualTo(0.1)                       // true\nBigNumber(1).isGreaterThanOrEqualTo(x)              // true\nBigNumber(10, 18).isGreaterThanOrEqualTo('i', 36)   // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isGreaterThanOrEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},gte:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n(0.3 - 0.2) >= 0.1                    // false\nx = new BigNumber(0.3).minus(0.2)\nx.gte(0.1)                            // true\nBigNumber(1).gte(x)                   // true\nBigNumber(10, 18).gte('i', 36)        // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"gte",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isInteger:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is an integer, otherwise returns `false`.\n\n```ts\nx = new BigNumber(1)\nx.isInteger()                   // true\ny = new BigNumber(123.456)\ny.isInteger()                   // false\n```",name:"isInteger",required:!0,type:{name:"() => boolean"}},isLessThan:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than the value of `n`, otherwise returns\n`false`.\n\n```ts\n(0.3 - 0.2) < 0.1                       // true\nx = new BigNumber(0.3).minus(0.2)\nx.isLessThan(0.1)                       // false\nBigNumber(0).isLessThan(x)              // true\nBigNumber(11.1, 2).isLessThan(11, 3)    // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isLessThan",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},lt:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than the value of `n`, otherwise returns\n`false`.\n\n```ts\n(0.3 - 0.2) < 0.1                       // true\nx = new BigNumber(0.3).minus(0.2)\nx.lt(0.1)                               // false\nBigNumber(0).lt(x)                      // true\nBigNumber(11.1, 2).lt(11, 3)            // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"lt",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isLessThanOrEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n0.1 <= (0.3 - 0.2)                                 // false\nx = new BigNumber(0.1)\nx.isLessThanOrEqualTo(BigNumber(0.3).minus(0.2))   // true\nBigNumber(-1).isLessThanOrEqualTo(x)               // true\nBigNumber(10, 18).isLessThanOrEqualTo('i', 36)     // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isLessThanOrEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},lte:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n0.1 <= (0.3 - 0.2)                  // false\nx = new BigNumber(0.1)\nx.lte(BigNumber(0.3).minus(0.2))    // true\nBigNumber(-1).lte(x)                // true\nBigNumber(10, 18).lte('i', 36)      // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"lte",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isNaN:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is `NaN`, otherwise returns `false`.\n\n```ts\nx = new BigNumber(NaN)\nx.isNaN()                       // true\ny = new BigNumber('Infinity')\ny.isNaN()                       // false\n```",name:"isNaN",required:!0,type:{name:"() => boolean"}},isNegative:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is negative, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isNegative()                  // true\ny = new BigNumber(2)\ny.isNegative()                  // false\n```",name:"isNegative",required:!0,type:{name:"() => boolean"}},isPositive:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is positive, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isPositive()                  // false\ny = new BigNumber(2)\ny.isPositive()                  // true\n```",name:"isPositive",required:!0,type:{name:"() => boolean"}},isZero:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is zero or minus zero, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isZero()                 // true\n```",name:"isZero",required:!0,type:{name:"() => boolean"}},minus:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber minus `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.3 - 0.1                       // 0.19999999999999998\nx = new BigNumber(0.3)\nx.minus(0.1)                    // '0.2'\nx.minus(0.6, 20)                // '0'\n```\n@param n A numeric value.\n@param base The base of n.",name:"minus",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},modulo:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber modulo `n`, i.e. the integer\nremainder of dividing this BigNumber by `n`.\n\nThe value returned, and in particular its sign, is dependent on the value of the `MODULO_MODE`\nsetting of this BigNumber constructor. If it is 1 (default value), the result will have the\nsame sign as this BigNumber, and it will match that of Javascript's `%` operator (within the\nlimits of double precision) and BigDecimal's `remainder` method.\n\nThe return value is always exact and unrounded.\n\nSee `MODULO_MODE` for a description of the other modulo modes.\n\n```ts\n1 % 0.9                         // 0.09999999999999998\nx = new BigNumber(1)\nx.modulo(0.9)                   // '0.1'\ny = new BigNumber(33)\ny.modulo('a', 33)               // '3'\n```\n@param n A numeric value.\n@param base The base of n.",name:"modulo",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},mod:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber modulo `n`, i.e. the integer\nremainder of dividing this BigNumber by `n`.\n\nThe value returned, and in particular its sign, is dependent on the value of the `MODULO_MODE`\nsetting of this BigNumber constructor. If it is 1 (default value), the result will have the\nsame sign as this BigNumber, and it will match that of Javascript's `%` operator (within the\nlimits of double precision) and BigDecimal's `remainder` method.\n\nThe return value is always exact and unrounded.\n\nSee `MODULO_MODE` for a description of the other modulo modes.\n\n```ts\n1 % 0.9                      // 0.09999999999999998\nx = new BigNumber(1)\nx.mod(0.9)                   // '0.1'\ny = new BigNumber(33)\ny.mod('a', 33)               // '3'\n```\n@param n A numeric value.\n@param base The base of n.",name:"mod",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},multipliedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber multiplied by `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.6 * 3                                // 1.7999999999999998\nx = new BigNumber(0.6)\ny = x.multipliedBy(3)                  // '1.8'\nBigNumber('7e+500').multipliedBy(y)    // '1.26e+501'\nx.multipliedBy('-a', 16)               // '-6'\n```\n@param n A numeric value.\n@param base The base of n.",name:"multipliedBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},times:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber multiplied by `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.6 * 3                         // 1.7999999999999998\nx = new BigNumber(0.6)\ny = x.times(3)                  // '1.8'\nBigNumber('7e+500').times(y)    // '1.26e+501'\nx.times('-a', 16)               // '-6'\n```\n@param n A numeric value.\n@param base The base of n.",name:"times",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},negated:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber negated, i.e. multiplied by -1.\n\n```ts\nx = new BigNumber(1.8)\nx.negated()                     // '-1.8'\ny = new BigNumber(-1.3)\ny.negated()                     // '1.3'\n```",name:"negated",required:!0,type:{name:"() => BigNumber"}},plus:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber plus `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.1 + 0.2                       // 0.30000000000000004\nx = new BigNumber(0.1)\ny = x.plus(0.2)                 // '0.3'\nBigNumber(0.7).plus(x).plus(y)  // '1.1'\nx.plus('0.1', 8)                // '0.225'\n```\n@param n A numeric value.\n@param base The base of n.",name:"plus",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},precision:{defaultValue:null,description:"Returns the number of significant digits of the value of this BigNumber, or `null` if the value\nof this BigNumber is ±`Infinity` or `NaN`.\n\nIf `includeZeros` is true then any trailing zeros of the integer part of the value of this\nBigNumber are counted as significant digits, otherwise they are not.\n\nThrows if `includeZeros` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.precision()                         // 9\ny = new BigNumber(987000)\ny.precision(false)                    // 3\ny.precision(true)                     // 6\n```\nReturns a BigNumber whose value is the value of this BigNumber rounded to a precision of\n`significantDigits` significant digits using rounding mode `roundingMode`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` will be used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.precision(6)                         // '9876.54'\nx.precision(6, BigNumber.ROUND_UP)     // '9876.55'\nx.precision(2)                         // '9900'\nx.precision(2, 1)                      // '9800'\nx                                      // '9876.54321'\n```\n@param includeZeros Whether to include integer trailing zeros in the significant digit count.\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"precision",required:!0,type:{name:"{ (includeZeros?: boolean | undefined): number; (significantDigits: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},sd:{defaultValue:null,description:"Returns the number of significant digits of the value of this BigNumber,\nor `null` if the value of this BigNumber is ±`Infinity` or `NaN`.\n\nIf `includeZeros` is true then any trailing zeros of the integer part of\nthe value of this BigNumber are counted as significant digits, otherwise\nthey are not.\n\nThrows if `includeZeros` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.sd()                         // 9\ny = new BigNumber(987000)\ny.sd(false)                    // 3\ny.sd(true)                     // 6\n```\nReturns a BigNumber whose value is the value of this BigNumber rounded to a precision of\n`significantDigits` significant digits using rounding mode `roundingMode`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` will be used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.sd(6)                           // '9876.54'\nx.sd(6, BigNumber.ROUND_UP)       // '9876.55'\nx.sd(2)                           // '9900'\nx.sd(2, 1)                        // '9800'\nx                                 // '9876.54321'\n```\n@param includeZeros Whether to include integer trailing zeros in the significant digit count.\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"sd",required:!0,type:{name:"{ (includeZeros?: boolean | undefined): number; (significantDigits: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},shiftedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber shifted by `n` places.\n\nThe shift is of the decimal point, i.e. of powers of ten, and is to the left if `n` is negative\nor to the right if `n` is positive.\n\nThe return value is always exact and unrounded.\n\nThrows if `n` is invalid.\n\n```ts\nx = new BigNumber(1.23)\nx.shiftedBy(3)                      // '1230'\nx.shiftedBy(-3)                     // '0.00123'\n```\n@param n The shift value, integer, -9007199254740991 to 9007199254740991.",name:"shiftedBy",required:!0,type:{name:"(n: number) => BigNumber"}},squareRoot:{defaultValue:null,description:"Returns a BigNumber whose value is the square root of the value of this BigNumber, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\nThe return value will be correctly rounded, i.e. rounded as if the result was first calculated\nto an infinite number of correct digits before rounding.\n\n```ts\nx = new BigNumber(16)\nx.squareRoot()                  // '4'\ny = new BigNumber(3)\ny.squareRoot()                  // '1.73205080756887729353'\n```",name:"squareRoot",required:!0,type:{name:"() => BigNumber"}},sqrt:{defaultValue:null,description:"Returns a BigNumber whose value is the square root of the value of this BigNumber, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\nThe return value will be correctly rounded, i.e. rounded as if the result was first calculated\nto an infinite number of correct digits before rounding.\n\n```ts\nx = new BigNumber(16)\nx.sqrt()                  // '4'\ny = new BigNumber(3)\ny.sqrt()                  // '1.73205080756887729353'\n```",name:"sqrt",required:!0,type:{name:"() => BigNumber"}},toExponential:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in exponential notation rounded using\nrounding mode `roundingMode` to `decimalPlaces` decimal places, i.e with one digit before the\ndecimal point and `decimalPlaces` digits after it.\n\nIf the value of this BigNumber in exponential notation has fewer than `decimalPlaces` fraction\ndigits, the return value will be appended with zeros accordingly.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the number of digits after the\ndecimal point defaults to the minimum number of digits necessary to represent the value\nexactly.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = 45.6\ny = new BigNumber(x)\nx.toExponential()               // '4.56e+1'\ny.toExponential()               // '4.56e+1'\nx.toExponential(0)              // '5e+1'\ny.toExponential(0)              // '5e+1'\nx.toExponential(1)              // '4.6e+1'\ny.toExponential(1)              // '4.6e+1'\ny.toExponential(1, 1)           // '4.5e+1'  (ROUND_DOWN)\nx.toExponential(3)              // '4.560e+1'\ny.toExponential(3)              // '4.560e+1'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"toExponential",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}},toFixed:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in normal (fixed-point) notation\nrounded to `decimalPlaces` decimal places using rounding mode `roundingMode`.\n\nIf the value of this BigNumber in normal notation has fewer than `decimalPlaces` fraction\ndigits, the return value will be appended with zeros accordingly.\n\nUnlike `Number.prototype.toFixed`, which returns exponential notation if a number is greater or\nequal to 10**21, this method will always return normal notation.\n\nIf `decimalPlaces` is omitted or is `null` or `undefined`, the return value will be unrounded\nand in normal notation. This is also unlike `Number.prototype.toFixed`, which returns the value\nto zero decimal places. It is useful when normal notation is required and the current\n`EXPONENTIAL_AT` setting causes `toString` to return exponential notation.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = 3.456\ny = new BigNumber(x)\nx.toFixed()                     // '3'\ny.toFixed()                     // '3.456'\ny.toFixed(0)                    // '3'\nx.toFixed(2)                    // '3.46'\ny.toFixed(2)                    // '3.46'\ny.toFixed(2, 1)                 // '3.45'  (ROUND_DOWN)\nx.toFixed(5)                    // '3.45600'\ny.toFixed(5)                    // '3.45600'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"toFixed",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}},toFormat:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in normal (fixed-point) notation\nrounded to `decimalPlaces` decimal places using rounding mode `roundingMode`, and formatted\naccording to the properties of the `format` or `FORMAT` object.\n\nThe formatting object may contain some or all of the properties shown in the examples below.\n\nIf `decimalPlaces` is omitted or is `null` or `undefined`, then the return value is not\nrounded to a fixed number of decimal places.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nIf `format` is omitted or is `null` or `undefined`, `FORMAT` is used.\n\nThrows if `decimalPlaces`, `roundingMode`, or `format` is invalid.\n\n```ts\nfmt = {\n  decimalSeparator: '.',\n  groupSeparator: ',',\n  groupSize: 3,\n  secondaryGroupSize: 0,\n  fractionGroupSeparator: ' ',\n  fractionGroupSize: 0\n}\n\nx = new BigNumber('123456789.123456789')\n\n// Set the global formatting options\nBigNumber.config({ FORMAT: fmt })\n\nx.toFormat()                              // '123,456,789.123456789'\nx.toFormat(3)                             // '123,456,789.123'\n\n// If a reference to the object assigned to FORMAT has been retained,\n// the format properties can be changed directly\nfmt.groupSeparator = ' '\nfmt.fractionGroupSize = 5\nx.toFormat()                              // '123 456 789.12345 6789'\n\n// Alternatively, pass the formatting options as an argument\nfmt = {\n  decimalSeparator: ',',\n  groupSeparator: '.',\n  groupSize: 3,\n  secondaryGroupSize: 2\n}\n\nx.toFormat()                              // '123 456 789.12345 6789'\nx.toFormat(fmt)                           // '12.34.56.789,123456789'\nx.toFormat(2, fmt)                        // '12.34.56.789,12'\nx.toFormat(3, BigNumber.ROUND_UP, fmt)    // '12.34.56.789,124'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.\n@param format Formatting options object. See `BigNumber.Format`.",name:"toFormat",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode: RoundingMode, format?: Format | undefined): string; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (decimalPlaces?: number | undefined): string; (decimalPlaces: number, format: Format): string; (format: Format): string; }"}},toFraction:{defaultValue:null,description:"Returns an array of two BigNumbers representing the value of this BigNumber as a simple\nfraction with an integer numerator and an integer denominator.\nThe denominator will be a positive non-zero value less than or equal to `max_denominator`.\nIf a maximum denominator, `max_denominator`, is not specified, or is `null` or `undefined`, the\ndenominator will be the lowest value necessary to represent the number exactly.\n\nThrows if `max_denominator` is invalid.\n\n```ts\nx = new BigNumber(1.75)\nx.toFraction()                  // '7, 4'\n\npi = new BigNumber('3.14159265358')\npi.toFraction()                 // '157079632679,50000000000'\npi.toFraction(100000)           // '312689, 99532'\npi.toFraction(10000)            // '355, 113'\npi.toFraction(100)              // '311, 99'\npi.toFraction(10)               // '22, 7'\npi.toFraction(1)                // '3, 1'\n```\n@param max_denominator The maximum denominator, integer > 0, or Infinity.",name:"toFraction",required:!0,type:{name:"(max_denominator?: Value | undefined) => [BigNumber, BigNumber]"}},toJSON:{defaultValue:null,description:"As `valueOf`.",name:"toJSON",required:!0,type:{name:"() => string"}},toNumber:{defaultValue:null,description:"Returns the value of this BigNumber as a JavaScript primitive number.\n\nUsing the unary plus operator gives the same result.\n\n```ts\nx = new BigNumber(456.789)\nx.toNumber()                    // 456.789\n+x                              // 456.789\n\ny = new BigNumber('45987349857634085409857349856430985')\ny.toNumber()                    // 4.598734985763409e+34\n\nz = new BigNumber(-0)\n1 / z.toNumber()                // -Infinity\n1 / +z                          // -Infinity\n```",name:"toNumber",required:!0,type:{name:"() => number"}},toPrecision:{defaultValue:null,description:"Returns a string representing the value of this BigNumber rounded to `significantDigits`\nsignificant digits using rounding mode `roundingMode`.\n\nIf `significantDigits` is less than the number of digits necessary to represent the integer\npart of the value in normal (fixed-point) notation, then exponential notation is used.\n\nIf `significantDigits` is omitted, or is `null` or `undefined`, then the return value is the\nsame as `n.toString()`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = 45.6\ny = new BigNumber(x)\nx.toPrecision()                 // '45.6'\ny.toPrecision()                 // '45.6'\nx.toPrecision(1)                // '5e+1'\ny.toPrecision(1)                // '5e+1'\ny.toPrecision(2, 0)             // '4.6e+1'  (ROUND_UP)\ny.toPrecision(2, 1)             // '4.5e+1'  (ROUND_DOWN)\nx.toPrecision(5)                // '45.600'\ny.toPrecision(5)                // '45.600'\n```\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer 0 to 8.",name:"toPrecision",required:!0,type:{name:"{ (significantDigits: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/hooks/math/useFromPrecision.tsx#fromPrecision12"]={docgenInfo:fromPrecision12.__docgenInfo,name:"fromPrecision12",path:"src/hooks/math/useFromPrecision.tsx#fromPrecision12"})}catch(__react_docgen_typescript_loader_error){}try{useFromPrecision12.displayName="useFromPrecision12",useFromPrecision12.__docgenInfo={description:"",displayName:"useFromPrecision12",props:{c:{defaultValue:null,description:"The coefficient of the value of this BigNumber, an array of base 1e14 integer numbers, or null.",name:"c",required:!0,type:{name:"number[] | null"}},e:{defaultValue:null,description:"The exponent of the value of this BigNumber, an integer number, -1000000000 to 1000000000, or null.",name:"e",required:!0,type:{name:"number | null"}},s:{defaultValue:null,description:"The sign of the value of this BigNumber, -1, 1, or null.",name:"s",required:!0,type:{name:"number | null"}},absoluteValue:{defaultValue:null,description:"Returns a BigNumber whose value is the absolute value, i.e. the magnitude, of the value of this\nBigNumber.\n\nThe return value is always exact and unrounded.\n\n```ts\nx = new BigNumber(-0.8)\nx.absoluteValue()           // '0.8'\n```",name:"absoluteValue",required:!0,type:{name:"() => BigNumber"}},abs:{defaultValue:null,description:"Returns a BigNumber whose value is the absolute value, i.e. the magnitude, of the value of this\nBigNumber.\n\nThe return value is always exact and unrounded.\n\n```ts\nx = new BigNumber(-0.8)\nx.abs()                     // '0.8'\n```",name:"abs",required:!0,type:{name:"() => BigNumber"}},comparedTo:{defaultValue:null,description:"Returns |                                                               |\n:-------:|:--------------------------------------------------------------|\n   1    | If the value of this BigNumber is greater than the value of `n`\n  -1    | If the value of this BigNumber is less than the value of `n`\n   0    | If this BigNumber and `n` have the same value\n`null`  | If the value of either this BigNumber or `n` is `NaN`\n\n```ts\n\nx = new BigNumber(Infinity)\ny = new BigNumber(5)\nx.comparedTo(y)                 // 1\nx.comparedTo(x.minus(1))        // 0\ny.comparedTo(NaN)               // null\ny.comparedTo('110', 2)          // -1\n```\n@param n A numeric value.\n@param base The base of n.",name:"comparedTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => number"}},decimalPlaces:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded by rounding mode\n`roundingMode` to a maximum of `decimalPlaces` decimal places.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the return value is the number of\ndecimal places of the value of this BigNumber, or `null` if the value of this BigNumber is\n±`Infinity` or `NaN`.\n\nIf `roundingMode` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(1234.56)\nx.decimalPlaces()                      // 2\nx.decimalPlaces(1)                     // '1234.6'\nx.decimalPlaces(2)                     // '1234.56'\nx.decimalPlaces(10)                    // '1234.56'\nx.decimalPlaces(0, 1)                  // '1234'\nx.decimalPlaces(0, 6)                  // '1235'\nx.decimalPlaces(1, 1)                  // '1234.5'\nx.decimalPlaces(1, BigNumber.ROUND_HALF_EVEN)     // '1234.6'\nx                                      // '1234.56'\ny = new BigNumber('9.9e-101')\ny.decimalPlaces()                      // 102\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"decimalPlaces",required:!0,type:{name:"{ (): number; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},dp:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded by rounding mode\n`roundingMode` to a maximum of `decimalPlaces` decimal places.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the return value is the number of\ndecimal places of the value of this BigNumber, or `null` if the value of this BigNumber is\n±`Infinity` or `NaN`.\n\nIf `roundingMode` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(1234.56)\nx.dp()                                 // 2\nx.dp(1)                                // '1234.6'\nx.dp(2)                                // '1234.56'\nx.dp(10)                               // '1234.56'\nx.dp(0, 1)                             // '1234'\nx.dp(0, 6)                             // '1235'\nx.dp(1, 1)                             // '1234.5'\nx.dp(1, BigNumber.ROUND_HALF_EVEN)     // '1234.6'\nx                                      // '1234.56'\ny = new BigNumber('9.9e-101')\ny.dp()                                 // 102\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"dp",required:!0,type:{name:"{ (): number; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},dividedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber divided by `n`, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\n```ts\nx = new BigNumber(355)\ny = new BigNumber(113)\nx.dividedBy(y)                  // '3.14159292035398230088'\nx.dividedBy(5)                  // '71'\nx.dividedBy(47, 16)             // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"dividedBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},div:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber divided by `n`, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\n```ts\nx = new BigNumber(355)\ny = new BigNumber(113)\nx.div(y)                    // '3.14159292035398230088'\nx.div(5)                    // '71'\nx.div(47, 16)               // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"div",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},dividedToIntegerBy:{defaultValue:null,description:"Returns a BigNumber whose value is the integer part of dividing the value of this BigNumber by\n`n`.\n\n```ts\nx = new BigNumber(5)\ny = new BigNumber(3)\nx.dividedToIntegerBy(y)              // '1'\nx.dividedToIntegerBy(0.7)            // '7'\nx.dividedToIntegerBy('0.f', 16)      // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"dividedToIntegerBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},idiv:{defaultValue:null,description:"Returns a BigNumber whose value is the integer part of dividing the value of this BigNumber by\n`n`.\n\n```ts\nx = new BigNumber(5)\ny = new BigNumber(3)\nx.idiv(y)                       // '1'\nx.idiv(0.7)                     // '7'\nx.idiv('0.f', 16)               // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"idiv",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},exponentiatedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber exponentiated by `n`, i.e.\nraised to the power `n`, and optionally modulo a modulus `m`.\n\nIf `n` is negative the result is rounded according to the current `DECIMAL_PLACES` and\n`ROUNDING_MODE` settings.\n\nAs the number of digits of the result of the power operation can grow so large so quickly,\ne.g. 123.456**10000 has over 50000 digits, the number of significant digits calculated is\nlimited to the value of the `POW_PRECISION` setting (unless a modulus `m` is specified).\n\nBy default `POW_PRECISION` is set to 0. This means that an unlimited number of significant\ndigits will be calculated, and that the method's performance will decrease dramatically for\nlarger exponents.\n\nIf `m` is specified and the value of `m`, `n` and this BigNumber are integers and `n` is\npositive, then a fast modular exponentiation algorithm is used, otherwise the operation will\nbe performed as `x.exponentiatedBy(n).modulo(m)` with a `POW_PRECISION` of 0.\n\nThrows if `n` is not an integer.\n\n```ts\nMath.pow(0.7, 2)                    // 0.48999999999999994\nx = new BigNumber(0.7)\nx.exponentiatedBy(2)                // '0.49'\nBigNumber(3).exponentiatedBy(-2)    // '0.11111111111111111111'\n```\n@param n The exponent, an integer.\n@param m The modulus.",name:"exponentiatedBy",required:!0,type:{name:"{ (n: Value, m?: Value | undefined): BigNumber; (n: number, m?: Value | undefined): BigNumber; }"}},pow:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber exponentiated by `n`, i.e.\nraised to the power `n`, and optionally modulo a modulus `m`.\n\nIf `n` is negative the result is rounded according to the current `DECIMAL_PLACES` and\n`ROUNDING_MODE` settings.\n\nAs the number of digits of the result of the power operation can grow so large so quickly,\ne.g. 123.456**10000 has over 50000 digits, the number of significant digits calculated is\nlimited to the value of the `POW_PRECISION` setting (unless a modulus `m` is specified).\n\nBy default `POW_PRECISION` is set to 0. This means that an unlimited number of significant\ndigits will be calculated, and that the method's performance will decrease dramatically for\nlarger exponents.\n\nIf `m` is specified and the value of `m`, `n` and this BigNumber are integers and `n` is\npositive, then a fast modular exponentiation algorithm is used, otherwise the operation will\nbe performed as `x.pow(n).modulo(m)` with a `POW_PRECISION` of 0.\n\nThrows if `n` is not an integer.\n\n```ts\nMath.pow(0.7, 2)                   // 0.48999999999999994\nx = new BigNumber(0.7)\nx.pow(2)                           // '0.49'\nBigNumber(3).pow(-2)               // '0.11111111111111111111'\n```\n@param n The exponent, an integer.\n@param m The modulus.",name:"pow",required:!0,type:{name:"{ (n: Value, m?: Value | undefined): BigNumber; (n: number, m?: Value | undefined): BigNumber; }"}},integerValue:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded to an integer using\nrounding mode `rm`.\n\nIf `rm` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `rm` is invalid.\n\n```ts\nx = new BigNumber(123.456)\nx.integerValue()                        // '123'\nx.integerValue(BigNumber.ROUND_CEIL)    // '124'\ny = new BigNumber(-12.7)\ny.integerValue()                        // '-13'\nx.integerValue(BigNumber.ROUND_DOWN)    // '-12'\n```\n@param rm The roundng mode, an integer, 0 to 8.",name:"integerValue",required:!0,type:{name:"(rm?: RoundingMode | undefined) => BigNumber"}},isEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is equal to the value of `n`, otherwise returns\n`false`.\n\nAs with JavaScript, `NaN` does not equal `NaN`.\n\n```ts\n0 === 1e-324                           // true\nx = new BigNumber(0)\nx.isEqualTo('1e-324')                  // false\nBigNumber(-0).isEqualTo(x)             // true  ( -0 === 0 )\nBigNumber(255).isEqualTo('ff', 16)     // true\n\ny = new BigNumber(NaN)\ny.isEqualTo(NaN)                // false\n```\n@param n A numeric value.\n@param base The base of n.",name:"isEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},eq:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is equal to the value of `n`, otherwise returns\n`false`.\n\nAs with JavaScript, `NaN` does not equal `NaN`.\n\n```ts\n0 === 1e-324                    // true\nx = new BigNumber(0)\nx.eq('1e-324')                  // false\nBigNumber(-0).eq(x)             // true  ( -0 === 0 )\nBigNumber(255).eq('ff', 16)     // true\n\ny = new BigNumber(NaN)\ny.eq(NaN)                       // false\n```\n@param n A numeric value.\n@param base The base of n.",name:"eq",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isFinite:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is a finite number, otherwise returns `false`.\n\nThe only possible non-finite values of a BigNumber are `NaN`, `Infinity` and `-Infinity`.\n\n```ts\nx = new BigNumber(1)\nx.isFinite()                    // true\ny = new BigNumber(Infinity)\ny.isFinite()                    // false\n```",name:"isFinite",required:!0,type:{name:"() => boolean"}},isGreaterThan:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than the value of `n`, otherwise\nreturns `false`.\n\n```ts\n0.1 > (0.3 - 0.2)                             // true\nx = new BigNumber(0.1)\nx.isGreaterThan(BigNumber(0.3).minus(0.2))    // false\nBigNumber(0).isGreaterThan(x)                 // false\nBigNumber(11, 3).isGreaterThan(11.1, 2)       // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isGreaterThan",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},gt:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than the value of `n`, otherwise\nreturns `false`.\n\n```ts\n0.1 > (0.3 - 0                     // true\nx = new BigNumber(0.1)\nx.gt(BigNumber(0.3).minus(0.2))    // false\nBigNumber(0).gt(x)                 // false\nBigNumber(11, 3).gt(11.1, 2)       // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"gt",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isGreaterThanOrEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n(0.3 - 0.2) >= 0.1                                  // false\nx = new BigNumber(0.3).minus(0.2)\nx.isGreaterThanOrEqualTo(0.1)                       // true\nBigNumber(1).isGreaterThanOrEqualTo(x)              // true\nBigNumber(10, 18).isGreaterThanOrEqualTo('i', 36)   // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isGreaterThanOrEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},gte:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n(0.3 - 0.2) >= 0.1                    // false\nx = new BigNumber(0.3).minus(0.2)\nx.gte(0.1)                            // true\nBigNumber(1).gte(x)                   // true\nBigNumber(10, 18).gte('i', 36)        // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"gte",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isInteger:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is an integer, otherwise returns `false`.\n\n```ts\nx = new BigNumber(1)\nx.isInteger()                   // true\ny = new BigNumber(123.456)\ny.isInteger()                   // false\n```",name:"isInteger",required:!0,type:{name:"() => boolean"}},isLessThan:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than the value of `n`, otherwise returns\n`false`.\n\n```ts\n(0.3 - 0.2) < 0.1                       // true\nx = new BigNumber(0.3).minus(0.2)\nx.isLessThan(0.1)                       // false\nBigNumber(0).isLessThan(x)              // true\nBigNumber(11.1, 2).isLessThan(11, 3)    // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isLessThan",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},lt:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than the value of `n`, otherwise returns\n`false`.\n\n```ts\n(0.3 - 0.2) < 0.1                       // true\nx = new BigNumber(0.3).minus(0.2)\nx.lt(0.1)                               // false\nBigNumber(0).lt(x)                      // true\nBigNumber(11.1, 2).lt(11, 3)            // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"lt",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isLessThanOrEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n0.1 <= (0.3 - 0.2)                                 // false\nx = new BigNumber(0.1)\nx.isLessThanOrEqualTo(BigNumber(0.3).minus(0.2))   // true\nBigNumber(-1).isLessThanOrEqualTo(x)               // true\nBigNumber(10, 18).isLessThanOrEqualTo('i', 36)     // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isLessThanOrEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},lte:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n0.1 <= (0.3 - 0.2)                  // false\nx = new BigNumber(0.1)\nx.lte(BigNumber(0.3).minus(0.2))    // true\nBigNumber(-1).lte(x)                // true\nBigNumber(10, 18).lte('i', 36)      // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"lte",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isNaN:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is `NaN`, otherwise returns `false`.\n\n```ts\nx = new BigNumber(NaN)\nx.isNaN()                       // true\ny = new BigNumber('Infinity')\ny.isNaN()                       // false\n```",name:"isNaN",required:!0,type:{name:"() => boolean"}},isNegative:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is negative, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isNegative()                  // true\ny = new BigNumber(2)\ny.isNegative()                  // false\n```",name:"isNegative",required:!0,type:{name:"() => boolean"}},isPositive:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is positive, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isPositive()                  // false\ny = new BigNumber(2)\ny.isPositive()                  // true\n```",name:"isPositive",required:!0,type:{name:"() => boolean"}},isZero:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is zero or minus zero, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isZero()                 // true\n```",name:"isZero",required:!0,type:{name:"() => boolean"}},minus:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber minus `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.3 - 0.1                       // 0.19999999999999998\nx = new BigNumber(0.3)\nx.minus(0.1)                    // '0.2'\nx.minus(0.6, 20)                // '0'\n```\n@param n A numeric value.\n@param base The base of n.",name:"minus",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},modulo:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber modulo `n`, i.e. the integer\nremainder of dividing this BigNumber by `n`.\n\nThe value returned, and in particular its sign, is dependent on the value of the `MODULO_MODE`\nsetting of this BigNumber constructor. If it is 1 (default value), the result will have the\nsame sign as this BigNumber, and it will match that of Javascript's `%` operator (within the\nlimits of double precision) and BigDecimal's `remainder` method.\n\nThe return value is always exact and unrounded.\n\nSee `MODULO_MODE` for a description of the other modulo modes.\n\n```ts\n1 % 0.9                         // 0.09999999999999998\nx = new BigNumber(1)\nx.modulo(0.9)                   // '0.1'\ny = new BigNumber(33)\ny.modulo('a', 33)               // '3'\n```\n@param n A numeric value.\n@param base The base of n.",name:"modulo",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},mod:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber modulo `n`, i.e. the integer\nremainder of dividing this BigNumber by `n`.\n\nThe value returned, and in particular its sign, is dependent on the value of the `MODULO_MODE`\nsetting of this BigNumber constructor. If it is 1 (default value), the result will have the\nsame sign as this BigNumber, and it will match that of Javascript's `%` operator (within the\nlimits of double precision) and BigDecimal's `remainder` method.\n\nThe return value is always exact and unrounded.\n\nSee `MODULO_MODE` for a description of the other modulo modes.\n\n```ts\n1 % 0.9                      // 0.09999999999999998\nx = new BigNumber(1)\nx.mod(0.9)                   // '0.1'\ny = new BigNumber(33)\ny.mod('a', 33)               // '3'\n```\n@param n A numeric value.\n@param base The base of n.",name:"mod",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},multipliedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber multiplied by `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.6 * 3                                // 1.7999999999999998\nx = new BigNumber(0.6)\ny = x.multipliedBy(3)                  // '1.8'\nBigNumber('7e+500').multipliedBy(y)    // '1.26e+501'\nx.multipliedBy('-a', 16)               // '-6'\n```\n@param n A numeric value.\n@param base The base of n.",name:"multipliedBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},times:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber multiplied by `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.6 * 3                         // 1.7999999999999998\nx = new BigNumber(0.6)\ny = x.times(3)                  // '1.8'\nBigNumber('7e+500').times(y)    // '1.26e+501'\nx.times('-a', 16)               // '-6'\n```\n@param n A numeric value.\n@param base The base of n.",name:"times",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},negated:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber negated, i.e. multiplied by -1.\n\n```ts\nx = new BigNumber(1.8)\nx.negated()                     // '-1.8'\ny = new BigNumber(-1.3)\ny.negated()                     // '1.3'\n```",name:"negated",required:!0,type:{name:"() => BigNumber"}},plus:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber plus `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.1 + 0.2                       // 0.30000000000000004\nx = new BigNumber(0.1)\ny = x.plus(0.2)                 // '0.3'\nBigNumber(0.7).plus(x).plus(y)  // '1.1'\nx.plus('0.1', 8)                // '0.225'\n```\n@param n A numeric value.\n@param base The base of n.",name:"plus",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},precision:{defaultValue:null,description:"Returns the number of significant digits of the value of this BigNumber, or `null` if the value\nof this BigNumber is ±`Infinity` or `NaN`.\n\nIf `includeZeros` is true then any trailing zeros of the integer part of the value of this\nBigNumber are counted as significant digits, otherwise they are not.\n\nThrows if `includeZeros` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.precision()                         // 9\ny = new BigNumber(987000)\ny.precision(false)                    // 3\ny.precision(true)                     // 6\n```\nReturns a BigNumber whose value is the value of this BigNumber rounded to a precision of\n`significantDigits` significant digits using rounding mode `roundingMode`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` will be used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.precision(6)                         // '9876.54'\nx.precision(6, BigNumber.ROUND_UP)     // '9876.55'\nx.precision(2)                         // '9900'\nx.precision(2, 1)                      // '9800'\nx                                      // '9876.54321'\n```\n@param includeZeros Whether to include integer trailing zeros in the significant digit count.\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"precision",required:!0,type:{name:"{ (includeZeros?: boolean | undefined): number; (significantDigits: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},sd:{defaultValue:null,description:"Returns the number of significant digits of the value of this BigNumber,\nor `null` if the value of this BigNumber is ±`Infinity` or `NaN`.\n\nIf `includeZeros` is true then any trailing zeros of the integer part of\nthe value of this BigNumber are counted as significant digits, otherwise\nthey are not.\n\nThrows if `includeZeros` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.sd()                         // 9\ny = new BigNumber(987000)\ny.sd(false)                    // 3\ny.sd(true)                     // 6\n```\nReturns a BigNumber whose value is the value of this BigNumber rounded to a precision of\n`significantDigits` significant digits using rounding mode `roundingMode`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` will be used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.sd(6)                           // '9876.54'\nx.sd(6, BigNumber.ROUND_UP)       // '9876.55'\nx.sd(2)                           // '9900'\nx.sd(2, 1)                        // '9800'\nx                                 // '9876.54321'\n```\n@param includeZeros Whether to include integer trailing zeros in the significant digit count.\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"sd",required:!0,type:{name:"{ (includeZeros?: boolean | undefined): number; (significantDigits: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},shiftedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber shifted by `n` places.\n\nThe shift is of the decimal point, i.e. of powers of ten, and is to the left if `n` is negative\nor to the right if `n` is positive.\n\nThe return value is always exact and unrounded.\n\nThrows if `n` is invalid.\n\n```ts\nx = new BigNumber(1.23)\nx.shiftedBy(3)                      // '1230'\nx.shiftedBy(-3)                     // '0.00123'\n```\n@param n The shift value, integer, -9007199254740991 to 9007199254740991.",name:"shiftedBy",required:!0,type:{name:"(n: number) => BigNumber"}},squareRoot:{defaultValue:null,description:"Returns a BigNumber whose value is the square root of the value of this BigNumber, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\nThe return value will be correctly rounded, i.e. rounded as if the result was first calculated\nto an infinite number of correct digits before rounding.\n\n```ts\nx = new BigNumber(16)\nx.squareRoot()                  // '4'\ny = new BigNumber(3)\ny.squareRoot()                  // '1.73205080756887729353'\n```",name:"squareRoot",required:!0,type:{name:"() => BigNumber"}},sqrt:{defaultValue:null,description:"Returns a BigNumber whose value is the square root of the value of this BigNumber, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\nThe return value will be correctly rounded, i.e. rounded as if the result was first calculated\nto an infinite number of correct digits before rounding.\n\n```ts\nx = new BigNumber(16)\nx.sqrt()                  // '4'\ny = new BigNumber(3)\ny.sqrt()                  // '1.73205080756887729353'\n```",name:"sqrt",required:!0,type:{name:"() => BigNumber"}},toExponential:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in exponential notation rounded using\nrounding mode `roundingMode` to `decimalPlaces` decimal places, i.e with one digit before the\ndecimal point and `decimalPlaces` digits after it.\n\nIf the value of this BigNumber in exponential notation has fewer than `decimalPlaces` fraction\ndigits, the return value will be appended with zeros accordingly.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the number of digits after the\ndecimal point defaults to the minimum number of digits necessary to represent the value\nexactly.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = 45.6\ny = new BigNumber(x)\nx.toExponential()               // '4.56e+1'\ny.toExponential()               // '4.56e+1'\nx.toExponential(0)              // '5e+1'\ny.toExponential(0)              // '5e+1'\nx.toExponential(1)              // '4.6e+1'\ny.toExponential(1)              // '4.6e+1'\ny.toExponential(1, 1)           // '4.5e+1'  (ROUND_DOWN)\nx.toExponential(3)              // '4.560e+1'\ny.toExponential(3)              // '4.560e+1'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"toExponential",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}},toFixed:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in normal (fixed-point) notation\nrounded to `decimalPlaces` decimal places using rounding mode `roundingMode`.\n\nIf the value of this BigNumber in normal notation has fewer than `decimalPlaces` fraction\ndigits, the return value will be appended with zeros accordingly.\n\nUnlike `Number.prototype.toFixed`, which returns exponential notation if a number is greater or\nequal to 10**21, this method will always return normal notation.\n\nIf `decimalPlaces` is omitted or is `null` or `undefined`, the return value will be unrounded\nand in normal notation. This is also unlike `Number.prototype.toFixed`, which returns the value\nto zero decimal places. It is useful when normal notation is required and the current\n`EXPONENTIAL_AT` setting causes `toString` to return exponential notation.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = 3.456\ny = new BigNumber(x)\nx.toFixed()                     // '3'\ny.toFixed()                     // '3.456'\ny.toFixed(0)                    // '3'\nx.toFixed(2)                    // '3.46'\ny.toFixed(2)                    // '3.46'\ny.toFixed(2, 1)                 // '3.45'  (ROUND_DOWN)\nx.toFixed(5)                    // '3.45600'\ny.toFixed(5)                    // '3.45600'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"toFixed",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}},toFormat:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in normal (fixed-point) notation\nrounded to `decimalPlaces` decimal places using rounding mode `roundingMode`, and formatted\naccording to the properties of the `format` or `FORMAT` object.\n\nThe formatting object may contain some or all of the properties shown in the examples below.\n\nIf `decimalPlaces` is omitted or is `null` or `undefined`, then the return value is not\nrounded to a fixed number of decimal places.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nIf `format` is omitted or is `null` or `undefined`, `FORMAT` is used.\n\nThrows if `decimalPlaces`, `roundingMode`, or `format` is invalid.\n\n```ts\nfmt = {\n  decimalSeparator: '.',\n  groupSeparator: ',',\n  groupSize: 3,\n  secondaryGroupSize: 0,\n  fractionGroupSeparator: ' ',\n  fractionGroupSize: 0\n}\n\nx = new BigNumber('123456789.123456789')\n\n// Set the global formatting options\nBigNumber.config({ FORMAT: fmt })\n\nx.toFormat()                              // '123,456,789.123456789'\nx.toFormat(3)                             // '123,456,789.123'\n\n// If a reference to the object assigned to FORMAT has been retained,\n// the format properties can be changed directly\nfmt.groupSeparator = ' '\nfmt.fractionGroupSize = 5\nx.toFormat()                              // '123 456 789.12345 6789'\n\n// Alternatively, pass the formatting options as an argument\nfmt = {\n  decimalSeparator: ',',\n  groupSeparator: '.',\n  groupSize: 3,\n  secondaryGroupSize: 2\n}\n\nx.toFormat()                              // '123 456 789.12345 6789'\nx.toFormat(fmt)                           // '12.34.56.789,123456789'\nx.toFormat(2, fmt)                        // '12.34.56.789,12'\nx.toFormat(3, BigNumber.ROUND_UP, fmt)    // '12.34.56.789,124'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.\n@param format Formatting options object. See `BigNumber.Format`.",name:"toFormat",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode: RoundingMode, format?: Format | undefined): string; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (decimalPlaces?: number | undefined): string; (decimalPlaces: number, format: Format): string; (format: Format): string; }"}},toFraction:{defaultValue:null,description:"Returns an array of two BigNumbers representing the value of this BigNumber as a simple\nfraction with an integer numerator and an integer denominator.\nThe denominator will be a positive non-zero value less than or equal to `max_denominator`.\nIf a maximum denominator, `max_denominator`, is not specified, or is `null` or `undefined`, the\ndenominator will be the lowest value necessary to represent the number exactly.\n\nThrows if `max_denominator` is invalid.\n\n```ts\nx = new BigNumber(1.75)\nx.toFraction()                  // '7, 4'\n\npi = new BigNumber('3.14159265358')\npi.toFraction()                 // '157079632679,50000000000'\npi.toFraction(100000)           // '312689, 99532'\npi.toFraction(10000)            // '355, 113'\npi.toFraction(100)              // '311, 99'\npi.toFraction(10)               // '22, 7'\npi.toFraction(1)                // '3, 1'\n```\n@param max_denominator The maximum denominator, integer > 0, or Infinity.",name:"toFraction",required:!0,type:{name:"(max_denominator?: Value | undefined) => [BigNumber, BigNumber]"}},toJSON:{defaultValue:null,description:"As `valueOf`.",name:"toJSON",required:!0,type:{name:"() => string"}},toNumber:{defaultValue:null,description:"Returns the value of this BigNumber as a JavaScript primitive number.\n\nUsing the unary plus operator gives the same result.\n\n```ts\nx = new BigNumber(456.789)\nx.toNumber()                    // 456.789\n+x                              // 456.789\n\ny = new BigNumber('45987349857634085409857349856430985')\ny.toNumber()                    // 4.598734985763409e+34\n\nz = new BigNumber(-0)\n1 / z.toNumber()                // -Infinity\n1 / +z                          // -Infinity\n```",name:"toNumber",required:!0,type:{name:"() => number"}},toPrecision:{defaultValue:null,description:"Returns a string representing the value of this BigNumber rounded to `significantDigits`\nsignificant digits using rounding mode `roundingMode`.\n\nIf `significantDigits` is less than the number of digits necessary to represent the integer\npart of the value in normal (fixed-point) notation, then exponential notation is used.\n\nIf `significantDigits` is omitted, or is `null` or `undefined`, then the return value is the\nsame as `n.toString()`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = 45.6\ny = new BigNumber(x)\nx.toPrecision()                 // '45.6'\ny.toPrecision()                 // '45.6'\nx.toPrecision(1)                // '5e+1'\ny.toPrecision(1)                // '5e+1'\ny.toPrecision(2, 0)             // '4.6e+1'  (ROUND_UP)\ny.toPrecision(2, 1)             // '4.5e+1'  (ROUND_DOWN)\nx.toPrecision(5)                // '45.600'\ny.toPrecision(5)                // '45.600'\n```\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer 0 to 8.",name:"toPrecision",required:!0,type:{name:"{ (significantDigits: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/hooks/math/useFromPrecision.tsx#useFromPrecision12"]={docgenInfo:useFromPrecision12.__docgenInfo,name:"useFromPrecision12",path:"src/hooks/math/useFromPrecision.tsx#useFromPrecision12"})}catch(__react_docgen_typescript_loader_error){}try{useFromPrecision18.displayName="useFromPrecision18",useFromPrecision18.__docgenInfo={description:"",displayName:"useFromPrecision18",props:{c:{defaultValue:null,description:"The coefficient of the value of this BigNumber, an array of base 1e14 integer numbers, or null.",name:"c",required:!0,type:{name:"number[] | null"}},e:{defaultValue:null,description:"The exponent of the value of this BigNumber, an integer number, -1000000000 to 1000000000, or null.",name:"e",required:!0,type:{name:"number | null"}},s:{defaultValue:null,description:"The sign of the value of this BigNumber, -1, 1, or null.",name:"s",required:!0,type:{name:"number | null"}},absoluteValue:{defaultValue:null,description:"Returns a BigNumber whose value is the absolute value, i.e. the magnitude, of the value of this\nBigNumber.\n\nThe return value is always exact and unrounded.\n\n```ts\nx = new BigNumber(-0.8)\nx.absoluteValue()           // '0.8'\n```",name:"absoluteValue",required:!0,type:{name:"() => BigNumber"}},abs:{defaultValue:null,description:"Returns a BigNumber whose value is the absolute value, i.e. the magnitude, of the value of this\nBigNumber.\n\nThe return value is always exact and unrounded.\n\n```ts\nx = new BigNumber(-0.8)\nx.abs()                     // '0.8'\n```",name:"abs",required:!0,type:{name:"() => BigNumber"}},comparedTo:{defaultValue:null,description:"Returns |                                                               |\n:-------:|:--------------------------------------------------------------|\n   1    | If the value of this BigNumber is greater than the value of `n`\n  -1    | If the value of this BigNumber is less than the value of `n`\n   0    | If this BigNumber and `n` have the same value\n`null`  | If the value of either this BigNumber or `n` is `NaN`\n\n```ts\n\nx = new BigNumber(Infinity)\ny = new BigNumber(5)\nx.comparedTo(y)                 // 1\nx.comparedTo(x.minus(1))        // 0\ny.comparedTo(NaN)               // null\ny.comparedTo('110', 2)          // -1\n```\n@param n A numeric value.\n@param base The base of n.",name:"comparedTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => number"}},decimalPlaces:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded by rounding mode\n`roundingMode` to a maximum of `decimalPlaces` decimal places.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the return value is the number of\ndecimal places of the value of this BigNumber, or `null` if the value of this BigNumber is\n±`Infinity` or `NaN`.\n\nIf `roundingMode` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(1234.56)\nx.decimalPlaces()                      // 2\nx.decimalPlaces(1)                     // '1234.6'\nx.decimalPlaces(2)                     // '1234.56'\nx.decimalPlaces(10)                    // '1234.56'\nx.decimalPlaces(0, 1)                  // '1234'\nx.decimalPlaces(0, 6)                  // '1235'\nx.decimalPlaces(1, 1)                  // '1234.5'\nx.decimalPlaces(1, BigNumber.ROUND_HALF_EVEN)     // '1234.6'\nx                                      // '1234.56'\ny = new BigNumber('9.9e-101')\ny.decimalPlaces()                      // 102\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"decimalPlaces",required:!0,type:{name:"{ (): number; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},dp:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded by rounding mode\n`roundingMode` to a maximum of `decimalPlaces` decimal places.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the return value is the number of\ndecimal places of the value of this BigNumber, or `null` if the value of this BigNumber is\n±`Infinity` or `NaN`.\n\nIf `roundingMode` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(1234.56)\nx.dp()                                 // 2\nx.dp(1)                                // '1234.6'\nx.dp(2)                                // '1234.56'\nx.dp(10)                               // '1234.56'\nx.dp(0, 1)                             // '1234'\nx.dp(0, 6)                             // '1235'\nx.dp(1, 1)                             // '1234.5'\nx.dp(1, BigNumber.ROUND_HALF_EVEN)     // '1234.6'\nx                                      // '1234.56'\ny = new BigNumber('9.9e-101')\ny.dp()                                 // 102\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"dp",required:!0,type:{name:"{ (): number; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},dividedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber divided by `n`, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\n```ts\nx = new BigNumber(355)\ny = new BigNumber(113)\nx.dividedBy(y)                  // '3.14159292035398230088'\nx.dividedBy(5)                  // '71'\nx.dividedBy(47, 16)             // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"dividedBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},div:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber divided by `n`, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\n```ts\nx = new BigNumber(355)\ny = new BigNumber(113)\nx.div(y)                    // '3.14159292035398230088'\nx.div(5)                    // '71'\nx.div(47, 16)               // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"div",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},dividedToIntegerBy:{defaultValue:null,description:"Returns a BigNumber whose value is the integer part of dividing the value of this BigNumber by\n`n`.\n\n```ts\nx = new BigNumber(5)\ny = new BigNumber(3)\nx.dividedToIntegerBy(y)              // '1'\nx.dividedToIntegerBy(0.7)            // '7'\nx.dividedToIntegerBy('0.f', 16)      // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"dividedToIntegerBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},idiv:{defaultValue:null,description:"Returns a BigNumber whose value is the integer part of dividing the value of this BigNumber by\n`n`.\n\n```ts\nx = new BigNumber(5)\ny = new BigNumber(3)\nx.idiv(y)                       // '1'\nx.idiv(0.7)                     // '7'\nx.idiv('0.f', 16)               // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"idiv",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},exponentiatedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber exponentiated by `n`, i.e.\nraised to the power `n`, and optionally modulo a modulus `m`.\n\nIf `n` is negative the result is rounded according to the current `DECIMAL_PLACES` and\n`ROUNDING_MODE` settings.\n\nAs the number of digits of the result of the power operation can grow so large so quickly,\ne.g. 123.456**10000 has over 50000 digits, the number of significant digits calculated is\nlimited to the value of the `POW_PRECISION` setting (unless a modulus `m` is specified).\n\nBy default `POW_PRECISION` is set to 0. This means that an unlimited number of significant\ndigits will be calculated, and that the method's performance will decrease dramatically for\nlarger exponents.\n\nIf `m` is specified and the value of `m`, `n` and this BigNumber are integers and `n` is\npositive, then a fast modular exponentiation algorithm is used, otherwise the operation will\nbe performed as `x.exponentiatedBy(n).modulo(m)` with a `POW_PRECISION` of 0.\n\nThrows if `n` is not an integer.\n\n```ts\nMath.pow(0.7, 2)                    // 0.48999999999999994\nx = new BigNumber(0.7)\nx.exponentiatedBy(2)                // '0.49'\nBigNumber(3).exponentiatedBy(-2)    // '0.11111111111111111111'\n```\n@param n The exponent, an integer.\n@param m The modulus.",name:"exponentiatedBy",required:!0,type:{name:"{ (n: Value, m?: Value | undefined): BigNumber; (n: number, m?: Value | undefined): BigNumber; }"}},pow:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber exponentiated by `n`, i.e.\nraised to the power `n`, and optionally modulo a modulus `m`.\n\nIf `n` is negative the result is rounded according to the current `DECIMAL_PLACES` and\n`ROUNDING_MODE` settings.\n\nAs the number of digits of the result of the power operation can grow so large so quickly,\ne.g. 123.456**10000 has over 50000 digits, the number of significant digits calculated is\nlimited to the value of the `POW_PRECISION` setting (unless a modulus `m` is specified).\n\nBy default `POW_PRECISION` is set to 0. This means that an unlimited number of significant\ndigits will be calculated, and that the method's performance will decrease dramatically for\nlarger exponents.\n\nIf `m` is specified and the value of `m`, `n` and this BigNumber are integers and `n` is\npositive, then a fast modular exponentiation algorithm is used, otherwise the operation will\nbe performed as `x.pow(n).modulo(m)` with a `POW_PRECISION` of 0.\n\nThrows if `n` is not an integer.\n\n```ts\nMath.pow(0.7, 2)                   // 0.48999999999999994\nx = new BigNumber(0.7)\nx.pow(2)                           // '0.49'\nBigNumber(3).pow(-2)               // '0.11111111111111111111'\n```\n@param n The exponent, an integer.\n@param m The modulus.",name:"pow",required:!0,type:{name:"{ (n: Value, m?: Value | undefined): BigNumber; (n: number, m?: Value | undefined): BigNumber; }"}},integerValue:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded to an integer using\nrounding mode `rm`.\n\nIf `rm` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `rm` is invalid.\n\n```ts\nx = new BigNumber(123.456)\nx.integerValue()                        // '123'\nx.integerValue(BigNumber.ROUND_CEIL)    // '124'\ny = new BigNumber(-12.7)\ny.integerValue()                        // '-13'\nx.integerValue(BigNumber.ROUND_DOWN)    // '-12'\n```\n@param rm The roundng mode, an integer, 0 to 8.",name:"integerValue",required:!0,type:{name:"(rm?: RoundingMode | undefined) => BigNumber"}},isEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is equal to the value of `n`, otherwise returns\n`false`.\n\nAs with JavaScript, `NaN` does not equal `NaN`.\n\n```ts\n0 === 1e-324                           // true\nx = new BigNumber(0)\nx.isEqualTo('1e-324')                  // false\nBigNumber(-0).isEqualTo(x)             // true  ( -0 === 0 )\nBigNumber(255).isEqualTo('ff', 16)     // true\n\ny = new BigNumber(NaN)\ny.isEqualTo(NaN)                // false\n```\n@param n A numeric value.\n@param base The base of n.",name:"isEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},eq:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is equal to the value of `n`, otherwise returns\n`false`.\n\nAs with JavaScript, `NaN` does not equal `NaN`.\n\n```ts\n0 === 1e-324                    // true\nx = new BigNumber(0)\nx.eq('1e-324')                  // false\nBigNumber(-0).eq(x)             // true  ( -0 === 0 )\nBigNumber(255).eq('ff', 16)     // true\n\ny = new BigNumber(NaN)\ny.eq(NaN)                       // false\n```\n@param n A numeric value.\n@param base The base of n.",name:"eq",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isFinite:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is a finite number, otherwise returns `false`.\n\nThe only possible non-finite values of a BigNumber are `NaN`, `Infinity` and `-Infinity`.\n\n```ts\nx = new BigNumber(1)\nx.isFinite()                    // true\ny = new BigNumber(Infinity)\ny.isFinite()                    // false\n```",name:"isFinite",required:!0,type:{name:"() => boolean"}},isGreaterThan:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than the value of `n`, otherwise\nreturns `false`.\n\n```ts\n0.1 > (0.3 - 0.2)                             // true\nx = new BigNumber(0.1)\nx.isGreaterThan(BigNumber(0.3).minus(0.2))    // false\nBigNumber(0).isGreaterThan(x)                 // false\nBigNumber(11, 3).isGreaterThan(11.1, 2)       // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isGreaterThan",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},gt:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than the value of `n`, otherwise\nreturns `false`.\n\n```ts\n0.1 > (0.3 - 0                     // true\nx = new BigNumber(0.1)\nx.gt(BigNumber(0.3).minus(0.2))    // false\nBigNumber(0).gt(x)                 // false\nBigNumber(11, 3).gt(11.1, 2)       // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"gt",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isGreaterThanOrEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n(0.3 - 0.2) >= 0.1                                  // false\nx = new BigNumber(0.3).minus(0.2)\nx.isGreaterThanOrEqualTo(0.1)                       // true\nBigNumber(1).isGreaterThanOrEqualTo(x)              // true\nBigNumber(10, 18).isGreaterThanOrEqualTo('i', 36)   // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isGreaterThanOrEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},gte:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n(0.3 - 0.2) >= 0.1                    // false\nx = new BigNumber(0.3).minus(0.2)\nx.gte(0.1)                            // true\nBigNumber(1).gte(x)                   // true\nBigNumber(10, 18).gte('i', 36)        // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"gte",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isInteger:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is an integer, otherwise returns `false`.\n\n```ts\nx = new BigNumber(1)\nx.isInteger()                   // true\ny = new BigNumber(123.456)\ny.isInteger()                   // false\n```",name:"isInteger",required:!0,type:{name:"() => boolean"}},isLessThan:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than the value of `n`, otherwise returns\n`false`.\n\n```ts\n(0.3 - 0.2) < 0.1                       // true\nx = new BigNumber(0.3).minus(0.2)\nx.isLessThan(0.1)                       // false\nBigNumber(0).isLessThan(x)              // true\nBigNumber(11.1, 2).isLessThan(11, 3)    // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isLessThan",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},lt:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than the value of `n`, otherwise returns\n`false`.\n\n```ts\n(0.3 - 0.2) < 0.1                       // true\nx = new BigNumber(0.3).minus(0.2)\nx.lt(0.1)                               // false\nBigNumber(0).lt(x)                      // true\nBigNumber(11.1, 2).lt(11, 3)            // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"lt",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isLessThanOrEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n0.1 <= (0.3 - 0.2)                                 // false\nx = new BigNumber(0.1)\nx.isLessThanOrEqualTo(BigNumber(0.3).minus(0.2))   // true\nBigNumber(-1).isLessThanOrEqualTo(x)               // true\nBigNumber(10, 18).isLessThanOrEqualTo('i', 36)     // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isLessThanOrEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},lte:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n0.1 <= (0.3 - 0.2)                  // false\nx = new BigNumber(0.1)\nx.lte(BigNumber(0.3).minus(0.2))    // true\nBigNumber(-1).lte(x)                // true\nBigNumber(10, 18).lte('i', 36)      // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"lte",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isNaN:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is `NaN`, otherwise returns `false`.\n\n```ts\nx = new BigNumber(NaN)\nx.isNaN()                       // true\ny = new BigNumber('Infinity')\ny.isNaN()                       // false\n```",name:"isNaN",required:!0,type:{name:"() => boolean"}},isNegative:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is negative, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isNegative()                  // true\ny = new BigNumber(2)\ny.isNegative()                  // false\n```",name:"isNegative",required:!0,type:{name:"() => boolean"}},isPositive:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is positive, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isPositive()                  // false\ny = new BigNumber(2)\ny.isPositive()                  // true\n```",name:"isPositive",required:!0,type:{name:"() => boolean"}},isZero:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is zero or minus zero, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isZero()                 // true\n```",name:"isZero",required:!0,type:{name:"() => boolean"}},minus:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber minus `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.3 - 0.1                       // 0.19999999999999998\nx = new BigNumber(0.3)\nx.minus(0.1)                    // '0.2'\nx.minus(0.6, 20)                // '0'\n```\n@param n A numeric value.\n@param base The base of n.",name:"minus",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},modulo:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber modulo `n`, i.e. the integer\nremainder of dividing this BigNumber by `n`.\n\nThe value returned, and in particular its sign, is dependent on the value of the `MODULO_MODE`\nsetting of this BigNumber constructor. If it is 1 (default value), the result will have the\nsame sign as this BigNumber, and it will match that of Javascript's `%` operator (within the\nlimits of double precision) and BigDecimal's `remainder` method.\n\nThe return value is always exact and unrounded.\n\nSee `MODULO_MODE` for a description of the other modulo modes.\n\n```ts\n1 % 0.9                         // 0.09999999999999998\nx = new BigNumber(1)\nx.modulo(0.9)                   // '0.1'\ny = new BigNumber(33)\ny.modulo('a', 33)               // '3'\n```\n@param n A numeric value.\n@param base The base of n.",name:"modulo",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},mod:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber modulo `n`, i.e. the integer\nremainder of dividing this BigNumber by `n`.\n\nThe value returned, and in particular its sign, is dependent on the value of the `MODULO_MODE`\nsetting of this BigNumber constructor. If it is 1 (default value), the result will have the\nsame sign as this BigNumber, and it will match that of Javascript's `%` operator (within the\nlimits of double precision) and BigDecimal's `remainder` method.\n\nThe return value is always exact and unrounded.\n\nSee `MODULO_MODE` for a description of the other modulo modes.\n\n```ts\n1 % 0.9                      // 0.09999999999999998\nx = new BigNumber(1)\nx.mod(0.9)                   // '0.1'\ny = new BigNumber(33)\ny.mod('a', 33)               // '3'\n```\n@param n A numeric value.\n@param base The base of n.",name:"mod",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},multipliedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber multiplied by `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.6 * 3                                // 1.7999999999999998\nx = new BigNumber(0.6)\ny = x.multipliedBy(3)                  // '1.8'\nBigNumber('7e+500').multipliedBy(y)    // '1.26e+501'\nx.multipliedBy('-a', 16)               // '-6'\n```\n@param n A numeric value.\n@param base The base of n.",name:"multipliedBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},times:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber multiplied by `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.6 * 3                         // 1.7999999999999998\nx = new BigNumber(0.6)\ny = x.times(3)                  // '1.8'\nBigNumber('7e+500').times(y)    // '1.26e+501'\nx.times('-a', 16)               // '-6'\n```\n@param n A numeric value.\n@param base The base of n.",name:"times",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},negated:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber negated, i.e. multiplied by -1.\n\n```ts\nx = new BigNumber(1.8)\nx.negated()                     // '-1.8'\ny = new BigNumber(-1.3)\ny.negated()                     // '1.3'\n```",name:"negated",required:!0,type:{name:"() => BigNumber"}},plus:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber plus `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.1 + 0.2                       // 0.30000000000000004\nx = new BigNumber(0.1)\ny = x.plus(0.2)                 // '0.3'\nBigNumber(0.7).plus(x).plus(y)  // '1.1'\nx.plus('0.1', 8)                // '0.225'\n```\n@param n A numeric value.\n@param base The base of n.",name:"plus",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},precision:{defaultValue:null,description:"Returns the number of significant digits of the value of this BigNumber, or `null` if the value\nof this BigNumber is ±`Infinity` or `NaN`.\n\nIf `includeZeros` is true then any trailing zeros of the integer part of the value of this\nBigNumber are counted as significant digits, otherwise they are not.\n\nThrows if `includeZeros` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.precision()                         // 9\ny = new BigNumber(987000)\ny.precision(false)                    // 3\ny.precision(true)                     // 6\n```\nReturns a BigNumber whose value is the value of this BigNumber rounded to a precision of\n`significantDigits` significant digits using rounding mode `roundingMode`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` will be used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.precision(6)                         // '9876.54'\nx.precision(6, BigNumber.ROUND_UP)     // '9876.55'\nx.precision(2)                         // '9900'\nx.precision(2, 1)                      // '9800'\nx                                      // '9876.54321'\n```\n@param includeZeros Whether to include integer trailing zeros in the significant digit count.\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"precision",required:!0,type:{name:"{ (includeZeros?: boolean | undefined): number; (significantDigits: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},sd:{defaultValue:null,description:"Returns the number of significant digits of the value of this BigNumber,\nor `null` if the value of this BigNumber is ±`Infinity` or `NaN`.\n\nIf `includeZeros` is true then any trailing zeros of the integer part of\nthe value of this BigNumber are counted as significant digits, otherwise\nthey are not.\n\nThrows if `includeZeros` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.sd()                         // 9\ny = new BigNumber(987000)\ny.sd(false)                    // 3\ny.sd(true)                     // 6\n```\nReturns a BigNumber whose value is the value of this BigNumber rounded to a precision of\n`significantDigits` significant digits using rounding mode `roundingMode`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` will be used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.sd(6)                           // '9876.54'\nx.sd(6, BigNumber.ROUND_UP)       // '9876.55'\nx.sd(2)                           // '9900'\nx.sd(2, 1)                        // '9800'\nx                                 // '9876.54321'\n```\n@param includeZeros Whether to include integer trailing zeros in the significant digit count.\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"sd",required:!0,type:{name:"{ (includeZeros?: boolean | undefined): number; (significantDigits: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},shiftedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber shifted by `n` places.\n\nThe shift is of the decimal point, i.e. of powers of ten, and is to the left if `n` is negative\nor to the right if `n` is positive.\n\nThe return value is always exact and unrounded.\n\nThrows if `n` is invalid.\n\n```ts\nx = new BigNumber(1.23)\nx.shiftedBy(3)                      // '1230'\nx.shiftedBy(-3)                     // '0.00123'\n```\n@param n The shift value, integer, -9007199254740991 to 9007199254740991.",name:"shiftedBy",required:!0,type:{name:"(n: number) => BigNumber"}},squareRoot:{defaultValue:null,description:"Returns a BigNumber whose value is the square root of the value of this BigNumber, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\nThe return value will be correctly rounded, i.e. rounded as if the result was first calculated\nto an infinite number of correct digits before rounding.\n\n```ts\nx = new BigNumber(16)\nx.squareRoot()                  // '4'\ny = new BigNumber(3)\ny.squareRoot()                  // '1.73205080756887729353'\n```",name:"squareRoot",required:!0,type:{name:"() => BigNumber"}},sqrt:{defaultValue:null,description:"Returns a BigNumber whose value is the square root of the value of this BigNumber, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\nThe return value will be correctly rounded, i.e. rounded as if the result was first calculated\nto an infinite number of correct digits before rounding.\n\n```ts\nx = new BigNumber(16)\nx.sqrt()                  // '4'\ny = new BigNumber(3)\ny.sqrt()                  // '1.73205080756887729353'\n```",name:"sqrt",required:!0,type:{name:"() => BigNumber"}},toExponential:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in exponential notation rounded using\nrounding mode `roundingMode` to `decimalPlaces` decimal places, i.e with one digit before the\ndecimal point and `decimalPlaces` digits after it.\n\nIf the value of this BigNumber in exponential notation has fewer than `decimalPlaces` fraction\ndigits, the return value will be appended with zeros accordingly.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the number of digits after the\ndecimal point defaults to the minimum number of digits necessary to represent the value\nexactly.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = 45.6\ny = new BigNumber(x)\nx.toExponential()               // '4.56e+1'\ny.toExponential()               // '4.56e+1'\nx.toExponential(0)              // '5e+1'\ny.toExponential(0)              // '5e+1'\nx.toExponential(1)              // '4.6e+1'\ny.toExponential(1)              // '4.6e+1'\ny.toExponential(1, 1)           // '4.5e+1'  (ROUND_DOWN)\nx.toExponential(3)              // '4.560e+1'\ny.toExponential(3)              // '4.560e+1'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"toExponential",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}},toFixed:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in normal (fixed-point) notation\nrounded to `decimalPlaces` decimal places using rounding mode `roundingMode`.\n\nIf the value of this BigNumber in normal notation has fewer than `decimalPlaces` fraction\ndigits, the return value will be appended with zeros accordingly.\n\nUnlike `Number.prototype.toFixed`, which returns exponential notation if a number is greater or\nequal to 10**21, this method will always return normal notation.\n\nIf `decimalPlaces` is omitted or is `null` or `undefined`, the return value will be unrounded\nand in normal notation. This is also unlike `Number.prototype.toFixed`, which returns the value\nto zero decimal places. It is useful when normal notation is required and the current\n`EXPONENTIAL_AT` setting causes `toString` to return exponential notation.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = 3.456\ny = new BigNumber(x)\nx.toFixed()                     // '3'\ny.toFixed()                     // '3.456'\ny.toFixed(0)                    // '3'\nx.toFixed(2)                    // '3.46'\ny.toFixed(2)                    // '3.46'\ny.toFixed(2, 1)                 // '3.45'  (ROUND_DOWN)\nx.toFixed(5)                    // '3.45600'\ny.toFixed(5)                    // '3.45600'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"toFixed",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}},toFormat:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in normal (fixed-point) notation\nrounded to `decimalPlaces` decimal places using rounding mode `roundingMode`, and formatted\naccording to the properties of the `format` or `FORMAT` object.\n\nThe formatting object may contain some or all of the properties shown in the examples below.\n\nIf `decimalPlaces` is omitted or is `null` or `undefined`, then the return value is not\nrounded to a fixed number of decimal places.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nIf `format` is omitted or is `null` or `undefined`, `FORMAT` is used.\n\nThrows if `decimalPlaces`, `roundingMode`, or `format` is invalid.\n\n```ts\nfmt = {\n  decimalSeparator: '.',\n  groupSeparator: ',',\n  groupSize: 3,\n  secondaryGroupSize: 0,\n  fractionGroupSeparator: ' ',\n  fractionGroupSize: 0\n}\n\nx = new BigNumber('123456789.123456789')\n\n// Set the global formatting options\nBigNumber.config({ FORMAT: fmt })\n\nx.toFormat()                              // '123,456,789.123456789'\nx.toFormat(3)                             // '123,456,789.123'\n\n// If a reference to the object assigned to FORMAT has been retained,\n// the format properties can be changed directly\nfmt.groupSeparator = ' '\nfmt.fractionGroupSize = 5\nx.toFormat()                              // '123 456 789.12345 6789'\n\n// Alternatively, pass the formatting options as an argument\nfmt = {\n  decimalSeparator: ',',\n  groupSeparator: '.',\n  groupSize: 3,\n  secondaryGroupSize: 2\n}\n\nx.toFormat()                              // '123 456 789.12345 6789'\nx.toFormat(fmt)                           // '12.34.56.789,123456789'\nx.toFormat(2, fmt)                        // '12.34.56.789,12'\nx.toFormat(3, BigNumber.ROUND_UP, fmt)    // '12.34.56.789,124'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.\n@param format Formatting options object. See `BigNumber.Format`.",name:"toFormat",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode: RoundingMode, format?: Format | undefined): string; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (decimalPlaces?: number | undefined): string; (decimalPlaces: number, format: Format): string; (format: Format): string; }"}},toFraction:{defaultValue:null,description:"Returns an array of two BigNumbers representing the value of this BigNumber as a simple\nfraction with an integer numerator and an integer denominator.\nThe denominator will be a positive non-zero value less than or equal to `max_denominator`.\nIf a maximum denominator, `max_denominator`, is not specified, or is `null` or `undefined`, the\ndenominator will be the lowest value necessary to represent the number exactly.\n\nThrows if `max_denominator` is invalid.\n\n```ts\nx = new BigNumber(1.75)\nx.toFraction()                  // '7, 4'\n\npi = new BigNumber('3.14159265358')\npi.toFraction()                 // '157079632679,50000000000'\npi.toFraction(100000)           // '312689, 99532'\npi.toFraction(10000)            // '355, 113'\npi.toFraction(100)              // '311, 99'\npi.toFraction(10)               // '22, 7'\npi.toFraction(1)                // '3, 1'\n```\n@param max_denominator The maximum denominator, integer > 0, or Infinity.",name:"toFraction",required:!0,type:{name:"(max_denominator?: Value | undefined) => [BigNumber, BigNumber]"}},toJSON:{defaultValue:null,description:"As `valueOf`.",name:"toJSON",required:!0,type:{name:"() => string"}},toNumber:{defaultValue:null,description:"Returns the value of this BigNumber as a JavaScript primitive number.\n\nUsing the unary plus operator gives the same result.\n\n```ts\nx = new BigNumber(456.789)\nx.toNumber()                    // 456.789\n+x                              // 456.789\n\ny = new BigNumber('45987349857634085409857349856430985')\ny.toNumber()                    // 4.598734985763409e+34\n\nz = new BigNumber(-0)\n1 / z.toNumber()                // -Infinity\n1 / +z                          // -Infinity\n```",name:"toNumber",required:!0,type:{name:"() => number"}},toPrecision:{defaultValue:null,description:"Returns a string representing the value of this BigNumber rounded to `significantDigits`\nsignificant digits using rounding mode `roundingMode`.\n\nIf `significantDigits` is less than the number of digits necessary to represent the integer\npart of the value in normal (fixed-point) notation, then exponential notation is used.\n\nIf `significantDigits` is omitted, or is `null` or `undefined`, then the return value is the\nsame as `n.toString()`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = 45.6\ny = new BigNumber(x)\nx.toPrecision()                 // '45.6'\ny.toPrecision()                 // '45.6'\nx.toPrecision(1)                // '5e+1'\ny.toPrecision(1)                // '5e+1'\ny.toPrecision(2, 0)             // '4.6e+1'  (ROUND_UP)\ny.toPrecision(2, 1)             // '4.5e+1'  (ROUND_DOWN)\nx.toPrecision(5)                // '45.600'\ny.toPrecision(5)                // '45.600'\n```\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer 0 to 8.",name:"toPrecision",required:!0,type:{name:"{ (significantDigits: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/hooks/math/useFromPrecision.tsx#useFromPrecision18"]={docgenInfo:useFromPrecision18.__docgenInfo,name:"useFromPrecision18",path:"src/hooks/math/useFromPrecision.tsx#useFromPrecision18"})}catch(__react_docgen_typescript_loader_error){}},"./src/hooks/math/useToPrecision.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return toPrecision12}));var bignumber_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/bignumber.js/bignumber.js"),bignumber_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(bignumber_js__WEBPACK_IMPORTED_MODULE_0__),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js");const precision12=new bignumber_js__WEBPACK_IMPORTED_MODULE_0___default.a(10).pow(12),precision18=new bignumber_js__WEBPACK_IMPORTED_MODULE_0___default.a(10).pow(18),toPrecision12=amount=>amount&&new bignumber_js__WEBPACK_IMPORTED_MODULE_0___default.a(amount).multipliedBy(precision12).toFixed(0),useToPrecision12=amount=>Object(react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>toPrecision12(amount)),[amount]),useToPrecision18=amount=>Object(react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>amount&&new bignumber_js__WEBPACK_IMPORTED_MODULE_0___default.a(amount).multipliedBy(precision18).toFixed(0)),[amount]);try{toPrecision12.displayName="toPrecision12",toPrecision12.__docgenInfo={description:"",displayName:"toPrecision12",props:{c:{defaultValue:null,description:"The coefficient of the value of this BigNumber, an array of base 1e14 integer numbers, or null.",name:"c",required:!0,type:{name:"number[] | null"}},e:{defaultValue:null,description:"The exponent of the value of this BigNumber, an integer number, -1000000000 to 1000000000, or null.",name:"e",required:!0,type:{name:"number | null"}},s:{defaultValue:null,description:"The sign of the value of this BigNumber, -1, 1, or null.",name:"s",required:!0,type:{name:"number | null"}},absoluteValue:{defaultValue:null,description:"Returns a BigNumber whose value is the absolute value, i.e. the magnitude, of the value of this\nBigNumber.\n\nThe return value is always exact and unrounded.\n\n```ts\nx = new BigNumber(-0.8)\nx.absoluteValue()           // '0.8'\n```",name:"absoluteValue",required:!0,type:{name:"() => BigNumber"}},abs:{defaultValue:null,description:"Returns a BigNumber whose value is the absolute value, i.e. the magnitude, of the value of this\nBigNumber.\n\nThe return value is always exact and unrounded.\n\n```ts\nx = new BigNumber(-0.8)\nx.abs()                     // '0.8'\n```",name:"abs",required:!0,type:{name:"() => BigNumber"}},comparedTo:{defaultValue:null,description:"Returns |                                                               |\n:-------:|:--------------------------------------------------------------|\n   1    | If the value of this BigNumber is greater than the value of `n`\n  -1    | If the value of this BigNumber is less than the value of `n`\n   0    | If this BigNumber and `n` have the same value\n`null`  | If the value of either this BigNumber or `n` is `NaN`\n\n```ts\n\nx = new BigNumber(Infinity)\ny = new BigNumber(5)\nx.comparedTo(y)                 // 1\nx.comparedTo(x.minus(1))        // 0\ny.comparedTo(NaN)               // null\ny.comparedTo('110', 2)          // -1\n```\n@param n A numeric value.\n@param base The base of n.",name:"comparedTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => number"}},decimalPlaces:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded by rounding mode\n`roundingMode` to a maximum of `decimalPlaces` decimal places.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the return value is the number of\ndecimal places of the value of this BigNumber, or `null` if the value of this BigNumber is\n±`Infinity` or `NaN`.\n\nIf `roundingMode` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(1234.56)\nx.decimalPlaces()                      // 2\nx.decimalPlaces(1)                     // '1234.6'\nx.decimalPlaces(2)                     // '1234.56'\nx.decimalPlaces(10)                    // '1234.56'\nx.decimalPlaces(0, 1)                  // '1234'\nx.decimalPlaces(0, 6)                  // '1235'\nx.decimalPlaces(1, 1)                  // '1234.5'\nx.decimalPlaces(1, BigNumber.ROUND_HALF_EVEN)     // '1234.6'\nx                                      // '1234.56'\ny = new BigNumber('9.9e-101')\ny.decimalPlaces()                      // 102\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"decimalPlaces",required:!0,type:{name:"{ (): number; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},dp:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded by rounding mode\n`roundingMode` to a maximum of `decimalPlaces` decimal places.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the return value is the number of\ndecimal places of the value of this BigNumber, or `null` if the value of this BigNumber is\n±`Infinity` or `NaN`.\n\nIf `roundingMode` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(1234.56)\nx.dp()                                 // 2\nx.dp(1)                                // '1234.6'\nx.dp(2)                                // '1234.56'\nx.dp(10)                               // '1234.56'\nx.dp(0, 1)                             // '1234'\nx.dp(0, 6)                             // '1235'\nx.dp(1, 1)                             // '1234.5'\nx.dp(1, BigNumber.ROUND_HALF_EVEN)     // '1234.6'\nx                                      // '1234.56'\ny = new BigNumber('9.9e-101')\ny.dp()                                 // 102\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"dp",required:!0,type:{name:"{ (): number; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},dividedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber divided by `n`, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\n```ts\nx = new BigNumber(355)\ny = new BigNumber(113)\nx.dividedBy(y)                  // '3.14159292035398230088'\nx.dividedBy(5)                  // '71'\nx.dividedBy(47, 16)             // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"dividedBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},div:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber divided by `n`, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\n```ts\nx = new BigNumber(355)\ny = new BigNumber(113)\nx.div(y)                    // '3.14159292035398230088'\nx.div(5)                    // '71'\nx.div(47, 16)               // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"div",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},dividedToIntegerBy:{defaultValue:null,description:"Returns a BigNumber whose value is the integer part of dividing the value of this BigNumber by\n`n`.\n\n```ts\nx = new BigNumber(5)\ny = new BigNumber(3)\nx.dividedToIntegerBy(y)              // '1'\nx.dividedToIntegerBy(0.7)            // '7'\nx.dividedToIntegerBy('0.f', 16)      // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"dividedToIntegerBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},idiv:{defaultValue:null,description:"Returns a BigNumber whose value is the integer part of dividing the value of this BigNumber by\n`n`.\n\n```ts\nx = new BigNumber(5)\ny = new BigNumber(3)\nx.idiv(y)                       // '1'\nx.idiv(0.7)                     // '7'\nx.idiv('0.f', 16)               // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"idiv",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},exponentiatedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber exponentiated by `n`, i.e.\nraised to the power `n`, and optionally modulo a modulus `m`.\n\nIf `n` is negative the result is rounded according to the current `DECIMAL_PLACES` and\n`ROUNDING_MODE` settings.\n\nAs the number of digits of the result of the power operation can grow so large so quickly,\ne.g. 123.456**10000 has over 50000 digits, the number of significant digits calculated is\nlimited to the value of the `POW_PRECISION` setting (unless a modulus `m` is specified).\n\nBy default `POW_PRECISION` is set to 0. This means that an unlimited number of significant\ndigits will be calculated, and that the method's performance will decrease dramatically for\nlarger exponents.\n\nIf `m` is specified and the value of `m`, `n` and this BigNumber are integers and `n` is\npositive, then a fast modular exponentiation algorithm is used, otherwise the operation will\nbe performed as `x.exponentiatedBy(n).modulo(m)` with a `POW_PRECISION` of 0.\n\nThrows if `n` is not an integer.\n\n```ts\nMath.pow(0.7, 2)                    // 0.48999999999999994\nx = new BigNumber(0.7)\nx.exponentiatedBy(2)                // '0.49'\nBigNumber(3).exponentiatedBy(-2)    // '0.11111111111111111111'\n```\n@param n The exponent, an integer.\n@param m The modulus.",name:"exponentiatedBy",required:!0,type:{name:"{ (n: Value, m?: Value | undefined): BigNumber; (n: number, m?: Value | undefined): BigNumber; }"}},pow:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber exponentiated by `n`, i.e.\nraised to the power `n`, and optionally modulo a modulus `m`.\n\nIf `n` is negative the result is rounded according to the current `DECIMAL_PLACES` and\n`ROUNDING_MODE` settings.\n\nAs the number of digits of the result of the power operation can grow so large so quickly,\ne.g. 123.456**10000 has over 50000 digits, the number of significant digits calculated is\nlimited to the value of the `POW_PRECISION` setting (unless a modulus `m` is specified).\n\nBy default `POW_PRECISION` is set to 0. This means that an unlimited number of significant\ndigits will be calculated, and that the method's performance will decrease dramatically for\nlarger exponents.\n\nIf `m` is specified and the value of `m`, `n` and this BigNumber are integers and `n` is\npositive, then a fast modular exponentiation algorithm is used, otherwise the operation will\nbe performed as `x.pow(n).modulo(m)` with a `POW_PRECISION` of 0.\n\nThrows if `n` is not an integer.\n\n```ts\nMath.pow(0.7, 2)                   // 0.48999999999999994\nx = new BigNumber(0.7)\nx.pow(2)                           // '0.49'\nBigNumber(3).pow(-2)               // '0.11111111111111111111'\n```\n@param n The exponent, an integer.\n@param m The modulus.",name:"pow",required:!0,type:{name:"{ (n: Value, m?: Value | undefined): BigNumber; (n: number, m?: Value | undefined): BigNumber; }"}},integerValue:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded to an integer using\nrounding mode `rm`.\n\nIf `rm` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `rm` is invalid.\n\n```ts\nx = new BigNumber(123.456)\nx.integerValue()                        // '123'\nx.integerValue(BigNumber.ROUND_CEIL)    // '124'\ny = new BigNumber(-12.7)\ny.integerValue()                        // '-13'\nx.integerValue(BigNumber.ROUND_DOWN)    // '-12'\n```\n@param rm The roundng mode, an integer, 0 to 8.",name:"integerValue",required:!0,type:{name:"(rm?: RoundingMode | undefined) => BigNumber"}},isEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is equal to the value of `n`, otherwise returns\n`false`.\n\nAs with JavaScript, `NaN` does not equal `NaN`.\n\n```ts\n0 === 1e-324                           // true\nx = new BigNumber(0)\nx.isEqualTo('1e-324')                  // false\nBigNumber(-0).isEqualTo(x)             // true  ( -0 === 0 )\nBigNumber(255).isEqualTo('ff', 16)     // true\n\ny = new BigNumber(NaN)\ny.isEqualTo(NaN)                // false\n```\n@param n A numeric value.\n@param base The base of n.",name:"isEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},eq:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is equal to the value of `n`, otherwise returns\n`false`.\n\nAs with JavaScript, `NaN` does not equal `NaN`.\n\n```ts\n0 === 1e-324                    // true\nx = new BigNumber(0)\nx.eq('1e-324')                  // false\nBigNumber(-0).eq(x)             // true  ( -0 === 0 )\nBigNumber(255).eq('ff', 16)     // true\n\ny = new BigNumber(NaN)\ny.eq(NaN)                       // false\n```\n@param n A numeric value.\n@param base The base of n.",name:"eq",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isFinite:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is a finite number, otherwise returns `false`.\n\nThe only possible non-finite values of a BigNumber are `NaN`, `Infinity` and `-Infinity`.\n\n```ts\nx = new BigNumber(1)\nx.isFinite()                    // true\ny = new BigNumber(Infinity)\ny.isFinite()                    // false\n```",name:"isFinite",required:!0,type:{name:"() => boolean"}},isGreaterThan:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than the value of `n`, otherwise\nreturns `false`.\n\n```ts\n0.1 > (0.3 - 0.2)                             // true\nx = new BigNumber(0.1)\nx.isGreaterThan(BigNumber(0.3).minus(0.2))    // false\nBigNumber(0).isGreaterThan(x)                 // false\nBigNumber(11, 3).isGreaterThan(11.1, 2)       // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isGreaterThan",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},gt:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than the value of `n`, otherwise\nreturns `false`.\n\n```ts\n0.1 > (0.3 - 0                     // true\nx = new BigNumber(0.1)\nx.gt(BigNumber(0.3).minus(0.2))    // false\nBigNumber(0).gt(x)                 // false\nBigNumber(11, 3).gt(11.1, 2)       // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"gt",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isGreaterThanOrEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n(0.3 - 0.2) >= 0.1                                  // false\nx = new BigNumber(0.3).minus(0.2)\nx.isGreaterThanOrEqualTo(0.1)                       // true\nBigNumber(1).isGreaterThanOrEqualTo(x)              // true\nBigNumber(10, 18).isGreaterThanOrEqualTo('i', 36)   // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isGreaterThanOrEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},gte:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n(0.3 - 0.2) >= 0.1                    // false\nx = new BigNumber(0.3).minus(0.2)\nx.gte(0.1)                            // true\nBigNumber(1).gte(x)                   // true\nBigNumber(10, 18).gte('i', 36)        // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"gte",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isInteger:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is an integer, otherwise returns `false`.\n\n```ts\nx = new BigNumber(1)\nx.isInteger()                   // true\ny = new BigNumber(123.456)\ny.isInteger()                   // false\n```",name:"isInteger",required:!0,type:{name:"() => boolean"}},isLessThan:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than the value of `n`, otherwise returns\n`false`.\n\n```ts\n(0.3 - 0.2) < 0.1                       // true\nx = new BigNumber(0.3).minus(0.2)\nx.isLessThan(0.1)                       // false\nBigNumber(0).isLessThan(x)              // true\nBigNumber(11.1, 2).isLessThan(11, 3)    // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isLessThan",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},lt:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than the value of `n`, otherwise returns\n`false`.\n\n```ts\n(0.3 - 0.2) < 0.1                       // true\nx = new BigNumber(0.3).minus(0.2)\nx.lt(0.1)                               // false\nBigNumber(0).lt(x)                      // true\nBigNumber(11.1, 2).lt(11, 3)            // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"lt",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isLessThanOrEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n0.1 <= (0.3 - 0.2)                                 // false\nx = new BigNumber(0.1)\nx.isLessThanOrEqualTo(BigNumber(0.3).minus(0.2))   // true\nBigNumber(-1).isLessThanOrEqualTo(x)               // true\nBigNumber(10, 18).isLessThanOrEqualTo('i', 36)     // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isLessThanOrEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},lte:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n0.1 <= (0.3 - 0.2)                  // false\nx = new BigNumber(0.1)\nx.lte(BigNumber(0.3).minus(0.2))    // true\nBigNumber(-1).lte(x)                // true\nBigNumber(10, 18).lte('i', 36)      // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"lte",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isNaN:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is `NaN`, otherwise returns `false`.\n\n```ts\nx = new BigNumber(NaN)\nx.isNaN()                       // true\ny = new BigNumber('Infinity')\ny.isNaN()                       // false\n```",name:"isNaN",required:!0,type:{name:"() => boolean"}},isNegative:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is negative, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isNegative()                  // true\ny = new BigNumber(2)\ny.isNegative()                  // false\n```",name:"isNegative",required:!0,type:{name:"() => boolean"}},isPositive:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is positive, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isPositive()                  // false\ny = new BigNumber(2)\ny.isPositive()                  // true\n```",name:"isPositive",required:!0,type:{name:"() => boolean"}},isZero:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is zero or minus zero, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isZero()                 // true\n```",name:"isZero",required:!0,type:{name:"() => boolean"}},minus:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber minus `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.3 - 0.1                       // 0.19999999999999998\nx = new BigNumber(0.3)\nx.minus(0.1)                    // '0.2'\nx.minus(0.6, 20)                // '0'\n```\n@param n A numeric value.\n@param base The base of n.",name:"minus",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},modulo:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber modulo `n`, i.e. the integer\nremainder of dividing this BigNumber by `n`.\n\nThe value returned, and in particular its sign, is dependent on the value of the `MODULO_MODE`\nsetting of this BigNumber constructor. If it is 1 (default value), the result will have the\nsame sign as this BigNumber, and it will match that of Javascript's `%` operator (within the\nlimits of double precision) and BigDecimal's `remainder` method.\n\nThe return value is always exact and unrounded.\n\nSee `MODULO_MODE` for a description of the other modulo modes.\n\n```ts\n1 % 0.9                         // 0.09999999999999998\nx = new BigNumber(1)\nx.modulo(0.9)                   // '0.1'\ny = new BigNumber(33)\ny.modulo('a', 33)               // '3'\n```\n@param n A numeric value.\n@param base The base of n.",name:"modulo",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},mod:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber modulo `n`, i.e. the integer\nremainder of dividing this BigNumber by `n`.\n\nThe value returned, and in particular its sign, is dependent on the value of the `MODULO_MODE`\nsetting of this BigNumber constructor. If it is 1 (default value), the result will have the\nsame sign as this BigNumber, and it will match that of Javascript's `%` operator (within the\nlimits of double precision) and BigDecimal's `remainder` method.\n\nThe return value is always exact and unrounded.\n\nSee `MODULO_MODE` for a description of the other modulo modes.\n\n```ts\n1 % 0.9                      // 0.09999999999999998\nx = new BigNumber(1)\nx.mod(0.9)                   // '0.1'\ny = new BigNumber(33)\ny.mod('a', 33)               // '3'\n```\n@param n A numeric value.\n@param base The base of n.",name:"mod",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},multipliedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber multiplied by `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.6 * 3                                // 1.7999999999999998\nx = new BigNumber(0.6)\ny = x.multipliedBy(3)                  // '1.8'\nBigNumber('7e+500').multipliedBy(y)    // '1.26e+501'\nx.multipliedBy('-a', 16)               // '-6'\n```\n@param n A numeric value.\n@param base The base of n.",name:"multipliedBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},times:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber multiplied by `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.6 * 3                         // 1.7999999999999998\nx = new BigNumber(0.6)\ny = x.times(3)                  // '1.8'\nBigNumber('7e+500').times(y)    // '1.26e+501'\nx.times('-a', 16)               // '-6'\n```\n@param n A numeric value.\n@param base The base of n.",name:"times",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},negated:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber negated, i.e. multiplied by -1.\n\n```ts\nx = new BigNumber(1.8)\nx.negated()                     // '-1.8'\ny = new BigNumber(-1.3)\ny.negated()                     // '1.3'\n```",name:"negated",required:!0,type:{name:"() => BigNumber"}},plus:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber plus `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.1 + 0.2                       // 0.30000000000000004\nx = new BigNumber(0.1)\ny = x.plus(0.2)                 // '0.3'\nBigNumber(0.7).plus(x).plus(y)  // '1.1'\nx.plus('0.1', 8)                // '0.225'\n```\n@param n A numeric value.\n@param base The base of n.",name:"plus",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},precision:{defaultValue:null,description:"Returns the number of significant digits of the value of this BigNumber, or `null` if the value\nof this BigNumber is ±`Infinity` or `NaN`.\n\nIf `includeZeros` is true then any trailing zeros of the integer part of the value of this\nBigNumber are counted as significant digits, otherwise they are not.\n\nThrows if `includeZeros` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.precision()                         // 9\ny = new BigNumber(987000)\ny.precision(false)                    // 3\ny.precision(true)                     // 6\n```\nReturns a BigNumber whose value is the value of this BigNumber rounded to a precision of\n`significantDigits` significant digits using rounding mode `roundingMode`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` will be used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.precision(6)                         // '9876.54'\nx.precision(6, BigNumber.ROUND_UP)     // '9876.55'\nx.precision(2)                         // '9900'\nx.precision(2, 1)                      // '9800'\nx                                      // '9876.54321'\n```\n@param includeZeros Whether to include integer trailing zeros in the significant digit count.\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"precision",required:!0,type:{name:"{ (includeZeros?: boolean | undefined): number; (significantDigits: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},sd:{defaultValue:null,description:"Returns the number of significant digits of the value of this BigNumber,\nor `null` if the value of this BigNumber is ±`Infinity` or `NaN`.\n\nIf `includeZeros` is true then any trailing zeros of the integer part of\nthe value of this BigNumber are counted as significant digits, otherwise\nthey are not.\n\nThrows if `includeZeros` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.sd()                         // 9\ny = new BigNumber(987000)\ny.sd(false)                    // 3\ny.sd(true)                     // 6\n```\nReturns a BigNumber whose value is the value of this BigNumber rounded to a precision of\n`significantDigits` significant digits using rounding mode `roundingMode`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` will be used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.sd(6)                           // '9876.54'\nx.sd(6, BigNumber.ROUND_UP)       // '9876.55'\nx.sd(2)                           // '9900'\nx.sd(2, 1)                        // '9800'\nx                                 // '9876.54321'\n```\n@param includeZeros Whether to include integer trailing zeros in the significant digit count.\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"sd",required:!0,type:{name:"{ (includeZeros?: boolean | undefined): number; (significantDigits: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},shiftedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber shifted by `n` places.\n\nThe shift is of the decimal point, i.e. of powers of ten, and is to the left if `n` is negative\nor to the right if `n` is positive.\n\nThe return value is always exact and unrounded.\n\nThrows if `n` is invalid.\n\n```ts\nx = new BigNumber(1.23)\nx.shiftedBy(3)                      // '1230'\nx.shiftedBy(-3)                     // '0.00123'\n```\n@param n The shift value, integer, -9007199254740991 to 9007199254740991.",name:"shiftedBy",required:!0,type:{name:"(n: number) => BigNumber"}},squareRoot:{defaultValue:null,description:"Returns a BigNumber whose value is the square root of the value of this BigNumber, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\nThe return value will be correctly rounded, i.e. rounded as if the result was first calculated\nto an infinite number of correct digits before rounding.\n\n```ts\nx = new BigNumber(16)\nx.squareRoot()                  // '4'\ny = new BigNumber(3)\ny.squareRoot()                  // '1.73205080756887729353'\n```",name:"squareRoot",required:!0,type:{name:"() => BigNumber"}},sqrt:{defaultValue:null,description:"Returns a BigNumber whose value is the square root of the value of this BigNumber, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\nThe return value will be correctly rounded, i.e. rounded as if the result was first calculated\nto an infinite number of correct digits before rounding.\n\n```ts\nx = new BigNumber(16)\nx.sqrt()                  // '4'\ny = new BigNumber(3)\ny.sqrt()                  // '1.73205080756887729353'\n```",name:"sqrt",required:!0,type:{name:"() => BigNumber"}},toExponential:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in exponential notation rounded using\nrounding mode `roundingMode` to `decimalPlaces` decimal places, i.e with one digit before the\ndecimal point and `decimalPlaces` digits after it.\n\nIf the value of this BigNumber in exponential notation has fewer than `decimalPlaces` fraction\ndigits, the return value will be appended with zeros accordingly.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the number of digits after the\ndecimal point defaults to the minimum number of digits necessary to represent the value\nexactly.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = 45.6\ny = new BigNumber(x)\nx.toExponential()               // '4.56e+1'\ny.toExponential()               // '4.56e+1'\nx.toExponential(0)              // '5e+1'\ny.toExponential(0)              // '5e+1'\nx.toExponential(1)              // '4.6e+1'\ny.toExponential(1)              // '4.6e+1'\ny.toExponential(1, 1)           // '4.5e+1'  (ROUND_DOWN)\nx.toExponential(3)              // '4.560e+1'\ny.toExponential(3)              // '4.560e+1'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"toExponential",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}},toFixed:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in normal (fixed-point) notation\nrounded to `decimalPlaces` decimal places using rounding mode `roundingMode`.\n\nIf the value of this BigNumber in normal notation has fewer than `decimalPlaces` fraction\ndigits, the return value will be appended with zeros accordingly.\n\nUnlike `Number.prototype.toFixed`, which returns exponential notation if a number is greater or\nequal to 10**21, this method will always return normal notation.\n\nIf `decimalPlaces` is omitted or is `null` or `undefined`, the return value will be unrounded\nand in normal notation. This is also unlike `Number.prototype.toFixed`, which returns the value\nto zero decimal places. It is useful when normal notation is required and the current\n`EXPONENTIAL_AT` setting causes `toString` to return exponential notation.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = 3.456\ny = new BigNumber(x)\nx.toFixed()                     // '3'\ny.toFixed()                     // '3.456'\ny.toFixed(0)                    // '3'\nx.toFixed(2)                    // '3.46'\ny.toFixed(2)                    // '3.46'\ny.toFixed(2, 1)                 // '3.45'  (ROUND_DOWN)\nx.toFixed(5)                    // '3.45600'\ny.toFixed(5)                    // '3.45600'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"toFixed",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}},toFormat:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in normal (fixed-point) notation\nrounded to `decimalPlaces` decimal places using rounding mode `roundingMode`, and formatted\naccording to the properties of the `format` or `FORMAT` object.\n\nThe formatting object may contain some or all of the properties shown in the examples below.\n\nIf `decimalPlaces` is omitted or is `null` or `undefined`, then the return value is not\nrounded to a fixed number of decimal places.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nIf `format` is omitted or is `null` or `undefined`, `FORMAT` is used.\n\nThrows if `decimalPlaces`, `roundingMode`, or `format` is invalid.\n\n```ts\nfmt = {\n  decimalSeparator: '.',\n  groupSeparator: ',',\n  groupSize: 3,\n  secondaryGroupSize: 0,\n  fractionGroupSeparator: ' ',\n  fractionGroupSize: 0\n}\n\nx = new BigNumber('123456789.123456789')\n\n// Set the global formatting options\nBigNumber.config({ FORMAT: fmt })\n\nx.toFormat()                              // '123,456,789.123456789'\nx.toFormat(3)                             // '123,456,789.123'\n\n// If a reference to the object assigned to FORMAT has been retained,\n// the format properties can be changed directly\nfmt.groupSeparator = ' '\nfmt.fractionGroupSize = 5\nx.toFormat()                              // '123 456 789.12345 6789'\n\n// Alternatively, pass the formatting options as an argument\nfmt = {\n  decimalSeparator: ',',\n  groupSeparator: '.',\n  groupSize: 3,\n  secondaryGroupSize: 2\n}\n\nx.toFormat()                              // '123 456 789.12345 6789'\nx.toFormat(fmt)                           // '12.34.56.789,123456789'\nx.toFormat(2, fmt)                        // '12.34.56.789,12'\nx.toFormat(3, BigNumber.ROUND_UP, fmt)    // '12.34.56.789,124'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.\n@param format Formatting options object. See `BigNumber.Format`.",name:"toFormat",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode: RoundingMode, format?: Format | undefined): string; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (decimalPlaces?: number | undefined): string; (decimalPlaces: number, format: Format): string; (format: Format): string; }"}},toFraction:{defaultValue:null,description:"Returns an array of two BigNumbers representing the value of this BigNumber as a simple\nfraction with an integer numerator and an integer denominator.\nThe denominator will be a positive non-zero value less than or equal to `max_denominator`.\nIf a maximum denominator, `max_denominator`, is not specified, or is `null` or `undefined`, the\ndenominator will be the lowest value necessary to represent the number exactly.\n\nThrows if `max_denominator` is invalid.\n\n```ts\nx = new BigNumber(1.75)\nx.toFraction()                  // '7, 4'\n\npi = new BigNumber('3.14159265358')\npi.toFraction()                 // '157079632679,50000000000'\npi.toFraction(100000)           // '312689, 99532'\npi.toFraction(10000)            // '355, 113'\npi.toFraction(100)              // '311, 99'\npi.toFraction(10)               // '22, 7'\npi.toFraction(1)                // '3, 1'\n```\n@param max_denominator The maximum denominator, integer > 0, or Infinity.",name:"toFraction",required:!0,type:{name:"(max_denominator?: Value | undefined) => [BigNumber, BigNumber]"}},toJSON:{defaultValue:null,description:"As `valueOf`.",name:"toJSON",required:!0,type:{name:"() => string"}},toNumber:{defaultValue:null,description:"Returns the value of this BigNumber as a JavaScript primitive number.\n\nUsing the unary plus operator gives the same result.\n\n```ts\nx = new BigNumber(456.789)\nx.toNumber()                    // 456.789\n+x                              // 456.789\n\ny = new BigNumber('45987349857634085409857349856430985')\ny.toNumber()                    // 4.598734985763409e+34\n\nz = new BigNumber(-0)\n1 / z.toNumber()                // -Infinity\n1 / +z                          // -Infinity\n```",name:"toNumber",required:!0,type:{name:"() => number"}},toPrecision:{defaultValue:null,description:"Returns a string representing the value of this BigNumber rounded to `significantDigits`\nsignificant digits using rounding mode `roundingMode`.\n\nIf `significantDigits` is less than the number of digits necessary to represent the integer\npart of the value in normal (fixed-point) notation, then exponential notation is used.\n\nIf `significantDigits` is omitted, or is `null` or `undefined`, then the return value is the\nsame as `n.toString()`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = 45.6\ny = new BigNumber(x)\nx.toPrecision()                 // '45.6'\ny.toPrecision()                 // '45.6'\nx.toPrecision(1)                // '5e+1'\ny.toPrecision(1)                // '5e+1'\ny.toPrecision(2, 0)             // '4.6e+1'  (ROUND_UP)\ny.toPrecision(2, 1)             // '4.5e+1'  (ROUND_DOWN)\nx.toPrecision(5)                // '45.600'\ny.toPrecision(5)                // '45.600'\n```\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer 0 to 8.",name:"toPrecision",required:!0,type:{name:"{ (significantDigits: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/hooks/math/useToPrecision.tsx#toPrecision12"]={docgenInfo:toPrecision12.__docgenInfo,name:"toPrecision12",path:"src/hooks/math/useToPrecision.tsx#toPrecision12"})}catch(__react_docgen_typescript_loader_error){}try{useToPrecision12.displayName="useToPrecision12",useToPrecision12.__docgenInfo={description:"",displayName:"useToPrecision12",props:{c:{defaultValue:null,description:"The coefficient of the value of this BigNumber, an array of base 1e14 integer numbers, or null.",name:"c",required:!0,type:{name:"number[] | null"}},e:{defaultValue:null,description:"The exponent of the value of this BigNumber, an integer number, -1000000000 to 1000000000, or null.",name:"e",required:!0,type:{name:"number | null"}},s:{defaultValue:null,description:"The sign of the value of this BigNumber, -1, 1, or null.",name:"s",required:!0,type:{name:"number | null"}},absoluteValue:{defaultValue:null,description:"Returns a BigNumber whose value is the absolute value, i.e. the magnitude, of the value of this\nBigNumber.\n\nThe return value is always exact and unrounded.\n\n```ts\nx = new BigNumber(-0.8)\nx.absoluteValue()           // '0.8'\n```",name:"absoluteValue",required:!0,type:{name:"() => BigNumber"}},abs:{defaultValue:null,description:"Returns a BigNumber whose value is the absolute value, i.e. the magnitude, of the value of this\nBigNumber.\n\nThe return value is always exact and unrounded.\n\n```ts\nx = new BigNumber(-0.8)\nx.abs()                     // '0.8'\n```",name:"abs",required:!0,type:{name:"() => BigNumber"}},comparedTo:{defaultValue:null,description:"Returns |                                                               |\n:-------:|:--------------------------------------------------------------|\n   1    | If the value of this BigNumber is greater than the value of `n`\n  -1    | If the value of this BigNumber is less than the value of `n`\n   0    | If this BigNumber and `n` have the same value\n`null`  | If the value of either this BigNumber or `n` is `NaN`\n\n```ts\n\nx = new BigNumber(Infinity)\ny = new BigNumber(5)\nx.comparedTo(y)                 // 1\nx.comparedTo(x.minus(1))        // 0\ny.comparedTo(NaN)               // null\ny.comparedTo('110', 2)          // -1\n```\n@param n A numeric value.\n@param base The base of n.",name:"comparedTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => number"}},decimalPlaces:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded by rounding mode\n`roundingMode` to a maximum of `decimalPlaces` decimal places.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the return value is the number of\ndecimal places of the value of this BigNumber, or `null` if the value of this BigNumber is\n±`Infinity` or `NaN`.\n\nIf `roundingMode` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(1234.56)\nx.decimalPlaces()                      // 2\nx.decimalPlaces(1)                     // '1234.6'\nx.decimalPlaces(2)                     // '1234.56'\nx.decimalPlaces(10)                    // '1234.56'\nx.decimalPlaces(0, 1)                  // '1234'\nx.decimalPlaces(0, 6)                  // '1235'\nx.decimalPlaces(1, 1)                  // '1234.5'\nx.decimalPlaces(1, BigNumber.ROUND_HALF_EVEN)     // '1234.6'\nx                                      // '1234.56'\ny = new BigNumber('9.9e-101')\ny.decimalPlaces()                      // 102\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"decimalPlaces",required:!0,type:{name:"{ (): number; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},dp:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded by rounding mode\n`roundingMode` to a maximum of `decimalPlaces` decimal places.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the return value is the number of\ndecimal places of the value of this BigNumber, or `null` if the value of this BigNumber is\n±`Infinity` or `NaN`.\n\nIf `roundingMode` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(1234.56)\nx.dp()                                 // 2\nx.dp(1)                                // '1234.6'\nx.dp(2)                                // '1234.56'\nx.dp(10)                               // '1234.56'\nx.dp(0, 1)                             // '1234'\nx.dp(0, 6)                             // '1235'\nx.dp(1, 1)                             // '1234.5'\nx.dp(1, BigNumber.ROUND_HALF_EVEN)     // '1234.6'\nx                                      // '1234.56'\ny = new BigNumber('9.9e-101')\ny.dp()                                 // 102\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"dp",required:!0,type:{name:"{ (): number; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},dividedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber divided by `n`, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\n```ts\nx = new BigNumber(355)\ny = new BigNumber(113)\nx.dividedBy(y)                  // '3.14159292035398230088'\nx.dividedBy(5)                  // '71'\nx.dividedBy(47, 16)             // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"dividedBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},div:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber divided by `n`, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\n```ts\nx = new BigNumber(355)\ny = new BigNumber(113)\nx.div(y)                    // '3.14159292035398230088'\nx.div(5)                    // '71'\nx.div(47, 16)               // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"div",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},dividedToIntegerBy:{defaultValue:null,description:"Returns a BigNumber whose value is the integer part of dividing the value of this BigNumber by\n`n`.\n\n```ts\nx = new BigNumber(5)\ny = new BigNumber(3)\nx.dividedToIntegerBy(y)              // '1'\nx.dividedToIntegerBy(0.7)            // '7'\nx.dividedToIntegerBy('0.f', 16)      // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"dividedToIntegerBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},idiv:{defaultValue:null,description:"Returns a BigNumber whose value is the integer part of dividing the value of this BigNumber by\n`n`.\n\n```ts\nx = new BigNumber(5)\ny = new BigNumber(3)\nx.idiv(y)                       // '1'\nx.idiv(0.7)                     // '7'\nx.idiv('0.f', 16)               // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"idiv",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},exponentiatedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber exponentiated by `n`, i.e.\nraised to the power `n`, and optionally modulo a modulus `m`.\n\nIf `n` is negative the result is rounded according to the current `DECIMAL_PLACES` and\n`ROUNDING_MODE` settings.\n\nAs the number of digits of the result of the power operation can grow so large so quickly,\ne.g. 123.456**10000 has over 50000 digits, the number of significant digits calculated is\nlimited to the value of the `POW_PRECISION` setting (unless a modulus `m` is specified).\n\nBy default `POW_PRECISION` is set to 0. This means that an unlimited number of significant\ndigits will be calculated, and that the method's performance will decrease dramatically for\nlarger exponents.\n\nIf `m` is specified and the value of `m`, `n` and this BigNumber are integers and `n` is\npositive, then a fast modular exponentiation algorithm is used, otherwise the operation will\nbe performed as `x.exponentiatedBy(n).modulo(m)` with a `POW_PRECISION` of 0.\n\nThrows if `n` is not an integer.\n\n```ts\nMath.pow(0.7, 2)                    // 0.48999999999999994\nx = new BigNumber(0.7)\nx.exponentiatedBy(2)                // '0.49'\nBigNumber(3).exponentiatedBy(-2)    // '0.11111111111111111111'\n```\n@param n The exponent, an integer.\n@param m The modulus.",name:"exponentiatedBy",required:!0,type:{name:"{ (n: Value, m?: Value | undefined): BigNumber; (n: number, m?: Value | undefined): BigNumber; }"}},pow:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber exponentiated by `n`, i.e.\nraised to the power `n`, and optionally modulo a modulus `m`.\n\nIf `n` is negative the result is rounded according to the current `DECIMAL_PLACES` and\n`ROUNDING_MODE` settings.\n\nAs the number of digits of the result of the power operation can grow so large so quickly,\ne.g. 123.456**10000 has over 50000 digits, the number of significant digits calculated is\nlimited to the value of the `POW_PRECISION` setting (unless a modulus `m` is specified).\n\nBy default `POW_PRECISION` is set to 0. This means that an unlimited number of significant\ndigits will be calculated, and that the method's performance will decrease dramatically for\nlarger exponents.\n\nIf `m` is specified and the value of `m`, `n` and this BigNumber are integers and `n` is\npositive, then a fast modular exponentiation algorithm is used, otherwise the operation will\nbe performed as `x.pow(n).modulo(m)` with a `POW_PRECISION` of 0.\n\nThrows if `n` is not an integer.\n\n```ts\nMath.pow(0.7, 2)                   // 0.48999999999999994\nx = new BigNumber(0.7)\nx.pow(2)                           // '0.49'\nBigNumber(3).pow(-2)               // '0.11111111111111111111'\n```\n@param n The exponent, an integer.\n@param m The modulus.",name:"pow",required:!0,type:{name:"{ (n: Value, m?: Value | undefined): BigNumber; (n: number, m?: Value | undefined): BigNumber; }"}},integerValue:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded to an integer using\nrounding mode `rm`.\n\nIf `rm` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `rm` is invalid.\n\n```ts\nx = new BigNumber(123.456)\nx.integerValue()                        // '123'\nx.integerValue(BigNumber.ROUND_CEIL)    // '124'\ny = new BigNumber(-12.7)\ny.integerValue()                        // '-13'\nx.integerValue(BigNumber.ROUND_DOWN)    // '-12'\n```\n@param rm The roundng mode, an integer, 0 to 8.",name:"integerValue",required:!0,type:{name:"(rm?: RoundingMode | undefined) => BigNumber"}},isEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is equal to the value of `n`, otherwise returns\n`false`.\n\nAs with JavaScript, `NaN` does not equal `NaN`.\n\n```ts\n0 === 1e-324                           // true\nx = new BigNumber(0)\nx.isEqualTo('1e-324')                  // false\nBigNumber(-0).isEqualTo(x)             // true  ( -0 === 0 )\nBigNumber(255).isEqualTo('ff', 16)     // true\n\ny = new BigNumber(NaN)\ny.isEqualTo(NaN)                // false\n```\n@param n A numeric value.\n@param base The base of n.",name:"isEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},eq:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is equal to the value of `n`, otherwise returns\n`false`.\n\nAs with JavaScript, `NaN` does not equal `NaN`.\n\n```ts\n0 === 1e-324                    // true\nx = new BigNumber(0)\nx.eq('1e-324')                  // false\nBigNumber(-0).eq(x)             // true  ( -0 === 0 )\nBigNumber(255).eq('ff', 16)     // true\n\ny = new BigNumber(NaN)\ny.eq(NaN)                       // false\n```\n@param n A numeric value.\n@param base The base of n.",name:"eq",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isFinite:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is a finite number, otherwise returns `false`.\n\nThe only possible non-finite values of a BigNumber are `NaN`, `Infinity` and `-Infinity`.\n\n```ts\nx = new BigNumber(1)\nx.isFinite()                    // true\ny = new BigNumber(Infinity)\ny.isFinite()                    // false\n```",name:"isFinite",required:!0,type:{name:"() => boolean"}},isGreaterThan:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than the value of `n`, otherwise\nreturns `false`.\n\n```ts\n0.1 > (0.3 - 0.2)                             // true\nx = new BigNumber(0.1)\nx.isGreaterThan(BigNumber(0.3).minus(0.2))    // false\nBigNumber(0).isGreaterThan(x)                 // false\nBigNumber(11, 3).isGreaterThan(11.1, 2)       // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isGreaterThan",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},gt:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than the value of `n`, otherwise\nreturns `false`.\n\n```ts\n0.1 > (0.3 - 0                     // true\nx = new BigNumber(0.1)\nx.gt(BigNumber(0.3).minus(0.2))    // false\nBigNumber(0).gt(x)                 // false\nBigNumber(11, 3).gt(11.1, 2)       // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"gt",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isGreaterThanOrEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n(0.3 - 0.2) >= 0.1                                  // false\nx = new BigNumber(0.3).minus(0.2)\nx.isGreaterThanOrEqualTo(0.1)                       // true\nBigNumber(1).isGreaterThanOrEqualTo(x)              // true\nBigNumber(10, 18).isGreaterThanOrEqualTo('i', 36)   // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isGreaterThanOrEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},gte:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n(0.3 - 0.2) >= 0.1                    // false\nx = new BigNumber(0.3).minus(0.2)\nx.gte(0.1)                            // true\nBigNumber(1).gte(x)                   // true\nBigNumber(10, 18).gte('i', 36)        // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"gte",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isInteger:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is an integer, otherwise returns `false`.\n\n```ts\nx = new BigNumber(1)\nx.isInteger()                   // true\ny = new BigNumber(123.456)\ny.isInteger()                   // false\n```",name:"isInteger",required:!0,type:{name:"() => boolean"}},isLessThan:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than the value of `n`, otherwise returns\n`false`.\n\n```ts\n(0.3 - 0.2) < 0.1                       // true\nx = new BigNumber(0.3).minus(0.2)\nx.isLessThan(0.1)                       // false\nBigNumber(0).isLessThan(x)              // true\nBigNumber(11.1, 2).isLessThan(11, 3)    // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isLessThan",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},lt:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than the value of `n`, otherwise returns\n`false`.\n\n```ts\n(0.3 - 0.2) < 0.1                       // true\nx = new BigNumber(0.3).minus(0.2)\nx.lt(0.1)                               // false\nBigNumber(0).lt(x)                      // true\nBigNumber(11.1, 2).lt(11, 3)            // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"lt",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isLessThanOrEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n0.1 <= (0.3 - 0.2)                                 // false\nx = new BigNumber(0.1)\nx.isLessThanOrEqualTo(BigNumber(0.3).minus(0.2))   // true\nBigNumber(-1).isLessThanOrEqualTo(x)               // true\nBigNumber(10, 18).isLessThanOrEqualTo('i', 36)     // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isLessThanOrEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},lte:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n0.1 <= (0.3 - 0.2)                  // false\nx = new BigNumber(0.1)\nx.lte(BigNumber(0.3).minus(0.2))    // true\nBigNumber(-1).lte(x)                // true\nBigNumber(10, 18).lte('i', 36)      // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"lte",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isNaN:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is `NaN`, otherwise returns `false`.\n\n```ts\nx = new BigNumber(NaN)\nx.isNaN()                       // true\ny = new BigNumber('Infinity')\ny.isNaN()                       // false\n```",name:"isNaN",required:!0,type:{name:"() => boolean"}},isNegative:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is negative, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isNegative()                  // true\ny = new BigNumber(2)\ny.isNegative()                  // false\n```",name:"isNegative",required:!0,type:{name:"() => boolean"}},isPositive:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is positive, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isPositive()                  // false\ny = new BigNumber(2)\ny.isPositive()                  // true\n```",name:"isPositive",required:!0,type:{name:"() => boolean"}},isZero:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is zero or minus zero, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isZero()                 // true\n```",name:"isZero",required:!0,type:{name:"() => boolean"}},minus:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber minus `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.3 - 0.1                       // 0.19999999999999998\nx = new BigNumber(0.3)\nx.minus(0.1)                    // '0.2'\nx.minus(0.6, 20)                // '0'\n```\n@param n A numeric value.\n@param base The base of n.",name:"minus",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},modulo:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber modulo `n`, i.e. the integer\nremainder of dividing this BigNumber by `n`.\n\nThe value returned, and in particular its sign, is dependent on the value of the `MODULO_MODE`\nsetting of this BigNumber constructor. If it is 1 (default value), the result will have the\nsame sign as this BigNumber, and it will match that of Javascript's `%` operator (within the\nlimits of double precision) and BigDecimal's `remainder` method.\n\nThe return value is always exact and unrounded.\n\nSee `MODULO_MODE` for a description of the other modulo modes.\n\n```ts\n1 % 0.9                         // 0.09999999999999998\nx = new BigNumber(1)\nx.modulo(0.9)                   // '0.1'\ny = new BigNumber(33)\ny.modulo('a', 33)               // '3'\n```\n@param n A numeric value.\n@param base The base of n.",name:"modulo",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},mod:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber modulo `n`, i.e. the integer\nremainder of dividing this BigNumber by `n`.\n\nThe value returned, and in particular its sign, is dependent on the value of the `MODULO_MODE`\nsetting of this BigNumber constructor. If it is 1 (default value), the result will have the\nsame sign as this BigNumber, and it will match that of Javascript's `%` operator (within the\nlimits of double precision) and BigDecimal's `remainder` method.\n\nThe return value is always exact and unrounded.\n\nSee `MODULO_MODE` for a description of the other modulo modes.\n\n```ts\n1 % 0.9                      // 0.09999999999999998\nx = new BigNumber(1)\nx.mod(0.9)                   // '0.1'\ny = new BigNumber(33)\ny.mod('a', 33)               // '3'\n```\n@param n A numeric value.\n@param base The base of n.",name:"mod",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},multipliedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber multiplied by `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.6 * 3                                // 1.7999999999999998\nx = new BigNumber(0.6)\ny = x.multipliedBy(3)                  // '1.8'\nBigNumber('7e+500').multipliedBy(y)    // '1.26e+501'\nx.multipliedBy('-a', 16)               // '-6'\n```\n@param n A numeric value.\n@param base The base of n.",name:"multipliedBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},times:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber multiplied by `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.6 * 3                         // 1.7999999999999998\nx = new BigNumber(0.6)\ny = x.times(3)                  // '1.8'\nBigNumber('7e+500').times(y)    // '1.26e+501'\nx.times('-a', 16)               // '-6'\n```\n@param n A numeric value.\n@param base The base of n.",name:"times",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},negated:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber negated, i.e. multiplied by -1.\n\n```ts\nx = new BigNumber(1.8)\nx.negated()                     // '-1.8'\ny = new BigNumber(-1.3)\ny.negated()                     // '1.3'\n```",name:"negated",required:!0,type:{name:"() => BigNumber"}},plus:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber plus `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.1 + 0.2                       // 0.30000000000000004\nx = new BigNumber(0.1)\ny = x.plus(0.2)                 // '0.3'\nBigNumber(0.7).plus(x).plus(y)  // '1.1'\nx.plus('0.1', 8)                // '0.225'\n```\n@param n A numeric value.\n@param base The base of n.",name:"plus",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},precision:{defaultValue:null,description:"Returns the number of significant digits of the value of this BigNumber, or `null` if the value\nof this BigNumber is ±`Infinity` or `NaN`.\n\nIf `includeZeros` is true then any trailing zeros of the integer part of the value of this\nBigNumber are counted as significant digits, otherwise they are not.\n\nThrows if `includeZeros` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.precision()                         // 9\ny = new BigNumber(987000)\ny.precision(false)                    // 3\ny.precision(true)                     // 6\n```\nReturns a BigNumber whose value is the value of this BigNumber rounded to a precision of\n`significantDigits` significant digits using rounding mode `roundingMode`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` will be used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.precision(6)                         // '9876.54'\nx.precision(6, BigNumber.ROUND_UP)     // '9876.55'\nx.precision(2)                         // '9900'\nx.precision(2, 1)                      // '9800'\nx                                      // '9876.54321'\n```\n@param includeZeros Whether to include integer trailing zeros in the significant digit count.\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"precision",required:!0,type:{name:"{ (includeZeros?: boolean | undefined): number; (significantDigits: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},sd:{defaultValue:null,description:"Returns the number of significant digits of the value of this BigNumber,\nor `null` if the value of this BigNumber is ±`Infinity` or `NaN`.\n\nIf `includeZeros` is true then any trailing zeros of the integer part of\nthe value of this BigNumber are counted as significant digits, otherwise\nthey are not.\n\nThrows if `includeZeros` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.sd()                         // 9\ny = new BigNumber(987000)\ny.sd(false)                    // 3\ny.sd(true)                     // 6\n```\nReturns a BigNumber whose value is the value of this BigNumber rounded to a precision of\n`significantDigits` significant digits using rounding mode `roundingMode`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` will be used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.sd(6)                           // '9876.54'\nx.sd(6, BigNumber.ROUND_UP)       // '9876.55'\nx.sd(2)                           // '9900'\nx.sd(2, 1)                        // '9800'\nx                                 // '9876.54321'\n```\n@param includeZeros Whether to include integer trailing zeros in the significant digit count.\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"sd",required:!0,type:{name:"{ (includeZeros?: boolean | undefined): number; (significantDigits: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},shiftedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber shifted by `n` places.\n\nThe shift is of the decimal point, i.e. of powers of ten, and is to the left if `n` is negative\nor to the right if `n` is positive.\n\nThe return value is always exact and unrounded.\n\nThrows if `n` is invalid.\n\n```ts\nx = new BigNumber(1.23)\nx.shiftedBy(3)                      // '1230'\nx.shiftedBy(-3)                     // '0.00123'\n```\n@param n The shift value, integer, -9007199254740991 to 9007199254740991.",name:"shiftedBy",required:!0,type:{name:"(n: number) => BigNumber"}},squareRoot:{defaultValue:null,description:"Returns a BigNumber whose value is the square root of the value of this BigNumber, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\nThe return value will be correctly rounded, i.e. rounded as if the result was first calculated\nto an infinite number of correct digits before rounding.\n\n```ts\nx = new BigNumber(16)\nx.squareRoot()                  // '4'\ny = new BigNumber(3)\ny.squareRoot()                  // '1.73205080756887729353'\n```",name:"squareRoot",required:!0,type:{name:"() => BigNumber"}},sqrt:{defaultValue:null,description:"Returns a BigNumber whose value is the square root of the value of this BigNumber, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\nThe return value will be correctly rounded, i.e. rounded as if the result was first calculated\nto an infinite number of correct digits before rounding.\n\n```ts\nx = new BigNumber(16)\nx.sqrt()                  // '4'\ny = new BigNumber(3)\ny.sqrt()                  // '1.73205080756887729353'\n```",name:"sqrt",required:!0,type:{name:"() => BigNumber"}},toExponential:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in exponential notation rounded using\nrounding mode `roundingMode` to `decimalPlaces` decimal places, i.e with one digit before the\ndecimal point and `decimalPlaces` digits after it.\n\nIf the value of this BigNumber in exponential notation has fewer than `decimalPlaces` fraction\ndigits, the return value will be appended with zeros accordingly.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the number of digits after the\ndecimal point defaults to the minimum number of digits necessary to represent the value\nexactly.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = 45.6\ny = new BigNumber(x)\nx.toExponential()               // '4.56e+1'\ny.toExponential()               // '4.56e+1'\nx.toExponential(0)              // '5e+1'\ny.toExponential(0)              // '5e+1'\nx.toExponential(1)              // '4.6e+1'\ny.toExponential(1)              // '4.6e+1'\ny.toExponential(1, 1)           // '4.5e+1'  (ROUND_DOWN)\nx.toExponential(3)              // '4.560e+1'\ny.toExponential(3)              // '4.560e+1'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"toExponential",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}},toFixed:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in normal (fixed-point) notation\nrounded to `decimalPlaces` decimal places using rounding mode `roundingMode`.\n\nIf the value of this BigNumber in normal notation has fewer than `decimalPlaces` fraction\ndigits, the return value will be appended with zeros accordingly.\n\nUnlike `Number.prototype.toFixed`, which returns exponential notation if a number is greater or\nequal to 10**21, this method will always return normal notation.\n\nIf `decimalPlaces` is omitted or is `null` or `undefined`, the return value will be unrounded\nand in normal notation. This is also unlike `Number.prototype.toFixed`, which returns the value\nto zero decimal places. It is useful when normal notation is required and the current\n`EXPONENTIAL_AT` setting causes `toString` to return exponential notation.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = 3.456\ny = new BigNumber(x)\nx.toFixed()                     // '3'\ny.toFixed()                     // '3.456'\ny.toFixed(0)                    // '3'\nx.toFixed(2)                    // '3.46'\ny.toFixed(2)                    // '3.46'\ny.toFixed(2, 1)                 // '3.45'  (ROUND_DOWN)\nx.toFixed(5)                    // '3.45600'\ny.toFixed(5)                    // '3.45600'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"toFixed",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}},toFormat:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in normal (fixed-point) notation\nrounded to `decimalPlaces` decimal places using rounding mode `roundingMode`, and formatted\naccording to the properties of the `format` or `FORMAT` object.\n\nThe formatting object may contain some or all of the properties shown in the examples below.\n\nIf `decimalPlaces` is omitted or is `null` or `undefined`, then the return value is not\nrounded to a fixed number of decimal places.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nIf `format` is omitted or is `null` or `undefined`, `FORMAT` is used.\n\nThrows if `decimalPlaces`, `roundingMode`, or `format` is invalid.\n\n```ts\nfmt = {\n  decimalSeparator: '.',\n  groupSeparator: ',',\n  groupSize: 3,\n  secondaryGroupSize: 0,\n  fractionGroupSeparator: ' ',\n  fractionGroupSize: 0\n}\n\nx = new BigNumber('123456789.123456789')\n\n// Set the global formatting options\nBigNumber.config({ FORMAT: fmt })\n\nx.toFormat()                              // '123,456,789.123456789'\nx.toFormat(3)                             // '123,456,789.123'\n\n// If a reference to the object assigned to FORMAT has been retained,\n// the format properties can be changed directly\nfmt.groupSeparator = ' '\nfmt.fractionGroupSize = 5\nx.toFormat()                              // '123 456 789.12345 6789'\n\n// Alternatively, pass the formatting options as an argument\nfmt = {\n  decimalSeparator: ',',\n  groupSeparator: '.',\n  groupSize: 3,\n  secondaryGroupSize: 2\n}\n\nx.toFormat()                              // '123 456 789.12345 6789'\nx.toFormat(fmt)                           // '12.34.56.789,123456789'\nx.toFormat(2, fmt)                        // '12.34.56.789,12'\nx.toFormat(3, BigNumber.ROUND_UP, fmt)    // '12.34.56.789,124'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.\n@param format Formatting options object. See `BigNumber.Format`.",name:"toFormat",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode: RoundingMode, format?: Format | undefined): string; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (decimalPlaces?: number | undefined): string; (decimalPlaces: number, format: Format): string; (format: Format): string; }"}},toFraction:{defaultValue:null,description:"Returns an array of two BigNumbers representing the value of this BigNumber as a simple\nfraction with an integer numerator and an integer denominator.\nThe denominator will be a positive non-zero value less than or equal to `max_denominator`.\nIf a maximum denominator, `max_denominator`, is not specified, or is `null` or `undefined`, the\ndenominator will be the lowest value necessary to represent the number exactly.\n\nThrows if `max_denominator` is invalid.\n\n```ts\nx = new BigNumber(1.75)\nx.toFraction()                  // '7, 4'\n\npi = new BigNumber('3.14159265358')\npi.toFraction()                 // '157079632679,50000000000'\npi.toFraction(100000)           // '312689, 99532'\npi.toFraction(10000)            // '355, 113'\npi.toFraction(100)              // '311, 99'\npi.toFraction(10)               // '22, 7'\npi.toFraction(1)                // '3, 1'\n```\n@param max_denominator The maximum denominator, integer > 0, or Infinity.",name:"toFraction",required:!0,type:{name:"(max_denominator?: Value | undefined) => [BigNumber, BigNumber]"}},toJSON:{defaultValue:null,description:"As `valueOf`.",name:"toJSON",required:!0,type:{name:"() => string"}},toNumber:{defaultValue:null,description:"Returns the value of this BigNumber as a JavaScript primitive number.\n\nUsing the unary plus operator gives the same result.\n\n```ts\nx = new BigNumber(456.789)\nx.toNumber()                    // 456.789\n+x                              // 456.789\n\ny = new BigNumber('45987349857634085409857349856430985')\ny.toNumber()                    // 4.598734985763409e+34\n\nz = new BigNumber(-0)\n1 / z.toNumber()                // -Infinity\n1 / +z                          // -Infinity\n```",name:"toNumber",required:!0,type:{name:"() => number"}},toPrecision:{defaultValue:null,description:"Returns a string representing the value of this BigNumber rounded to `significantDigits`\nsignificant digits using rounding mode `roundingMode`.\n\nIf `significantDigits` is less than the number of digits necessary to represent the integer\npart of the value in normal (fixed-point) notation, then exponential notation is used.\n\nIf `significantDigits` is omitted, or is `null` or `undefined`, then the return value is the\nsame as `n.toString()`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = 45.6\ny = new BigNumber(x)\nx.toPrecision()                 // '45.6'\ny.toPrecision()                 // '45.6'\nx.toPrecision(1)                // '5e+1'\ny.toPrecision(1)                // '5e+1'\ny.toPrecision(2, 0)             // '4.6e+1'  (ROUND_UP)\ny.toPrecision(2, 1)             // '4.5e+1'  (ROUND_DOWN)\nx.toPrecision(5)                // '45.600'\ny.toPrecision(5)                // '45.600'\n```\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer 0 to 8.",name:"toPrecision",required:!0,type:{name:"{ (significantDigits: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/hooks/math/useToPrecision.tsx#useToPrecision12"]={docgenInfo:useToPrecision12.__docgenInfo,name:"useToPrecision12",path:"src/hooks/math/useToPrecision.tsx#useToPrecision12"})}catch(__react_docgen_typescript_loader_error){}try{useToPrecision18.displayName="useToPrecision18",useToPrecision18.__docgenInfo={description:"",displayName:"useToPrecision18",props:{c:{defaultValue:null,description:"The coefficient of the value of this BigNumber, an array of base 1e14 integer numbers, or null.",name:"c",required:!0,type:{name:"number[] | null"}},e:{defaultValue:null,description:"The exponent of the value of this BigNumber, an integer number, -1000000000 to 1000000000, or null.",name:"e",required:!0,type:{name:"number | null"}},s:{defaultValue:null,description:"The sign of the value of this BigNumber, -1, 1, or null.",name:"s",required:!0,type:{name:"number | null"}},absoluteValue:{defaultValue:null,description:"Returns a BigNumber whose value is the absolute value, i.e. the magnitude, of the value of this\nBigNumber.\n\nThe return value is always exact and unrounded.\n\n```ts\nx = new BigNumber(-0.8)\nx.absoluteValue()           // '0.8'\n```",name:"absoluteValue",required:!0,type:{name:"() => BigNumber"}},abs:{defaultValue:null,description:"Returns a BigNumber whose value is the absolute value, i.e. the magnitude, of the value of this\nBigNumber.\n\nThe return value is always exact and unrounded.\n\n```ts\nx = new BigNumber(-0.8)\nx.abs()                     // '0.8'\n```",name:"abs",required:!0,type:{name:"() => BigNumber"}},comparedTo:{defaultValue:null,description:"Returns |                                                               |\n:-------:|:--------------------------------------------------------------|\n   1    | If the value of this BigNumber is greater than the value of `n`\n  -1    | If the value of this BigNumber is less than the value of `n`\n   0    | If this BigNumber and `n` have the same value\n`null`  | If the value of either this BigNumber or `n` is `NaN`\n\n```ts\n\nx = new BigNumber(Infinity)\ny = new BigNumber(5)\nx.comparedTo(y)                 // 1\nx.comparedTo(x.minus(1))        // 0\ny.comparedTo(NaN)               // null\ny.comparedTo('110', 2)          // -1\n```\n@param n A numeric value.\n@param base The base of n.",name:"comparedTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => number"}},decimalPlaces:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded by rounding mode\n`roundingMode` to a maximum of `decimalPlaces` decimal places.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the return value is the number of\ndecimal places of the value of this BigNumber, or `null` if the value of this BigNumber is\n±`Infinity` or `NaN`.\n\nIf `roundingMode` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(1234.56)\nx.decimalPlaces()                      // 2\nx.decimalPlaces(1)                     // '1234.6'\nx.decimalPlaces(2)                     // '1234.56'\nx.decimalPlaces(10)                    // '1234.56'\nx.decimalPlaces(0, 1)                  // '1234'\nx.decimalPlaces(0, 6)                  // '1235'\nx.decimalPlaces(1, 1)                  // '1234.5'\nx.decimalPlaces(1, BigNumber.ROUND_HALF_EVEN)     // '1234.6'\nx                                      // '1234.56'\ny = new BigNumber('9.9e-101')\ny.decimalPlaces()                      // 102\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"decimalPlaces",required:!0,type:{name:"{ (): number; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},dp:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded by rounding mode\n`roundingMode` to a maximum of `decimalPlaces` decimal places.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the return value is the number of\ndecimal places of the value of this BigNumber, or `null` if the value of this BigNumber is\n±`Infinity` or `NaN`.\n\nIf `roundingMode` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(1234.56)\nx.dp()                                 // 2\nx.dp(1)                                // '1234.6'\nx.dp(2)                                // '1234.56'\nx.dp(10)                               // '1234.56'\nx.dp(0, 1)                             // '1234'\nx.dp(0, 6)                             // '1235'\nx.dp(1, 1)                             // '1234.5'\nx.dp(1, BigNumber.ROUND_HALF_EVEN)     // '1234.6'\nx                                      // '1234.56'\ny = new BigNumber('9.9e-101')\ny.dp()                                 // 102\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"dp",required:!0,type:{name:"{ (): number; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},dividedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber divided by `n`, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\n```ts\nx = new BigNumber(355)\ny = new BigNumber(113)\nx.dividedBy(y)                  // '3.14159292035398230088'\nx.dividedBy(5)                  // '71'\nx.dividedBy(47, 16)             // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"dividedBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},div:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber divided by `n`, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\n```ts\nx = new BigNumber(355)\ny = new BigNumber(113)\nx.div(y)                    // '3.14159292035398230088'\nx.div(5)                    // '71'\nx.div(47, 16)               // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"div",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},dividedToIntegerBy:{defaultValue:null,description:"Returns a BigNumber whose value is the integer part of dividing the value of this BigNumber by\n`n`.\n\n```ts\nx = new BigNumber(5)\ny = new BigNumber(3)\nx.dividedToIntegerBy(y)              // '1'\nx.dividedToIntegerBy(0.7)            // '7'\nx.dividedToIntegerBy('0.f', 16)      // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"dividedToIntegerBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},idiv:{defaultValue:null,description:"Returns a BigNumber whose value is the integer part of dividing the value of this BigNumber by\n`n`.\n\n```ts\nx = new BigNumber(5)\ny = new BigNumber(3)\nx.idiv(y)                       // '1'\nx.idiv(0.7)                     // '7'\nx.idiv('0.f', 16)               // '5'\n```\n@param n A numeric value.\n@param base The base of n.",name:"idiv",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},exponentiatedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber exponentiated by `n`, i.e.\nraised to the power `n`, and optionally modulo a modulus `m`.\n\nIf `n` is negative the result is rounded according to the current `DECIMAL_PLACES` and\n`ROUNDING_MODE` settings.\n\nAs the number of digits of the result of the power operation can grow so large so quickly,\ne.g. 123.456**10000 has over 50000 digits, the number of significant digits calculated is\nlimited to the value of the `POW_PRECISION` setting (unless a modulus `m` is specified).\n\nBy default `POW_PRECISION` is set to 0. This means that an unlimited number of significant\ndigits will be calculated, and that the method's performance will decrease dramatically for\nlarger exponents.\n\nIf `m` is specified and the value of `m`, `n` and this BigNumber are integers and `n` is\npositive, then a fast modular exponentiation algorithm is used, otherwise the operation will\nbe performed as `x.exponentiatedBy(n).modulo(m)` with a `POW_PRECISION` of 0.\n\nThrows if `n` is not an integer.\n\n```ts\nMath.pow(0.7, 2)                    // 0.48999999999999994\nx = new BigNumber(0.7)\nx.exponentiatedBy(2)                // '0.49'\nBigNumber(3).exponentiatedBy(-2)    // '0.11111111111111111111'\n```\n@param n The exponent, an integer.\n@param m The modulus.",name:"exponentiatedBy",required:!0,type:{name:"{ (n: Value, m?: Value | undefined): BigNumber; (n: number, m?: Value | undefined): BigNumber; }"}},pow:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber exponentiated by `n`, i.e.\nraised to the power `n`, and optionally modulo a modulus `m`.\n\nIf `n` is negative the result is rounded according to the current `DECIMAL_PLACES` and\n`ROUNDING_MODE` settings.\n\nAs the number of digits of the result of the power operation can grow so large so quickly,\ne.g. 123.456**10000 has over 50000 digits, the number of significant digits calculated is\nlimited to the value of the `POW_PRECISION` setting (unless a modulus `m` is specified).\n\nBy default `POW_PRECISION` is set to 0. This means that an unlimited number of significant\ndigits will be calculated, and that the method's performance will decrease dramatically for\nlarger exponents.\n\nIf `m` is specified and the value of `m`, `n` and this BigNumber are integers and `n` is\npositive, then a fast modular exponentiation algorithm is used, otherwise the operation will\nbe performed as `x.pow(n).modulo(m)` with a `POW_PRECISION` of 0.\n\nThrows if `n` is not an integer.\n\n```ts\nMath.pow(0.7, 2)                   // 0.48999999999999994\nx = new BigNumber(0.7)\nx.pow(2)                           // '0.49'\nBigNumber(3).pow(-2)               // '0.11111111111111111111'\n```\n@param n The exponent, an integer.\n@param m The modulus.",name:"pow",required:!0,type:{name:"{ (n: Value, m?: Value | undefined): BigNumber; (n: number, m?: Value | undefined): BigNumber; }"}},integerValue:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber rounded to an integer using\nrounding mode `rm`.\n\nIf `rm` is omitted, or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `rm` is invalid.\n\n```ts\nx = new BigNumber(123.456)\nx.integerValue()                        // '123'\nx.integerValue(BigNumber.ROUND_CEIL)    // '124'\ny = new BigNumber(-12.7)\ny.integerValue()                        // '-13'\nx.integerValue(BigNumber.ROUND_DOWN)    // '-12'\n```\n@param rm The roundng mode, an integer, 0 to 8.",name:"integerValue",required:!0,type:{name:"(rm?: RoundingMode | undefined) => BigNumber"}},isEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is equal to the value of `n`, otherwise returns\n`false`.\n\nAs with JavaScript, `NaN` does not equal `NaN`.\n\n```ts\n0 === 1e-324                           // true\nx = new BigNumber(0)\nx.isEqualTo('1e-324')                  // false\nBigNumber(-0).isEqualTo(x)             // true  ( -0 === 0 )\nBigNumber(255).isEqualTo('ff', 16)     // true\n\ny = new BigNumber(NaN)\ny.isEqualTo(NaN)                // false\n```\n@param n A numeric value.\n@param base The base of n.",name:"isEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},eq:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is equal to the value of `n`, otherwise returns\n`false`.\n\nAs with JavaScript, `NaN` does not equal `NaN`.\n\n```ts\n0 === 1e-324                    // true\nx = new BigNumber(0)\nx.eq('1e-324')                  // false\nBigNumber(-0).eq(x)             // true  ( -0 === 0 )\nBigNumber(255).eq('ff', 16)     // true\n\ny = new BigNumber(NaN)\ny.eq(NaN)                       // false\n```\n@param n A numeric value.\n@param base The base of n.",name:"eq",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isFinite:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is a finite number, otherwise returns `false`.\n\nThe only possible non-finite values of a BigNumber are `NaN`, `Infinity` and `-Infinity`.\n\n```ts\nx = new BigNumber(1)\nx.isFinite()                    // true\ny = new BigNumber(Infinity)\ny.isFinite()                    // false\n```",name:"isFinite",required:!0,type:{name:"() => boolean"}},isGreaterThan:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than the value of `n`, otherwise\nreturns `false`.\n\n```ts\n0.1 > (0.3 - 0.2)                             // true\nx = new BigNumber(0.1)\nx.isGreaterThan(BigNumber(0.3).minus(0.2))    // false\nBigNumber(0).isGreaterThan(x)                 // false\nBigNumber(11, 3).isGreaterThan(11.1, 2)       // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isGreaterThan",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},gt:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than the value of `n`, otherwise\nreturns `false`.\n\n```ts\n0.1 > (0.3 - 0                     // true\nx = new BigNumber(0.1)\nx.gt(BigNumber(0.3).minus(0.2))    // false\nBigNumber(0).gt(x)                 // false\nBigNumber(11, 3).gt(11.1, 2)       // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"gt",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isGreaterThanOrEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n(0.3 - 0.2) >= 0.1                                  // false\nx = new BigNumber(0.3).minus(0.2)\nx.isGreaterThanOrEqualTo(0.1)                       // true\nBigNumber(1).isGreaterThanOrEqualTo(x)              // true\nBigNumber(10, 18).isGreaterThanOrEqualTo('i', 36)   // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isGreaterThanOrEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},gte:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is greater than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n(0.3 - 0.2) >= 0.1                    // false\nx = new BigNumber(0.3).minus(0.2)\nx.gte(0.1)                            // true\nBigNumber(1).gte(x)                   // true\nBigNumber(10, 18).gte('i', 36)        // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"gte",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isInteger:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is an integer, otherwise returns `false`.\n\n```ts\nx = new BigNumber(1)\nx.isInteger()                   // true\ny = new BigNumber(123.456)\ny.isInteger()                   // false\n```",name:"isInteger",required:!0,type:{name:"() => boolean"}},isLessThan:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than the value of `n`, otherwise returns\n`false`.\n\n```ts\n(0.3 - 0.2) < 0.1                       // true\nx = new BigNumber(0.3).minus(0.2)\nx.isLessThan(0.1)                       // false\nBigNumber(0).isLessThan(x)              // true\nBigNumber(11.1, 2).isLessThan(11, 3)    // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isLessThan",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},lt:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than the value of `n`, otherwise returns\n`false`.\n\n```ts\n(0.3 - 0.2) < 0.1                       // true\nx = new BigNumber(0.3).minus(0.2)\nx.lt(0.1)                               // false\nBigNumber(0).lt(x)                      // true\nBigNumber(11.1, 2).lt(11, 3)            // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"lt",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isLessThanOrEqualTo:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n0.1 <= (0.3 - 0.2)                                 // false\nx = new BigNumber(0.1)\nx.isLessThanOrEqualTo(BigNumber(0.3).minus(0.2))   // true\nBigNumber(-1).isLessThanOrEqualTo(x)               // true\nBigNumber(10, 18).isLessThanOrEqualTo('i', 36)     // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"isLessThanOrEqualTo",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},lte:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is less than or equal to the value of `n`,\notherwise returns `false`.\n\n```ts\n0.1 <= (0.3 - 0.2)                  // false\nx = new BigNumber(0.1)\nx.lte(BigNumber(0.3).minus(0.2))    // true\nBigNumber(-1).lte(x)                // true\nBigNumber(10, 18).lte('i', 36)      // true\n```\n@param n A numeric value.\n@param base The base of n.",name:"lte",required:!0,type:{name:"(n: Value, base?: number | undefined) => boolean"}},isNaN:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is `NaN`, otherwise returns `false`.\n\n```ts\nx = new BigNumber(NaN)\nx.isNaN()                       // true\ny = new BigNumber('Infinity')\ny.isNaN()                       // false\n```",name:"isNaN",required:!0,type:{name:"() => boolean"}},isNegative:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is negative, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isNegative()                  // true\ny = new BigNumber(2)\ny.isNegative()                  // false\n```",name:"isNegative",required:!0,type:{name:"() => boolean"}},isPositive:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is positive, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isPositive()                  // false\ny = new BigNumber(2)\ny.isPositive()                  // true\n```",name:"isPositive",required:!0,type:{name:"() => boolean"}},isZero:{defaultValue:null,description:"Returns `true` if the value of this BigNumber is zero or minus zero, otherwise returns `false`.\n\n```ts\nx = new BigNumber(-0)\nx.isZero()                 // true\n```",name:"isZero",required:!0,type:{name:"() => boolean"}},minus:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber minus `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.3 - 0.1                       // 0.19999999999999998\nx = new BigNumber(0.3)\nx.minus(0.1)                    // '0.2'\nx.minus(0.6, 20)                // '0'\n```\n@param n A numeric value.\n@param base The base of n.",name:"minus",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},modulo:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber modulo `n`, i.e. the integer\nremainder of dividing this BigNumber by `n`.\n\nThe value returned, and in particular its sign, is dependent on the value of the `MODULO_MODE`\nsetting of this BigNumber constructor. If it is 1 (default value), the result will have the\nsame sign as this BigNumber, and it will match that of Javascript's `%` operator (within the\nlimits of double precision) and BigDecimal's `remainder` method.\n\nThe return value is always exact and unrounded.\n\nSee `MODULO_MODE` for a description of the other modulo modes.\n\n```ts\n1 % 0.9                         // 0.09999999999999998\nx = new BigNumber(1)\nx.modulo(0.9)                   // '0.1'\ny = new BigNumber(33)\ny.modulo('a', 33)               // '3'\n```\n@param n A numeric value.\n@param base The base of n.",name:"modulo",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},mod:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber modulo `n`, i.e. the integer\nremainder of dividing this BigNumber by `n`.\n\nThe value returned, and in particular its sign, is dependent on the value of the `MODULO_MODE`\nsetting of this BigNumber constructor. If it is 1 (default value), the result will have the\nsame sign as this BigNumber, and it will match that of Javascript's `%` operator (within the\nlimits of double precision) and BigDecimal's `remainder` method.\n\nThe return value is always exact and unrounded.\n\nSee `MODULO_MODE` for a description of the other modulo modes.\n\n```ts\n1 % 0.9                      // 0.09999999999999998\nx = new BigNumber(1)\nx.mod(0.9)                   // '0.1'\ny = new BigNumber(33)\ny.mod('a', 33)               // '3'\n```\n@param n A numeric value.\n@param base The base of n.",name:"mod",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},multipliedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber multiplied by `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.6 * 3                                // 1.7999999999999998\nx = new BigNumber(0.6)\ny = x.multipliedBy(3)                  // '1.8'\nBigNumber('7e+500').multipliedBy(y)    // '1.26e+501'\nx.multipliedBy('-a', 16)               // '-6'\n```\n@param n A numeric value.\n@param base The base of n.",name:"multipliedBy",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},times:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber multiplied by `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.6 * 3                         // 1.7999999999999998\nx = new BigNumber(0.6)\ny = x.times(3)                  // '1.8'\nBigNumber('7e+500').times(y)    // '1.26e+501'\nx.times('-a', 16)               // '-6'\n```\n@param n A numeric value.\n@param base The base of n.",name:"times",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},negated:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber negated, i.e. multiplied by -1.\n\n```ts\nx = new BigNumber(1.8)\nx.negated()                     // '-1.8'\ny = new BigNumber(-1.3)\ny.negated()                     // '1.3'\n```",name:"negated",required:!0,type:{name:"() => BigNumber"}},plus:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber plus `n`.\n\nThe return value is always exact and unrounded.\n\n```ts\n0.1 + 0.2                       // 0.30000000000000004\nx = new BigNumber(0.1)\ny = x.plus(0.2)                 // '0.3'\nBigNumber(0.7).plus(x).plus(y)  // '1.1'\nx.plus('0.1', 8)                // '0.225'\n```\n@param n A numeric value.\n@param base The base of n.",name:"plus",required:!0,type:{name:"(n: Value, base?: number | undefined) => BigNumber"}},precision:{defaultValue:null,description:"Returns the number of significant digits of the value of this BigNumber, or `null` if the value\nof this BigNumber is ±`Infinity` or `NaN`.\n\nIf `includeZeros` is true then any trailing zeros of the integer part of the value of this\nBigNumber are counted as significant digits, otherwise they are not.\n\nThrows if `includeZeros` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.precision()                         // 9\ny = new BigNumber(987000)\ny.precision(false)                    // 3\ny.precision(true)                     // 6\n```\nReturns a BigNumber whose value is the value of this BigNumber rounded to a precision of\n`significantDigits` significant digits using rounding mode `roundingMode`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` will be used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.precision(6)                         // '9876.54'\nx.precision(6, BigNumber.ROUND_UP)     // '9876.55'\nx.precision(2)                         // '9900'\nx.precision(2, 1)                      // '9800'\nx                                      // '9876.54321'\n```\n@param includeZeros Whether to include integer trailing zeros in the significant digit count.\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"precision",required:!0,type:{name:"{ (includeZeros?: boolean | undefined): number; (significantDigits: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},sd:{defaultValue:null,description:"Returns the number of significant digits of the value of this BigNumber,\nor `null` if the value of this BigNumber is ±`Infinity` or `NaN`.\n\nIf `includeZeros` is true then any trailing zeros of the integer part of\nthe value of this BigNumber are counted as significant digits, otherwise\nthey are not.\n\nThrows if `includeZeros` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.sd()                         // 9\ny = new BigNumber(987000)\ny.sd(false)                    // 3\ny.sd(true)                     // 6\n```\nReturns a BigNumber whose value is the value of this BigNumber rounded to a precision of\n`significantDigits` significant digits using rounding mode `roundingMode`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` will be used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = new BigNumber(9876.54321)\nx.sd(6)                           // '9876.54'\nx.sd(6, BigNumber.ROUND_UP)       // '9876.55'\nx.sd(2)                           // '9900'\nx.sd(2, 1)                        // '9800'\nx                                 // '9876.54321'\n```\n@param includeZeros Whether to include integer trailing zeros in the significant digit count.\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"sd",required:!0,type:{name:"{ (includeZeros?: boolean | undefined): number; (significantDigits: number, roundingMode?: RoundingMode | undefined): BigNumber; }"}},shiftedBy:{defaultValue:null,description:"Returns a BigNumber whose value is the value of this BigNumber shifted by `n` places.\n\nThe shift is of the decimal point, i.e. of powers of ten, and is to the left if `n` is negative\nor to the right if `n` is positive.\n\nThe return value is always exact and unrounded.\n\nThrows if `n` is invalid.\n\n```ts\nx = new BigNumber(1.23)\nx.shiftedBy(3)                      // '1230'\nx.shiftedBy(-3)                     // '0.00123'\n```\n@param n The shift value, integer, -9007199254740991 to 9007199254740991.",name:"shiftedBy",required:!0,type:{name:"(n: number) => BigNumber"}},squareRoot:{defaultValue:null,description:"Returns a BigNumber whose value is the square root of the value of this BigNumber, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\nThe return value will be correctly rounded, i.e. rounded as if the result was first calculated\nto an infinite number of correct digits before rounding.\n\n```ts\nx = new BigNumber(16)\nx.squareRoot()                  // '4'\ny = new BigNumber(3)\ny.squareRoot()                  // '1.73205080756887729353'\n```",name:"squareRoot",required:!0,type:{name:"() => BigNumber"}},sqrt:{defaultValue:null,description:"Returns a BigNumber whose value is the square root of the value of this BigNumber, rounded\naccording to the current `DECIMAL_PLACES` and `ROUNDING_MODE` settings.\n\nThe return value will be correctly rounded, i.e. rounded as if the result was first calculated\nto an infinite number of correct digits before rounding.\n\n```ts\nx = new BigNumber(16)\nx.sqrt()                  // '4'\ny = new BigNumber(3)\ny.sqrt()                  // '1.73205080756887729353'\n```",name:"sqrt",required:!0,type:{name:"() => BigNumber"}},toExponential:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in exponential notation rounded using\nrounding mode `roundingMode` to `decimalPlaces` decimal places, i.e with one digit before the\ndecimal point and `decimalPlaces` digits after it.\n\nIf the value of this BigNumber in exponential notation has fewer than `decimalPlaces` fraction\ndigits, the return value will be appended with zeros accordingly.\n\nIf `decimalPlaces` is omitted, or is `null` or `undefined`, the number of digits after the\ndecimal point defaults to the minimum number of digits necessary to represent the value\nexactly.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = 45.6\ny = new BigNumber(x)\nx.toExponential()               // '4.56e+1'\ny.toExponential()               // '4.56e+1'\nx.toExponential(0)              // '5e+1'\ny.toExponential(0)              // '5e+1'\nx.toExponential(1)              // '4.6e+1'\ny.toExponential(1)              // '4.6e+1'\ny.toExponential(1, 1)           // '4.5e+1'  (ROUND_DOWN)\nx.toExponential(3)              // '4.560e+1'\ny.toExponential(3)              // '4.560e+1'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"toExponential",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}},toFixed:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in normal (fixed-point) notation\nrounded to `decimalPlaces` decimal places using rounding mode `roundingMode`.\n\nIf the value of this BigNumber in normal notation has fewer than `decimalPlaces` fraction\ndigits, the return value will be appended with zeros accordingly.\n\nUnlike `Number.prototype.toFixed`, which returns exponential notation if a number is greater or\nequal to 10**21, this method will always return normal notation.\n\nIf `decimalPlaces` is omitted or is `null` or `undefined`, the return value will be unrounded\nand in normal notation. This is also unlike `Number.prototype.toFixed`, which returns the value\nto zero decimal places. It is useful when normal notation is required and the current\n`EXPONENTIAL_AT` setting causes `toString` to return exponential notation.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `decimalPlaces` or `roundingMode` is invalid.\n\n```ts\nx = 3.456\ny = new BigNumber(x)\nx.toFixed()                     // '3'\ny.toFixed()                     // '3.456'\ny.toFixed(0)                    // '3'\nx.toFixed(2)                    // '3.46'\ny.toFixed(2)                    // '3.46'\ny.toFixed(2, 1)                 // '3.45'  (ROUND_DOWN)\nx.toFixed(5)                    // '3.45600'\ny.toFixed(5)                    // '3.45600'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.",name:"toFixed",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}},toFormat:{defaultValue:null,description:"Returns a string representing the value of this BigNumber in normal (fixed-point) notation\nrounded to `decimalPlaces` decimal places using rounding mode `roundingMode`, and formatted\naccording to the properties of the `format` or `FORMAT` object.\n\nThe formatting object may contain some or all of the properties shown in the examples below.\n\nIf `decimalPlaces` is omitted or is `null` or `undefined`, then the return value is not\nrounded to a fixed number of decimal places.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nIf `format` is omitted or is `null` or `undefined`, `FORMAT` is used.\n\nThrows if `decimalPlaces`, `roundingMode`, or `format` is invalid.\n\n```ts\nfmt = {\n  decimalSeparator: '.',\n  groupSeparator: ',',\n  groupSize: 3,\n  secondaryGroupSize: 0,\n  fractionGroupSeparator: ' ',\n  fractionGroupSize: 0\n}\n\nx = new BigNumber('123456789.123456789')\n\n// Set the global formatting options\nBigNumber.config({ FORMAT: fmt })\n\nx.toFormat()                              // '123,456,789.123456789'\nx.toFormat(3)                             // '123,456,789.123'\n\n// If a reference to the object assigned to FORMAT has been retained,\n// the format properties can be changed directly\nfmt.groupSeparator = ' '\nfmt.fractionGroupSize = 5\nx.toFormat()                              // '123 456 789.12345 6789'\n\n// Alternatively, pass the formatting options as an argument\nfmt = {\n  decimalSeparator: ',',\n  groupSeparator: '.',\n  groupSize: 3,\n  secondaryGroupSize: 2\n}\n\nx.toFormat()                              // '123 456 789.12345 6789'\nx.toFormat(fmt)                           // '12.34.56.789,123456789'\nx.toFormat(2, fmt)                        // '12.34.56.789,12'\nx.toFormat(3, BigNumber.ROUND_UP, fmt)    // '12.34.56.789,124'\n```\n@param decimalPlaces Decimal places, integer, 0 to 1e+9.\n@param roundingMode Rounding mode, integer, 0 to 8.\n@param format Formatting options object. See `BigNumber.Format`.",name:"toFormat",required:!0,type:{name:"{ (decimalPlaces: number, roundingMode: RoundingMode, format?: Format | undefined): string; (decimalPlaces: number, roundingMode?: RoundingMode | undefined): string; (decimalPlaces?: number | undefined): string; (decimalPlaces: number, format: Format): string; (format: Format): string; }"}},toFraction:{defaultValue:null,description:"Returns an array of two BigNumbers representing the value of this BigNumber as a simple\nfraction with an integer numerator and an integer denominator.\nThe denominator will be a positive non-zero value less than or equal to `max_denominator`.\nIf a maximum denominator, `max_denominator`, is not specified, or is `null` or `undefined`, the\ndenominator will be the lowest value necessary to represent the number exactly.\n\nThrows if `max_denominator` is invalid.\n\n```ts\nx = new BigNumber(1.75)\nx.toFraction()                  // '7, 4'\n\npi = new BigNumber('3.14159265358')\npi.toFraction()                 // '157079632679,50000000000'\npi.toFraction(100000)           // '312689, 99532'\npi.toFraction(10000)            // '355, 113'\npi.toFraction(100)              // '311, 99'\npi.toFraction(10)               // '22, 7'\npi.toFraction(1)                // '3, 1'\n```\n@param max_denominator The maximum denominator, integer > 0, or Infinity.",name:"toFraction",required:!0,type:{name:"(max_denominator?: Value | undefined) => [BigNumber, BigNumber]"}},toJSON:{defaultValue:null,description:"As `valueOf`.",name:"toJSON",required:!0,type:{name:"() => string"}},toNumber:{defaultValue:null,description:"Returns the value of this BigNumber as a JavaScript primitive number.\n\nUsing the unary plus operator gives the same result.\n\n```ts\nx = new BigNumber(456.789)\nx.toNumber()                    // 456.789\n+x                              // 456.789\n\ny = new BigNumber('45987349857634085409857349856430985')\ny.toNumber()                    // 4.598734985763409e+34\n\nz = new BigNumber(-0)\n1 / z.toNumber()                // -Infinity\n1 / +z                          // -Infinity\n```",name:"toNumber",required:!0,type:{name:"() => number"}},toPrecision:{defaultValue:null,description:"Returns a string representing the value of this BigNumber rounded to `significantDigits`\nsignificant digits using rounding mode `roundingMode`.\n\nIf `significantDigits` is less than the number of digits necessary to represent the integer\npart of the value in normal (fixed-point) notation, then exponential notation is used.\n\nIf `significantDigits` is omitted, or is `null` or `undefined`, then the return value is the\nsame as `n.toString()`.\n\nIf `roundingMode` is omitted or is `null` or `undefined`, `ROUNDING_MODE` is used.\n\nThrows if `significantDigits` or `roundingMode` is invalid.\n\n```ts\nx = 45.6\ny = new BigNumber(x)\nx.toPrecision()                 // '45.6'\ny.toPrecision()                 // '45.6'\nx.toPrecision(1)                // '5e+1'\ny.toPrecision(1)                // '5e+1'\ny.toPrecision(2, 0)             // '4.6e+1'  (ROUND_UP)\ny.toPrecision(2, 1)             // '4.5e+1'  (ROUND_DOWN)\nx.toPrecision(5)                // '45.600'\ny.toPrecision(5)                // '45.600'\n```\n@param significantDigits Significant digits, integer, 1 to 1e+9.\n@param roundingMode Rounding mode, integer 0 to 8.",name:"toPrecision",required:!0,type:{name:"{ (significantDigits: number, roundingMode?: RoundingMode | undefined): string; (): string; }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/hooks/math/useToPrecision.tsx#useToPrecision18"]={docgenInfo:useToPrecision18.__docgenInfo,name:"useToPrecision18",path:"src/hooks/math/useToPrecision.tsx#useToPrecision18"})}catch(__react_docgen_typescript_loader_error){}},"./src/misc/Colors.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Colors",(function(){return Colors}));var _colors_module_scss__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/misc/colors.module.scss"),_colors_module_scss__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_colors_module_scss__WEBPACK_IMPORTED_MODULE_0__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Color=_ref=>{let{color:color}=_ref;return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("div",{className:"row justify-content-center text-center",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{style:{width:"150px",height:"150px",marginTop:"24px",marginBottom:"8px"},className:"bg-".concat(color)}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("p",{children:color})]})},ColorGrid=()=>{const colors=_colors_module_scss__WEBPACK_IMPORTED_MODULE_0___default.a.colors.replace("[","").replace("]","").split(" ");return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{className:"container",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{className:"row",children:colors.map(((color,i)=>Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{className:"col-2 justify-content-center align-content-center",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Color,{color:color})},i)))})})};__webpack_exports__.default={component:ColorGrid,title:"Shared/Colors"};const Colors=()=>Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ColorGrid,{})},"./src/misc/StorybookWrapper.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return StorybookWrapper}));var provider=__webpack_require__("./node_modules/react-intl/lib/src/components/provider.js");let Locale;!function(Locale){Locale.EN="en"}(Locale||(Locale={}));__webpack_require__("./src/misc/defaults.scss"),__webpack_require__("./node_modules/typeface-roboto/index.css");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const StorybookWrapper=_ref=>{let{children:children}=_ref;return Object(jsx_runtime.jsx)(provider.a,{messages:{},locale:Locale.EN,defaultLocale:"en",children:children})};try{StorybookWrapper.displayName="StorybookWrapper",StorybookWrapper.__docgenInfo={description:"",displayName:"StorybookWrapper",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/misc/StorybookWrapper.tsx#StorybookWrapper"]={docgenInfo:StorybookWrapper.__docgenInfo,name:"StorybookWrapper",path:"src/misc/StorybookWrapper.tsx#StorybookWrapper"})}catch(__react_docgen_typescript_loader_error){}},"./src/misc/colors.module.scss":function(module,exports,__webpack_require__){module.exports={colors:"[gray-1 gray-2 gray-3 gray-4 green-1 orange-1 white-1 pink-1 red-1]",gray2Opacity0:"rgba(33,31,36,0)",red1:"#fa4b4b",red1Opacity70:"rgba(250,75,75,.7)",green1:"#4fffb0",green1Opacity70:"rgba(79,255,176,.7)",green1Opacity33:"rgba(79,255,176,.33)",orange1:"#ffa135",orange1Opacity70:"rgba(255,161,53,.7)",gray1:"#424250",gray2:"#211f24","text-gray-1":"colors_text-gray-1__3TTbl","bg-gray-1":"colors_bg-gray-1__3B41E","text-gray-2":"colors_text-gray-2__1G_IG","bg-gray-2":"colors_bg-gray-2__263nl","text-gray-3":"colors_text-gray-3__2jCKs","bg-gray-3":"colors_bg-gray-3__1WAlP","text-gray-4":"colors_text-gray-4__1eu3P","bg-gray-4":"colors_bg-gray-4__1_1jM","text-green-1":"colors_text-green-1__7R05J","bg-green-1":"colors_bg-green-1__1zpiW","text-orange-1":"colors_text-orange-1__h8GD4","bg-orange-1":"colors_bg-orange-1__3oWkA","text-white-1":"colors_text-white-1__2Ym0e","bg-white-1":"colors_bg-white-1__391eO","text-pink-1":"colors_text-pink-1__qlAYy","bg-pink-1":"colors_bg-pink-1__1Kdyk","text-red-1":"colors_text-red-1__2ABfo","bg-red-1":"colors_bg-red-1__d2Vg9"}},"./src/misc/defaults.scss":function(module,exports,__webpack_require__){},"./storybook-init-framework-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js")},1:function(module,exports,__webpack_require__){__webpack_require__("./node_modules/@storybook/core-server/node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_require__("./node_modules/@storybook/core-server/node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_require__("./storybook-init-framework-entry.js"),__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/common/config.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/react/config.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/react/dist/esm/client/preview/config-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-links/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/preset/addArgs.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-backgrounds/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-backgrounds/dist/esm/preset/addParameter.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-measure/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-outline/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./.storybook/preview.js-generated-config-entry.js"),module.exports=__webpack_require__("./generated-stories-entry.js")},2:function(module,exports){},3:function(module,exports){},4:function(module,exports){},5:function(module,exports){}},[[1,5,6]]]);